{"version":3,"sources":["../../src/client/index.js"],"names":["opts","ipfs","bitswap","block","bootstrap","config","dag","dht","dns","callbackify","variadic","files","id","key","name","object","pin","pubsub","repo","resolve","stats","stop","swarm","version","Object","assign","add","get","cat","stat"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe,UAACA,IAAD,EAAU;AACvB,MAAMC,OAAO;AACXC,aAAS,uBAAcF,IAAd,CADE;AAEXG,WAAO,qBAAYH,IAAZ,CAFI;AAGXI,eAAW,yBAAgBJ,IAAhB,CAHA;AAIXK,YAAQ,sBAAaL,IAAb,CAJG;AAKXM,SAAK,mBAAUN,IAAV,CALM;AAMXO,SAAK,mBAAUP,IAAV,CANM;AAOXQ,SAAKC,sBAAYC,QAAZ,CAAqB,wBAAO,UAAP,EAAmBV,IAAnB,CAArB,CAPM;AAQXW,WAAO,qBAAYX,IAAZ,CARI;AASXY,QAAI,2BAAY,wBAAO,SAAP,EAAkBZ,IAAlB,CAAZ,CATO;AAUXa,SAAK,mBAAUb,IAAV,CAVM;AAWXc,UAAM,oBAAWd,IAAX,CAXK;AAYXe,YAAQ,sBAAaf,IAAb,CAZG;AAaXgB,SAAK,mBAAUhB,IAAV,CAbM;AAcXiB,YAAQ,sBAAajB,IAAb,CAdG;AAeXkB,UAAM,oBAAWlB,IAAX,CAfK;AAgBXmB,aAASV,sBAAYC,QAAZ,CAAqB,wBAAO,cAAP,EAAuBV,IAAvB,CAArB,CAhBE;AAiBXoB,WAAO,qBAAYpB,IAAZ,CAjBI;AAkBXqB,UAAM,2BAAY,wBAAO,WAAP,EAAoBrB,IAApB,CAAZ,CAlBK;AAmBXsB,WAAO,qBAAYtB,IAAZ,CAnBI;AAoBXuB,aAAS,2BAAY,wBAAO,cAAP,EAAuBvB,IAAvB,CAAZ;AApBE,GAAb;;AAuBAwB,SAAOC,MAAP,CACExB,IADF,EAEE,kBAASD,IAAT,CAFF,EAGE,oBAAWA,IAAX,CAHF;;AAMA;AACAC,OAAKyB,GAAL,GAAWzB,KAAKU,KAAL,CAAWe,GAAtB;AACAzB,OAAK0B,GAAL,GAAW1B,KAAKU,KAAL,CAAWgB,GAAtB;AACA1B,OAAK2B,GAAL,GAAW3B,KAAKU,KAAL,CAAWiB,GAAtB;AACA3B,OAAKmB,KAAL,CAAWlB,OAAX,GAAqBD,KAAKC,OAAL,CAAa2B,IAAlC;AACA5B,OAAKmB,KAAL,CAAWF,IAAX,GAAkBjB,KAAKiB,IAAL,CAAUW,IAA5B;;AAEA,SAAO5B,IAAP;AACD,C","file":"index.js","sourcesContent":["import { caller } from 'postmsg-rpc'\nimport callbackify from 'callbackify'\nimport createBitswap from './bitswap'\nimport createBlock from './block'\nimport createBootstrap from './bootstrap'\nimport createConfig from './config'\nimport createDag from './dag'\nimport createDht from './dht'\nimport createFiles from './files'\nimport createKey from './key'\nimport createLs from './ls'\nimport createName from './name'\nimport createObject from './object'\nimport createPin from './pin'\nimport createPing from './ping'\nimport createPubsub from './pubsub'\nimport createRepo from './repo'\nimport createStats from './stats'\nimport createSwarm from './swarm'\n\nexport default (opts) => {\n  const ipfs = {\n    bitswap: createBitswap(opts),\n    block: createBlock(opts),\n    bootstrap: createBootstrap(opts),\n    config: createConfig(opts),\n    dag: createDag(opts),\n    dht: createDht(opts),\n    dns: callbackify.variadic(caller('ipfs.dns', opts)),\n    files: createFiles(opts),\n    id: callbackify(caller('ipfs.id', opts)),\n    key: createKey(opts),\n    name: createName(opts),\n    object: createObject(opts),\n    pin: createPin(opts),\n    pubsub: createPubsub(opts),\n    repo: createRepo(opts),\n    resolve: callbackify.variadic(caller('ipfs.resolve', opts)),\n    stats: createStats(opts),\n    stop: callbackify(caller('ipfs.stop', opts)),\n    swarm: createSwarm(opts),\n    version: callbackify(caller('ipfs.version', opts))\n  }\n\n  Object.assign(\n    ipfs,\n    createLs(opts),\n    createPing(opts)\n  )\n\n  // Aliases\n  ipfs.add = ipfs.files.add\n  ipfs.get = ipfs.files.get\n  ipfs.cat = ipfs.files.cat\n  ipfs.stats.bitswap = ipfs.bitswap.stat\n  ipfs.stats.repo = ipfs.repo.stat\n\n  return ipfs\n}\n"]}