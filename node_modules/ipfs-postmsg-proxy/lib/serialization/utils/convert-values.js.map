{"version":3,"sources":["../../../src/serialization/utils/convert-values.js"],"names":["convertValues","obj","detect","convert","isObjectOrArray","Array","isArray","map","value","i","Object","keys","reduce","clone","key","type","prototype","toString","call"],"mappings":";;;;;kBACwBA,a;AADxB;AACe,SAASA,aAAT,CAAwBC,GAAxB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8C;AAC3D,MAAI,CAACC,gBAAgBH,GAAhB,CAAL,EAA2B,OAAOA,GAAP;;AAE3B,MAAII,MAAMC,OAAN,CAAcL,GAAd,CAAJ,EAAwB;AACtB,WAAOA,IAAIM,GAAJ,CAAQ,UAACC,KAAD,EAAQC,CAAR;AAAA,aAAcP,OAAOM,KAAP,IAAgBL,QAAQK,KAAR,CAAhB,GAAiCR,cAAcQ,KAAd,EAAqBN,MAArB,EAA6BC,OAA7B,CAA/C;AAAA,KAAR,CAAP;AACD;;AAED,SAAOO,OAAOC,IAAP,CAAYV,GAAZ,EAAiBW,MAAjB,CAAwB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC7CD,UAAMC,GAAN,IAAaZ,OAAOD,IAAIa,GAAJ,CAAP,IAAmBX,QAAQF,IAAIa,GAAJ,CAAR,CAAnB,GAAuCd,cAAcC,IAAIa,GAAJ,CAAd,EAAwBZ,MAAxB,EAAgCC,OAAhC,CAApD;AACA,WAAOU,KAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID;;AAED,SAAST,eAAT,CAA0BH,GAA1B,EAA+B;AAC7B,MAAMc,OAAOL,OAAOM,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BjB,GAA/B,CAAb;AACA,SAAOc,SAAS,iBAAT,IAA8BA,SAAS,gBAA9C;AACD","file":"convert-values.js","sourcesContent":["// Convert object or array values\nexport default function convertValues (obj, detect, convert) {\n  if (!isObjectOrArray(obj)) return obj\n\n  if (Array.isArray(obj)) {\n    return obj.map((value, i) => detect(value) ? convert(value) : convertValues(value, detect, convert))\n  }\n\n  return Object.keys(obj).reduce((clone, key) => {\n    clone[key] = detect(obj[key]) ? convert(obj[key]) : convertValues(obj[key], detect, convert)\n    return clone\n  }, {})\n}\n\nfunction isObjectOrArray (obj) {\n  const type = Object.prototype.toString.call(obj)\n  return type === '[object Object]' || type === '[object Array]'\n}\n"]}