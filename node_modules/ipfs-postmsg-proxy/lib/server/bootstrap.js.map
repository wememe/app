{"version":3,"sources":["../../src/server/bootstrap.js"],"names":["getIpfs","opts","add","pre","bootstrap","isMultiaddr","multiaddrToJson","list","rm"],"mappings":";;;;;;kBAKe,UAAUA,OAAV,EAAmBC,IAAnB,EAAyB;AACtC,SAAO;AACLC,SAAK,wBAAO,oBAAP,EAA6B,kBAChCD,KAAKE,GAAL,CAAS,eAAT,CADgC,EAEhC,mBACE;AAAA;;AAAA,aAAa,gCAAUC,SAAV,EAAoBF,GAApB,qCAAb;AAAA,KADF,EAEE,iCAAY,OAAZ,EAAqBG,sBAArB,EAAkCC,0BAAlC,CAFF,CAFgC,CAA7B,EAMFL,IANE,CADA;AAQLM,UAAM,wBAAO,qBAAP,EAA8B,kBAClCN,KAAKE,GAAL,CAAS,gBAAT,CADkC,EAElC,mBACE;AAAA;;AAAA,aAAa,iCAAUC,SAAV,EAAoBG,IAApB,sCAAb;AAAA,KADF,EAEE,iCAAY,OAAZ,EAAqBF,sBAArB,EAAkCC,0BAAlC,CAFF,CAFkC,CAA9B,EAMHL,IANG,CARD;AAeLO,QAAI,wBAAO,mBAAP,EAA4B,kBAC9BP,KAAKE,GAAL,CAAS,cAAT,CAD8B,EAE9B,mBACE;AAAA;;AAAA,aAAa,iCAAUC,SAAV,EAAoBI,EAApB,sCAAb;AAAA,KADF,EAEE,iCAAY,OAAZ,EAAqBH,sBAArB,EAAkCC,0BAAlC,CAFF,CAF8B,CAA5B,EAMDL,IANC;AAfC,GAAP;AAuBD,C;;AA7BD;;AACA;;AACA;;AACA","file":"bootstrap.js","sourcesContent":["import { expose } from 'postmsg-rpc'\nimport { pre, post } from 'prepost'\nimport { postArrayOf } from '../serialization/utils/prepost-array-of'\nimport { isMultiaddr, multiaddrToJson } from '../serialization/multiaddr'\n\nexport default function (getIpfs, opts) {\n  return {\n    add: expose('ipfs.bootstrap.add', pre(\n      opts.pre('bootstrap.add'),\n      post(\n        (...args) => getIpfs().bootstrap.add(...args),\n        postArrayOf('Peers', isMultiaddr, multiaddrToJson)\n      )\n    ), opts),\n    list: expose('ipfs.bootstrap.list', pre(\n      opts.pre('bootstrap.list'),\n      post(\n        (...args) => getIpfs().bootstrap.list(...args),\n        postArrayOf('Peers', isMultiaddr, multiaddrToJson)\n      )\n    ), opts),\n    rm: expose('ipfs.bootstrap.rm', pre(\n      opts.pre('bootstrap.rm'),\n      post(\n        (...args) => getIpfs().bootstrap.rm(...args),\n        postArrayOf('Peers', isMultiaddr, multiaddrToJson)\n      )\n    ), opts)\n  }\n}\n"]}