{"version":3,"sources":["../../../src/server/files/add.js"],"names":["getIpfs","opts","add","args","fileFromJsonOpts","pms","Array","isArray","map","file","fileFromJson","pre","files","addPullStream","readFnName","PMS","source","name","pull","obj","slice","sink","pullStreamFromJson","content","Object","assign","post","res","data"],"mappings":";;;;;;kBAQe,UAAUA,OAAV,EAAmBC,IAAnB,EAAyB;AACtC,SAAO;AACLC,SAAK,wBAAO,gBAAP,EAAyB,kBAC5B,YAAa;AAAA,wCAATC,IAAS;AAATA,YAAS;AAAA;;AACX,UAAMC,mBAAmB,EAAEC,KAAKJ,IAAP,EAAzB;;AAEAE,WAAK,CAAL,IAAUG,MAAMC,OAAN,CAAcJ,KAAK,CAAL,CAAd,IACNA,KAAK,CAAL,EAAQK,GAAR,CAAY,UAACC,IAAD;AAAA,eAAUC,aAAaD,IAAb,EAAmBL,gBAAnB,CAAV;AAAA,OAAZ,CADM,GAENM,aAAaP,KAAK,CAAL,CAAb,EAAsBC,gBAAtB,CAFJ;;AAIA,aAAOD,IAAP;AACD,KAT2B,EAU5BF,KAAKU,GAAL,CAAS,WAAT,CAV4B,EAW5B;AAAA;;AAAA,aAAa,4BAAUC,KAAV,EAAgBV,GAAhB,iCAAb;AAAA,KAX4B,CAAzB,EAYFD,IAZE,CADA;AAcLY,mBAAe,wBAAO,0BAAP,EAAmC,kBAChDZ,KAAKU,GAAL,CAAS,qBAAT,CADgD,EAEhD,YAAa;AAAA;;AAAA,yCAATR,IAAS;AAATA,YAAS;AAAA;;AACX,UAAMW,aAAa,wBAAnB;;AAEA,gCACEC,4BAAIC,MAAJ,CAAWb,KAAK,CAAL,EAAQc,IAAnB,EAAyBhB,IAAzB,CADF,EAEEiB,qBAAKV,GAAL,CAAS,UAACW,GAAD;AAAA,eAAST,aAAaS,GAAb,EAAkB,EAAEd,KAAKJ,IAAP,EAAlB,CAAT;AAAA,OAAT,CAFF,EAGE,6BAAUW,KAAV,EAAgBC,aAAhB,2CAAiCV,KAAKiB,KAAL,CAAW,CAAX,CAAjC,EAHF,EAIEL,4BAAIM,IAAJ,CAASP,UAAT,EAAqBb,IAArB,CAJF;;AAOA,aAAO,8BAAea,UAAf,CAAP;AACD,KAb+C,CAAnC,EAcZb,IAdY;AAdV,GAAP;AA8BD,C;;AAvCD;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAmCA,SAASS,YAAT,CAAuBS,GAAvB,EAA4BlB,IAA5B,EAAkC;AAChCA,SAAOA,QAAQ,EAAf;;AAEA,MAAI,0BAAakB,GAAb,CAAJ,EAAuB;AAAE;AACvB,WAAO,4BAAeA,GAAf,CAAP;AACD,GAFD,MAEO,IAAI,8BAAeA,GAAf,CAAJ,EAAyB;AAAE;AAChC,WAAOG,mBAAmBH,GAAnB,EAAwBlB,IAAxB,CAAP;AACD,GAFM,MAEA,IAAIkB,OAAOA,IAAII,OAAf,EAAwB;AAAE;AAC/B,WAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBN,GAAlB,EAAuB,EAAEI,SAASb,aAAaS,IAAII,OAAjB,EAA0BtB,IAA1B,CAAX,EAAvB,CAAP;AACD;;AAED,SAAOkB,GAAP,CAXgC,CAWrB;AACZ;;AAED,SAASG,kBAAT,CAA6BH,GAA7B,EAAkClB,IAAlC,EAAwC;AACtCA,SAAOA,QAAQ,EAAf;;AAEA,SAAOc,4BAAIC,MAAJ,CAAWG,IAAIF,IAAf,EAAqBO,OAAOC,MAAP,CAAc,EAAd,EAAkBxB,KAAKI,GAAvB,EAA4B;AACtDqB,QADsD,gBAChDC,GADgD,EAC3C;AACT,UAAI,0BAAaA,IAAIC,IAAjB,CAAJ,EAA4B;AAC1BD,YAAIC,IAAJ,GAAW,4BAAeD,IAAIC,IAAnB,CAAX;AACD;;AAED,aAAOD,GAAP;AACD;AAPqD,GAA5B,CAArB,CAAP;AASD","file":"add.js","sourcesContent":["import { expose } from 'postmsg-rpc'\nimport { pre } from 'prepost'\nimport pull from 'pull-stream'\nimport PMS from 'pull-postmsg-stream'\nimport shortid from 'shortid'\nimport { isBufferJson, bufferFromJson } from '../../serialization/buffer'\nimport { isFunctionJson, functionToJson } from '../../serialization/function'\n\nexport default function (getIpfs, opts) {\n  return {\n    add: expose('ipfs.files.add', pre(\n      (...args) => {\n        const fileFromJsonOpts = { pms: opts }\n\n        args[0] = Array.isArray(args[0])\n          ? args[0].map((file) => fileFromJson(file, fileFromJsonOpts))\n          : fileFromJson(args[0], fileFromJsonOpts)\n\n        return args\n      },\n      opts.pre('files.add'),\n      (...args) => getIpfs().files.add(...args)\n    ), opts),\n    addPullStream: expose('ipfs.files.addPullStream', pre(\n      opts.pre('files.addPullStream'),\n      (...args) => {\n        const readFnName = shortid()\n\n        pull(\n          PMS.source(args[0].name, opts),\n          pull.map((obj) => fileFromJson(obj, { pms: opts })),\n          getIpfs().files.addPullStream(...args.slice(1)),\n          PMS.sink(readFnName, opts)\n        )\n\n        return functionToJson(readFnName)\n      }\n    ), opts)\n  }\n}\n\nfunction fileFromJson (obj, opts) {\n  opts = opts || {}\n\n  if (isBufferJson(obj)) { // Buffer\n    return bufferFromJson(obj)\n  } else if (isFunctionJson(obj)) { // Pull stream\n    return pullStreamFromJson(obj, opts)\n  } else if (obj && obj.content) { // Object { path?, content }\n    return Object.assign({}, obj, { content: fileFromJson(obj.content, opts) })\n  }\n\n  return obj // Object { path } maybe, but could be anything\n}\n\nfunction pullStreamFromJson (obj, opts) {\n  opts = opts || {}\n\n  return PMS.source(obj.name, Object.assign({}, opts.pms, {\n    post (res) {\n      if (isBufferJson(res.data)) {\n        res.data = bufferFromJson(res.data)\n      }\n\n      return res\n    }\n  }))\n}\n"]}