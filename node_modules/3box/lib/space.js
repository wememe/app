"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var KeyValueStore = require('./keyValueStore');

var _require = require('./utils'),
    sha256Multihash = _require.sha256Multihash;

var ENC_BLOCK_SIZE = 24;

var nameToSpaceName = function nameToSpaceName(name) {
  return "3box.space.".concat(name, ".keyvalue");
};

var Space =
/*#__PURE__*/
function () {
  /**
   * Please use **box.openSpace** to get the instance of this class
   */
  function Space(name, threeId, orbitdb, rootStore, ensureConnected) {
    (0, _classCallCheck2.default)(this, Space);
    this._name = name;
    this._3id = threeId;
    this._store = new KeyValueStore(orbitdb, nameToSpaceName(this._name), ensureConnected, this._3id);
    this._rootStore = rootStore;
    /**
     * @property {KeyValueStore} public         access the profile store of the space
     */

    this.public = null;
    /**
     * @property {KeyValueStore} private        access the private store of the space
     */

    this.private = null;
  }

  (0, _createClass2.default)(Space, [{
    key: "open",
    value: function () {
      var _open = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee2() {
        var _this = this;

        var opts,
            consentNeeded,
            spaceAddress,
            entries,
            hasNumEntries,
            numEntries,
            syncSpace,
            _args2 = arguments;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                opts = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};

                if (this._store._db) {
                  _context2.next = 19;
                  break;
                }

                _context2.next = 4;
                return this._3id.initKeyringByName(this._name);

              case 4:
                consentNeeded = _context2.sent;
                if (opts.consentCallback) opts.consentCallback(consentNeeded, this._name);
                _context2.next = 8;
                return this._store._load();

              case 8:
                spaceAddress = _context2.sent;
                _context2.next = 11;
                return this._rootStore.iterator({
                  limit: -1
                }).collect();

              case 11:
                entries = _context2.sent;

                if (!entries.find(function (entry) {
                  return entry.payload.value.odbAddress.indexOf(nameToSpaceName(_this._name)) !== -1;
                })) {
                  this._rootStore.add({
                    odbAddress: spaceAddress
                  });
                }

                hasNumEntries = opts.numEntriesMessages && opts.numEntriesMessages[spaceAddress];
                numEntries = hasNumEntries ? opts.numEntriesMessages[spaceAddress].numEntries : undefined;

                syncSpace =
                /*#__PURE__*/
                function () {
                  var _ref = (0, _asyncToGenerator2.default)(
                  /*#__PURE__*/
                  _regenerator.default.mark(function _callee() {
                    return _regenerator.default.wrap(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return _this._store._sync(numEntries);

                          case 2:
                            if (opts.onSyncDone) opts.onSyncDone();

                          case 3:
                          case "end":
                            return _context.stop();
                        }
                      }
                    }, _callee, this);
                  }));

                  return function syncSpace() {
                    return _ref.apply(this, arguments);
                  };
                }();

                syncSpace();
                this.public = publicStoreReducer(this._store);
                this.private = privateStoreReducer(this._store, this._3id.getKeyringBySpaceName(nameToSpaceName(this._name)));

              case 19:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      return function open() {
        return _open.apply(this, arguments);
      };
    }()
  }]);
  return Space;
}();

module.exports = Space;

var publicStoreReducer = function publicStoreReducer(store) {
  var PREFIX = 'pub_';
  return {
    get: function () {
      var _get = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee3(key) {
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt("return", store.get(PREFIX + key));

              case 1:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      return function get(_x) {
        return _get.apply(this, arguments);
      };
    }(),
    set: function () {
      var _set = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee4(key, value) {
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", store.set(PREFIX + key, value));

              case 1:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      return function set(_x2, _x3) {
        return _set.apply(this, arguments);
      };
    }(),
    remove: function () {
      var _remove = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee5(key) {
        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                return _context5.abrupt("return", store.remove(PREFIX + key));

              case 1:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      return function remove(_x4) {
        return _remove.apply(this, arguments);
      };
    }(),

    get log() {
      return store.log.reduce(function (newLog, entry) {
        if (entry.key.startsWith(PREFIX)) {
          entry.key = entry.key.slice(4);
          newLog.push(entry);
        }

        return newLog;
      }, []);
    },

    all: function () {
      var _all = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee6() {
        var entries;
        return _regenerator.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return store.all();

              case 2:
                entries = _context6.sent;
                return _context6.abrupt("return", Object.keys(entries).reduce(function (newAll, key) {
                  if (key.startsWith(PREFIX)) {
                    newAll[key.slice(4)] = entries[key];
                  }

                  return newAll;
                }, {}));

              case 4:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      return function all() {
        return _all.apply(this, arguments);
      };
    }()
  };
};

var privateStoreReducer = function privateStoreReducer(store, keyring) {
  var PREFIX = 'priv_';
  var SALT = keyring.getDBSalt();

  var dbKey = function dbKey(key) {
    return PREFIX + sha256Multihash(SALT + key);
  };

  var pad = function pad(val) {
    var blockSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ENC_BLOCK_SIZE;
    var blockDiff = (blockSize - val.length % blockSize) % blockSize;
    return "".concat(val).concat('\0'.repeat(blockDiff));
  };

  var unpad = function unpad(padded) {
    return padded.replace(/\0+$/, '');
  };

  var encryptEntry = function encryptEntry(entry) {
    return keyring.symEncrypt(pad(JSON.stringify(entry)));
  };

  var decryptEntry = function decryptEntry(_ref2) {
    var ciphertext = _ref2.ciphertext,
        nonce = _ref2.nonce;
    return JSON.parse(unpad(keyring.symDecrypt(ciphertext, nonce)));
  };

  return {
    get: function () {
      var _get2 = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee7(key) {
        var entry;
        return _regenerator.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return store.get(dbKey(key));

              case 2:
                entry = _context7.sent;
                return _context7.abrupt("return", entry ? decryptEntry(entry).value : null);

              case 4:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      return function get(_x5) {
        return _get2.apply(this, arguments);
      };
    }(),
    set: function () {
      var _set2 = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee8(key, value) {
        return _regenerator.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                return _context8.abrupt("return", store.set(dbKey(key), encryptEntry({
                  key: key,
                  value: value
                })));

              case 1:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      return function set(_x6, _x7) {
        return _set2.apply(this, arguments);
      };
    }(),
    remove: function () {
      var _remove2 = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee9(key) {
        return _regenerator.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                return _context9.abrupt("return", store.remove(dbKey(key)));

              case 1:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      return function remove(_x8) {
        return _remove2.apply(this, arguments);
      };
    }(),

    get log() {
      return store.log.reduce(function (newLog, entry) {
        if (entry.key.startsWith(PREFIX)) {
          var decEntry = decryptEntry(entry.value);
          entry.key = decEntry.key;
          entry.value = decEntry.value;
          newLog.push(entry);
        }

        return newLog;
      }, []);
    },

    all: function () {
      var _all2 = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee10() {
        var entries;
        return _regenerator.default.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return store.all();

              case 2:
                entries = _context10.sent;
                return _context10.abrupt("return", Object.keys(entries).reduce(function (newAll, key) {
                  if (key.startsWith(PREFIX)) {
                    var decEntry = decryptEntry(entries[key]);
                    newAll[decEntry.key] = decEntry.value;
                  }

                  return newAll;
                }, {}));

              case 4:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      return function all() {
        return _all2.apply(this, arguments);
      };
    }()
  };
};