const jsdom = require('jsdom')
// const IPFS = require('ipfs')
// const Box = require('../3box')
global.window = new jsdom.JSDOM().window

var PrivateKeyProvider = require("truffle-privatekey-provider");
// const jsdom = require('jsdom')
// global.window = new jsdom.JSDOM().window

describe('Integration Test', () => {

  beforeAll(async () => {
    // ipfs = await utils.initIPFS(2)
    // orbitdb = new OrbitDB(ipfs, './tmp/orbitdb4', { keystore })
    // keyValueStore = new KeyValueStore(orbitdb, STORE_NAME, ensureConnected)
  })

  beforeEach(() => {
    // ensureConnected.mockClear()
  })

  it('should open', async () => {
    var privateKey = "1111111111111111111111111111111111111111111111111111111111111111";
    var provider = new PrivateKeyProvider(privateKey, "http://localhost:8545");
    const address = provider.address
    const box = await Box.openBox(address,  provider, {}).then(console.log, console.log).catch(console.log)
    console.log(box)
  })

})



// const address =
//
// const run = async () => {
//
//   // console.log(await Box.openBox(address, provider))
//   // let box = await Box.openBox(address,  provider, {})
//   // console.log(box)
// Box.openBox(address,  provider, {}).then(console.log, console.log).catch(console.log)
//
//
