{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/SideBar.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\nimport { address } from '../../utils/address';\nimport { copyToClipBoard } from '../../state/actions';\nimport * as routes from '../../utils/routes';\nimport EthereumLogo from \"../../assets/EthereumIcon.svg\";\nimport Copy from \"../../assets/Copy.svg\";\nimport '../../views/styles/Profile.css';\nimport '../styles/Modal.css';\n\nvar SideBar = function SideBar(_ref) {\n  var name = _ref.name,\n      image = _ref.image,\n      coverPhoto = _ref.coverPhoto,\n      description = _ref.description,\n      emoji = _ref.emoji,\n      publicProfile = _ref.publicProfile,\n      location = _ref.location,\n      isPublicProfilePage = _ref.isPublicProfilePage,\n      copyToClipBoard = _ref.copyToClipBoard,\n      copySuccessful = _ref.copySuccessful;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, !isPublicProfilePage && (coverPhoto.length > 0 && coverPhoto[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(coverPhoto[0].contentUrl['/']),\n    className: \"profile__coverPhoto clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"profile__coverPhoto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), isPublicProfilePage && publicProfile.coverPhoto && (publicProfile.coverPhoto.length > 0 && publicProfile.coverPhoto[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(publicProfile.coverPhoto[0].contentUrl['/']),\n    className: \"profile__coverPhoto clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"profile__coverPhoto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__user__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, !isPublicProfilePage && (image.length > 0 && image[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(image[0].contentUrl['/']),\n    className: \"profile__user__picture clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"profile__user__picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), isPublicProfilePage && publicProfile.image && (publicProfile.image.length > 0 && publicProfile.image[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(publicProfile.image[0].contentUrl['/']),\n    className: \"profile__user__picture clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"profile__user__picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"profile__basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile__basic__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, !isPublicProfilePage && (name ? React.createElement(\"h2\", {\n    id: \"profile__user__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, name) : React.createElement(Link, {\n    to: routes.EDITPROFILE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"profile__user__name__add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Add name\"))), isPublicProfilePage && publicProfile.name && (publicProfile.name ? React.createElement(\"h2\", {\n    id: \"profile__user__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, publicProfile.name) : React.createElement(Link, {\n    to: routes.EDITPROFILE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"profile__user__name__add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Add name\"))), React.createElement(\"span\", {\n    className: \"profile__basic__emoji\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, !isPublicProfilePage && emoji.code ? emoji.code : emoji, isPublicProfilePage && publicProfile.emoji && publicProfile.emoji.code ? publicProfile.emoji.code : publicProfile.emoji)), React.createElement(\"div\", {\n    id: \"profile__network\",\n    title: \"Network\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    id: \"profile__network__networkLogo\",\n    src: EthereumLogo,\n    alt: \"Ethereum Logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"profile__details__address\",\n    title: address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, !isPublicProfilePage && address && address.substring(0, 8), isPublicProfilePage && location.pathname.split('/')[2].substring(0, 8), \"...\")), React.createElement(\"p\", {\n    className: \"profile__basic__description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, !isPublicProfilePage && description, isPublicProfilePage && publicProfile.description && publicProfile.description)), React.createElement(\"div\", {\n    className: \"profile__links\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, !isPublicProfilePage ? React.createElement(Link, {\n    to: \"\".concat(routes.PUBLIC_BASE, \"/\").concat(address).concat(routes.PUBLIC_ACTIVITY_ROUTE),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"View\") : address === location.pathname.split('/')[2] && React.createElement(Link, {\n    to: routes.PROFILE_ACTIVITY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Return\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return copyToClipBoard();\n    },\n    className: \"profile__links__copy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Share\")), React.createElement(\"div\", {\n    className: \"profile__category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile__category__sectionWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    exact: true,\n    to: isPublicProfilePage ? \"\".concat(routes.PUBLIC_BASE, \"/\").concat(location.pathname.split('/')[2]).concat(routes.PUBLIC_ACTIVITY_ROUTE) : routes.PROFILE_ACTIVITY,\n    className: \"profile__category__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Activity\"), React.createElement(NavLink, {\n    exact: true,\n    to: isPublicProfilePage ? \"\".concat(routes.PUBLIC_BASE, \"/\").concat(location.pathname.split('/')[2]).concat(routes.PUBLIC_DETAILS_ROUTE) : routes.PROFILE_ABOUT,\n    className: \"profile__category__section \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Details\")))), React.createElement(\"div\", {\n    id: \"profile__footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__footer__contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"3Box 2018\"), React.createElement(Link, {\n    to: routes.TERMS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Terms\"), React.createElement(Link, {\n    to: routes.PRIVACY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Privacy\"))))), React.createElement(\"div\", {\n    className: \"\".concat(copySuccessful ? 'showModal' : '', \" modal__container--copied modal--effect\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal--sync\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal--sync__copy__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Copy,\n    className: \"modal__copy__ico\",\n    alt: \"Copied\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"COPIED PROFILE URL\")))));\n};\n\nSideBar.propTypes = {\n  copyToClipBoard: PropTypes.func.isRequired,\n  name: PropTypes.string,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n  email: PropTypes.string,\n  website: PropTypes.string,\n  job: PropTypes.string,\n  school: PropTypes.string,\n  degree: PropTypes.string,\n  memberSince: PropTypes.string,\n  major: PropTypes.string,\n  year: PropTypes.string,\n  employer: PropTypes.string,\n  birthday: PropTypes.string,\n  emoji: PropTypes.string,\n  image: PropTypes.array,\n  coverPhoto: PropTypes.array,\n  description: PropTypes.string,\n  publicProfile: PropTypes.object,\n  location: PropTypes.object.isRequired,\n  isPublicProfilePage: PropTypes.bool,\n  copySuccessful: PropTypes.bool\n};\nSideBar.defaultProps = {\n  name: '',\n  verifiedGithub: '',\n  verifiedTwitter: '',\n  email: '',\n  description: '',\n  image: [],\n  coverPhoto: [],\n  emoji: '',\n  memberSince: '',\n  website: '',\n  birthday: '',\n  job: '',\n  school: '',\n  degree: '',\n  major: '',\n  year: '',\n  employer: '',\n  publicProfile: {},\n  copySuccessful: false,\n  isPublicProfilePage: false\n};\n\nfunction mapState(state) {\n  return {\n    name: state.threeBox.name,\n    verifiedGithub: state.threeBox.verifiedGithub,\n    verifiedTwitter: state.threeBox.verifiedTwitter,\n    image: state.threeBox.image,\n    coverPhoto: state.threeBox.coverPhoto,\n    emoji: state.threeBox.emoji,\n    email: state.threeBox.email,\n    description: state.threeBox.description,\n    website: state.threeBox.website,\n    birthday: state.threeBox.birthday,\n    memberSince: state.threeBox.memberSince,\n    job: state.threeBox.job,\n    school: state.threeBox.school,\n    degree: state.threeBox.degree,\n    major: state.threeBox.major,\n    year: state.threeBox.year,\n    employer: state.threeBox.employer,\n    publicProfile: state.threeBox.publicProfile,\n    copySuccessful: state.threeBox.copySuccessful\n  };\n}\n\nexport default withRouter(connect(mapState, {\n  copyToClipBoard: copyToClipBoard\n})(SideBar));","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/SideBar.jsx"],"names":["React","PropTypes","connect","Link","NavLink","withRouter","address","copyToClipBoard","routes","SideBar","name","image","coverPhoto","description","emoji","publicProfile","location","isPublicProfilePage","copySuccessful","length","contentUrl","EDITPROFILE","code","EthereumLogo","substring","pathname","split","PUBLIC_BASE","PUBLIC_ACTIVITY_ROUTE","PROFILE_ACTIVITY","PUBLIC_DETAILS_ROUTE","PROFILE_ABOUT","TERMS","PRIVACY","Copy","propTypes","func","isRequired","string","verifiedGithub","verifiedTwitter","email","website","job","school","degree","memberSince","major","year","employer","birthday","array","object","bool","defaultProps","mapState","state","threeBox"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,UAAxB,QAA0C,kBAA1C;AAEA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAO,KAAKC,MAAZ,MAAwB,oBAAxB;;;AAGA,OAAO,gCAAP;AACA,OAAO,qBAAP;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MACdC,IADc,QACdA,IADc;AAAA,MAEdC,KAFc,QAEdA,KAFc;AAAA,MAGdC,UAHc,QAGdA,UAHc;AAAA,MAIdC,WAJc,QAIdA,WAJc;AAAA,MAKdC,KALc,QAKdA,KALc;AAAA,MAMdC,aANc,QAMdA,aANc;AAAA,MAOdC,QAPc,QAOdA,QAPc;AAAA,MAQdC,mBARc,QAQdA,mBARc;AAAA,MASdV,eATc,QASdA,eATc;AAAA,MAUdW,cAVc,QAUdA,cAVc;AAAA,SAYZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACD,mBAAD,KACCL,UAAU,CAACO,MAAX,GAAoB,CAApB,IAAyBP,UAAU,CAAC,CAAD,CAAV,CAAcQ,UAAvC,GACI;AAAK,IAAA,GAAG,wCAAiCR,UAAU,CAAC,CAAD,CAAV,CAAcQ,UAAd,CAAyB,GAAzB,CAAjC,CAAR;AAA0E,IAAA,SAAS,EAAC,kCAApF;AAAuH,IAAA,GAAG,EAAC,SAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAEI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHL,CADH,EAOIH,mBAAmB,IAAIF,aAAa,CAACH,UAAtC,KACCG,aAAa,CAACH,UAAd,CAAyBO,MAAzB,GAAkC,CAAlC,IAAuCJ,aAAa,CAACH,UAAd,CAAyB,CAAzB,EAA4BQ,UAAnE,GACI;AAAK,IAAA,GAAG,wCAAiCL,aAAa,CAACH,UAAd,CAAyB,CAAzB,EAA4BQ,UAA5B,CAAuC,GAAvC,CAAjC,CAAR;AAAwF,IAAA,SAAS,EAAC,kCAAlG;AAAqI,IAAA,GAAG,EAAC,SAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAEI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHL,CAPH,EAaE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,EAAE,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,CAACH,mBAAD,KACCN,KAAK,CAACQ,MAAN,GAAe,CAAf,IAAoBR,KAAK,CAAC,CAAD,CAAL,CAASS,UAA7B,GACI;AAAK,IAAA,GAAG,wCAAiCT,KAAK,CAAC,CAAD,CAAL,CAASS,UAAT,CAAoB,GAApB,CAAjC,CAAR;AAAqE,IAAA,SAAS,EAAC,qCAA/E;AAAqH,IAAA,GAAG,EAAC,SAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAEI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHL,CAFH,EAQIH,mBAAmB,IAAIF,aAAa,CAACJ,KAAtC,KACCI,aAAa,CAACJ,KAAd,CAAoBQ,MAApB,GAA6B,CAA7B,IAAkCJ,aAAa,CAACJ,KAAd,CAAoB,CAApB,EAAuBS,UAAzD,GACI;AAAK,IAAA,GAAG,wCAAiCL,aAAa,CAACJ,KAAd,CAAoB,CAApB,EAAuBS,UAAvB,CAAkC,GAAlC,CAAjC,CAAR;AAAmF,IAAA,SAAS,EAAC,qCAA7F;AAAmI,IAAA,GAAG,EAAC,SAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAEI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHL,CARH,EAcE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,mBAAD,KAAyBP,IAAI,GAC1B;AAAI,IAAA,EAAE,EAAC,qBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,IAA9B,CAD0B,GAE1B,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEF,MAAM,CAACa,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8B;AAAI,IAAA,EAAE,EAAC,0BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA9B,CAFH,CADH,EAMIJ,mBAAmB,IAAIF,aAAa,CAACL,IAAtC,KAAgDK,aAAa,CAACL,IAAd,GAC7C;AAAI,IAAA,EAAE,EAAC,qBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BK,aAAa,CAACL,IAA5C,CAD6C,GAE7C,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEF,MAAM,CAACa,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8B;AAAI,IAAA,EAAE,EAAC,0BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA9B,CAFH,CANH,EAYE;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,mBAAD,IAAwBH,KAAK,CAACQ,IAA9B,GAAqCR,KAAK,CAACQ,IAA3C,GAAkDR,KADrD,EAEIG,mBAAmB,IAAIF,aAAa,CAACD,KAAtC,IAAgDC,aAAa,CAACD,KAAd,CAAoBQ,IAApE,GAA2EP,aAAa,CAACD,KAAd,CAAoBQ,IAA/F,GAAsGP,aAAa,CAACD,KAFvH,CAZF,CADF,EAmBE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,+BAAR;AAAwC,IAAA,GAAG,EAAES,YAA7C;AAA2D,IAAA,GAAG,EAAC,eAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,EAAE,EAAC,2BAAN;AAAkC,IAAA,KAAK,EAAEjB,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACW,mBAAD,IAAwBX,OAAxB,IAAmCA,OAAO,CAACkB,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CADtC,EAEGP,mBAAmB,IAAID,QAAQ,CAACS,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,EAAgCF,SAAhC,CAA0C,CAA1C,EAA6C,CAA7C,CAF1B,QAFF,CAnBF,EA4BE;AAAG,IAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACP,mBAAD,IAAwBJ,WAD3B,EAEII,mBAAmB,IAAIF,aAAa,CAACF,WAAtC,IAAsDE,aAAa,CAACF,WAFvE,CA5BF,CAdF,EAiDE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,CAACI,mBAAD,GAEG,oBAAC,IAAD;AAAM,IAAA,EAAE,YAAKT,MAAM,CAACmB,WAAZ,cAA2BrB,OAA3B,SAAqCE,MAAM,CAACoB,qBAA5C,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,GAMGtB,OAAO,KAAKU,QAAQ,CAACS,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAZ,IACA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAElB,MAAM,CAACqB,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATN,EAcE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE;AAAA,aAAMtB,eAAe,EAArB;AAAA,KAA/B;AAAwD,IAAA,SAAS,EAAC,sBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdF,CAjDF,EAoEE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAe,IAAA,EAAE,EAAEU,mBAAmB,aAAMT,MAAM,CAACmB,WAAb,cAA4BX,QAAQ,CAACS,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAA5B,SAA8DlB,MAAM,CAACoB,qBAArE,IAA+FpB,MAAM,CAACqB,gBAA5I;AAA8J,IAAA,SAAS,EAAC,4BAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAe,IAAA,EAAE,EAAEZ,mBAAmB,aAAMT,MAAM,CAACmB,WAAb,cAA4BX,QAAQ,CAACS,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAA5B,SAA8DlB,MAAM,CAACsB,oBAArE,IAA8FtB,MAAM,CAACuB,aAA3I;AAA0J,IAAA,SAAS,EAAC,6BAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF,CApEF,CAFF,EA+EE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,2BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEvB,MAAM,CAACwB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAExB,MAAM,CAACyB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,CA/EF,CADF,CAbF,EAwGE;AAAK,IAAA,SAAS,YAAKf,cAAc,GAAG,WAAH,GAAiB,EAApC,4CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEgB,IAAV;AAAgB,IAAA,SAAS,EAAC,kBAA1B;AAA6C,IAAA,GAAG,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CADF,CADF,CAxGF,CAZY;AAAA,CAAhB;;AA+HEzB,OAAO,CAAC0B,SAAR,GAAoB;AACpB5B,EAAAA,eAAe,EAAEN,SAAS,CAACmC,IAAV,CAAeC,UADZ;AAEpB3B,EAAAA,IAAI,EAAET,SAAS,CAACqC,MAFI;AAGpBC,EAAAA,cAAc,EAAEtC,SAAS,CAACqC,MAHN;AAIpBE,EAAAA,eAAe,EAAEvC,SAAS,CAACqC,MAJP;AAKpBG,EAAAA,KAAK,EAAExC,SAAS,CAACqC,MALG;AAMpBI,EAAAA,OAAO,EAAEzC,SAAS,CAACqC,MANC;AAOpBK,EAAAA,GAAG,EAAE1C,SAAS,CAACqC,MAPK;AAQpBM,EAAAA,MAAM,EAAE3C,SAAS,CAACqC,MARE;AASpBO,EAAAA,MAAM,EAAE5C,SAAS,CAACqC,MATE;AAUpBQ,EAAAA,WAAW,EAAE7C,SAAS,CAACqC,MAVH;AAWpBS,EAAAA,KAAK,EAAE9C,SAAS,CAACqC,MAXG;AAYpBU,EAAAA,IAAI,EAAE/C,SAAS,CAACqC,MAZI;AAapBW,EAAAA,QAAQ,EAAEhD,SAAS,CAACqC,MAbA;AAcpBY,EAAAA,QAAQ,EAAEjD,SAAS,CAACqC,MAdA;AAepBxB,EAAAA,KAAK,EAAEb,SAAS,CAACqC,MAfG;AAgBpB3B,EAAAA,KAAK,EAAEV,SAAS,CAACkD,KAhBG;AAiBpBvC,EAAAA,UAAU,EAAEX,SAAS,CAACkD,KAjBF;AAkBpBtC,EAAAA,WAAW,EAAEZ,SAAS,CAACqC,MAlBH;AAmBpBvB,EAAAA,aAAa,EAAEd,SAAS,CAACmD,MAnBL;AAoBpBpC,EAAAA,QAAQ,EAAEf,SAAS,CAACmD,MAAV,CAAiBf,UApBP;AAqBpBpB,EAAAA,mBAAmB,EAAEhB,SAAS,CAACoD,IArBX;AAsBpBnC,EAAAA,cAAc,EAAEjB,SAAS,CAACoD;AAtBN,CAApB;AAyBF5C,OAAO,CAAC6C,YAAR,GAAuB;AACrB5C,EAAAA,IAAI,EAAE,EADe;AAErB6B,EAAAA,cAAc,EAAE,EAFK;AAGrBC,EAAAA,eAAe,EAAE,EAHI;AAIrBC,EAAAA,KAAK,EAAE,EAJc;AAKrB5B,EAAAA,WAAW,EAAE,EALQ;AAMrBF,EAAAA,KAAK,EAAE,EANc;AAOrBC,EAAAA,UAAU,EAAE,EAPS;AAQrBE,EAAAA,KAAK,EAAE,EARc;AASrBgC,EAAAA,WAAW,EAAE,EATQ;AAUrBJ,EAAAA,OAAO,EAAE,EAVY;AAWrBQ,EAAAA,QAAQ,EAAE,EAXW;AAYrBP,EAAAA,GAAG,EAAE,EAZgB;AAarBC,EAAAA,MAAM,EAAE,EAba;AAcrBC,EAAAA,MAAM,EAAE,EAda;AAerBE,EAAAA,KAAK,EAAE,EAfc;AAgBrBC,EAAAA,IAAI,EAAE,EAhBe;AAiBrBC,EAAAA,QAAQ,EAAE,EAjBW;AAkBrBlC,EAAAA,aAAa,EAAE,EAlBM;AAmBrBG,EAAAA,cAAc,EAAE,KAnBK;AAoBrBD,EAAAA,mBAAmB,EAAE;AApBA,CAAvB;;AAuBA,SAASsC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAO;AACL9C,IAAAA,IAAI,EAAE8C,KAAK,CAACC,QAAN,CAAe/C,IADhB;AAEL6B,IAAAA,cAAc,EAAEiB,KAAK,CAACC,QAAN,CAAelB,cAF1B;AAGLC,IAAAA,eAAe,EAAEgB,KAAK,CAACC,QAAN,CAAejB,eAH3B;AAIL7B,IAAAA,KAAK,EAAE6C,KAAK,CAACC,QAAN,CAAe9C,KAJjB;AAKLC,IAAAA,UAAU,EAAE4C,KAAK,CAACC,QAAN,CAAe7C,UALtB;AAMLE,IAAAA,KAAK,EAAE0C,KAAK,CAACC,QAAN,CAAe3C,KANjB;AAOL2B,IAAAA,KAAK,EAAEe,KAAK,CAACC,QAAN,CAAehB,KAPjB;AAQL5B,IAAAA,WAAW,EAAE2C,KAAK,CAACC,QAAN,CAAe5C,WARvB;AASL6B,IAAAA,OAAO,EAAEc,KAAK,CAACC,QAAN,CAAef,OATnB;AAULQ,IAAAA,QAAQ,EAAEM,KAAK,CAACC,QAAN,CAAeP,QAVpB;AAWLJ,IAAAA,WAAW,EAAEU,KAAK,CAACC,QAAN,CAAeX,WAXvB;AAYLH,IAAAA,GAAG,EAAEa,KAAK,CAACC,QAAN,CAAed,GAZf;AAaLC,IAAAA,MAAM,EAAEY,KAAK,CAACC,QAAN,CAAeb,MAblB;AAcLC,IAAAA,MAAM,EAAEW,KAAK,CAACC,QAAN,CAAeZ,MAdlB;AAeLE,IAAAA,KAAK,EAAES,KAAK,CAACC,QAAN,CAAeV,KAfjB;AAgBLC,IAAAA,IAAI,EAAEQ,KAAK,CAACC,QAAN,CAAeT,IAhBhB;AAiBLC,IAAAA,QAAQ,EAAEO,KAAK,CAACC,QAAN,CAAeR,QAjBpB;AAkBLlC,IAAAA,aAAa,EAAEyC,KAAK,CAACC,QAAN,CAAe1C,aAlBzB;AAmBLG,IAAAA,cAAc,EAAEsC,KAAK,CAACC,QAAN,CAAevC;AAnB1B,GAAP;AAqBD;;AAED,eAAeb,UAAU,CAACH,OAAO,CAACqD,QAAD,EAC/B;AACEhD,EAAAA,eAAe,EAAfA;AADF,CAD+B,CAAP,CAGrBE,OAHqB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\n\nimport { address } from '../../utils/address';\nimport { copyToClipBoard } from '../../state/actions';\nimport * as routes from '../../utils/routes';\nimport EthereumLogo from '../../assets/EthereumIcon.svg';\nimport Copy from '../../assets/Copy.svg';\nimport '../../views/styles/Profile.css';\nimport '../styles/Modal.css';\n\nconst SideBar = ({\n  name,\n  image,\n  coverPhoto,\n  description,\n  emoji,\n  publicProfile,\n  location,\n  isPublicProfilePage,\n  copyToClipBoard,\n  copySuccessful,\n}) => (\n    <div>\n      {!isPublicProfilePage && (\n        coverPhoto.length > 0 && coverPhoto[0].contentUrl\n          ? <img src={`https://ipfs.infura.io/ipfs/${coverPhoto[0].contentUrl['/']}`} className=\"profile__coverPhoto clearProfPic\" alt=\"profile\" />\n          : <div className=\"profile__coverPhoto\" />)\n      }\n\n      {(isPublicProfilePage && publicProfile.coverPhoto) && (\n        publicProfile.coverPhoto.length > 0 && publicProfile.coverPhoto[0].contentUrl\n          ? <img src={`https://ipfs.infura.io/ipfs/${publicProfile.coverPhoto[0].contentUrl['/']}`} className=\"profile__coverPhoto clearProfPic\" alt=\"profile\" />\n          : <div className=\"profile__coverPhoto\" />)\n      }\n\n      <div id=\"profile\">\n        <div id=\"profile__fixed\">\n\n          <div id=\"profile__user__info\">\n\n            {!isPublicProfilePage && (\n              image.length > 0 && image[0].contentUrl\n                ? <img src={`https://ipfs.infura.io/ipfs/${image[0].contentUrl['/']}`} className=\"profile__user__picture clearProfPic\" alt=\"profile\" />\n                : <div className=\"profile__user__picture\" />)\n            }\n\n            {(isPublicProfilePage && publicProfile.image) && (\n              publicProfile.image.length > 0 && publicProfile.image[0].contentUrl\n                ? <img src={`https://ipfs.infura.io/ipfs/${publicProfile.image[0].contentUrl['/']}`} className=\"profile__user__picture clearProfPic\" alt=\"profile\" />\n                : <div className=\"profile__user__picture\" />)\n            }\n\n            <div className=\"profile__basic\">\n              <div className=\"profile__basic__wrapper\">\n                {!isPublicProfilePage && (name\n                  ? <h2 id=\"profile__user__name\">{name}</h2>\n                  : <Link to={routes.EDITPROFILE}><h2 id=\"profile__user__name__add\">Add name</h2></Link>)\n                }\n\n                {(isPublicProfilePage && publicProfile.name) && (publicProfile.name\n                  ? <h2 id=\"profile__user__name\">{publicProfile.name}</h2>\n                  : <Link to={routes.EDITPROFILE}><h2 id=\"profile__user__name__add\">Add name</h2></Link>)\n                }\n\n\n                <span className=\"profile__basic__emoji\">\n                  {!isPublicProfilePage && emoji.code ? emoji.code : emoji}\n                  {(isPublicProfilePage && publicProfile.emoji) && publicProfile.emoji.code ? publicProfile.emoji.code : publicProfile.emoji}\n                </span>\n              </div>\n\n              <div id=\"profile__network\" title=\"Network\">\n                <img id=\"profile__network__networkLogo\" src={EthereumLogo} alt=\"Ethereum Logo\" />\n                <p id=\"profile__details__address\" title={address}>\n                  {!isPublicProfilePage && address && address.substring(0, 8)}\n                  {isPublicProfilePage && location.pathname.split('/')[2].substring(0, 8)}\n                  ...\n                </p>\n              </div>\n\n              <p className=\"profile__basic__description\">\n                {!isPublicProfilePage && description}\n                {(isPublicProfilePage && publicProfile.description) && publicProfile.description}\n              </p>\n\n            </div>\n\n            <div className=\"profile__links\">\n              {/* If /profile show link to my profile */}\n              {!isPublicProfilePage\n                ? (\n                  <Link to={`${routes.PUBLIC_BASE}/${address}${routes.PUBLIC_ACTIVITY_ROUTE}`}>\n                    View\n                    </Link>\n                )\n                : address === location.pathname.split('/')[2] && (\n                  <Link to={routes.PROFILE_ACTIVITY}>\n                    Return\n                  </Link>\n                )\n              }\n              <button type=\"button\" onClick={() => copyToClipBoard()} className=\"profile__links__copy\">\n                Share\n              </button>\n            </div>\n\n            <div className=\"profile__category\">\n              <div className=\"profile__category__sectionWrapper\">\n                <NavLink exact to={isPublicProfilePage ? `${routes.PUBLIC_BASE}/${location.pathname.split('/')[2]}${routes.PUBLIC_ACTIVITY_ROUTE}` : routes.PROFILE_ACTIVITY} className=\"profile__category__section\">Activity</NavLink>\n                <NavLink exact to={isPublicProfilePage ? `${routes.PUBLIC_BASE}/${location.pathname.split('/')[2]}${routes.PUBLIC_DETAILS_ROUTE}` : routes.PROFILE_ABOUT} className=\"profile__category__section \">Details</NavLink>\n              </div>\n            </div>\n\n          </div>\n\n          <div id=\"profile__footer\">\n            <div id=\"profile__footer__contents\">\n              <p>3Box 2018</p>\n              <Link to={routes.TERMS}>Terms</Link>\n              <Link to={routes.PRIVACY}>Privacy</Link>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <div className={`${copySuccessful ? 'showModal' : ''} modal__container--copied modal--effect`}>\n        <div className=\"modal--sync\">\n          <div className=\"modal--sync__copy__wrapper\">\n            <img src={Copy} className=\"modal__copy__ico\" alt=\"Copied\" />\n            <p>COPIED PROFILE URL</p>\n          </div>\n        </div>\n      </div>\n    </div >\n  );\n\n  SideBar.propTypes = {\n  copyToClipBoard: PropTypes.func.isRequired,\n  name: PropTypes.string,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n  email: PropTypes.string,\n  website: PropTypes.string,\n  job: PropTypes.string,\n  school: PropTypes.string,\n  degree: PropTypes.string,\n  memberSince: PropTypes.string,\n  major: PropTypes.string,\n  year: PropTypes.string,\n  employer: PropTypes.string,\n  birthday: PropTypes.string,\n  emoji: PropTypes.string,\n  image: PropTypes.array,\n  coverPhoto: PropTypes.array,\n  description: PropTypes.string,\n  publicProfile: PropTypes.object,\n  location: PropTypes.object.isRequired,\n  isPublicProfilePage: PropTypes.bool,\n  copySuccessful: PropTypes.bool,\n};\n\nSideBar.defaultProps = {\n  name: '',\n  verifiedGithub: '',\n  verifiedTwitter: '',\n  email: '',\n  description: '',\n  image: [],\n  coverPhoto: [],\n  emoji: '',\n  memberSince: '',\n  website: '',\n  birthday: '',\n  job: '',\n  school: '',\n  degree: '',\n  major: '',\n  year: '',\n  employer: '',\n  publicProfile: {},\n  copySuccessful: false,\n  isPublicProfilePage: false,\n};\n\nfunction mapState(state) {\n  return {\n    name: state.threeBox.name,\n    verifiedGithub: state.threeBox.verifiedGithub,\n    verifiedTwitter: state.threeBox.verifiedTwitter,\n    image: state.threeBox.image,\n    coverPhoto: state.threeBox.coverPhoto,\n    emoji: state.threeBox.emoji,\n    email: state.threeBox.email,\n    description: state.threeBox.description,\n    website: state.threeBox.website,\n    birthday: state.threeBox.birthday,\n    memberSince: state.threeBox.memberSince,\n    job: state.threeBox.job,\n    school: state.threeBox.school,\n    degree: state.threeBox.degree,\n    major: state.threeBox.major,\n    year: state.threeBox.year,\n    employer: state.threeBox.employer,\n    publicProfile: state.threeBox.publicProfile,\n    copySuccessful: state.threeBox.copySuccessful,\n  };\n}\n\nexport default withRouter(connect(mapState,\n  {\n    copyToClipBoard,\n  })(SideBar));\n"]},"metadata":{},"sourceType":"module"}