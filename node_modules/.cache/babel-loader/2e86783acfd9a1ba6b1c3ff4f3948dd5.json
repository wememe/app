{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/Categories.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\nimport { address } from '../../utils/address';\nimport * as routes from '../../utils/routes';\nimport EthereumLogo from \"../../assets/EthereumIcon.svg\";\nimport '../../views/styles/Profile.css';\n\nvar ProfileCategories = function ProfileCategories(_ref) {\n  var name = _ref.name,\n      image = _ref.image,\n      coverPhoto = _ref.coverPhoto,\n      description = _ref.description,\n      emoji = _ref.emoji,\n      publicProfile = _ref.publicProfile,\n      location = _ref.location,\n      isLoggedIn = _ref.isLoggedIn;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, console.log(publicProfile), !!publicProfile && (publicProfile.coverPhoto.length > 0 && publicProfile.coverPhoto[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(publicProfile.coverPhoto[0].contentUrl['/']),\n    className: \"profile__coverPhoto clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"profile__coverPhoto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__user__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, image.length > 0 && image[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(image[0].contentUrl['/']),\n    className: \"profile__user__picture clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"profile__user__picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"profile__basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile__basic__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, name ? React.createElement(\"h2\", {\n    id: \"profile__user__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, name) : React.createElement(Link, {\n    to: routes.EDITPROFILE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"profile__user__name__add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Add name\")), React.createElement(\"span\", {\n    className: \"profile__basic__emoji\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, emoji.code ? emoji.code : emoji)), React.createElement(\"div\", {\n    id: \"profile__network\",\n    title: \"Network\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    id: \"profile__network__networkLogo\",\n    src: EthereumLogo,\n    alt: \"Ethereum Logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"profile__details__address\",\n    title: address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, address && address.substring(0, 8), \"...\")), React.createElement(\"p\", {\n    className: \"profile__basic__description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, description)), React.createElement(\"div\", {\n    className: \"profile__category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile__category__sectionWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    exact: true,\n    to: routes.PROFILE_ACTIVITY,\n    className: \"profile__category__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Activity\"), React.createElement(NavLink, {\n    exact: true,\n    to: routes.PROFILE_ABOUT,\n    className: \"profile__category__section \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Details\")))), React.createElement(\"div\", {\n    id: \"profile__footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__footer__contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"3Box 2018\"), React.createElement(Link, {\n    to: routes.TERMS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Terms\"), React.createElement(Link, {\n    to: routes.PRIVACY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Privacy\"))))));\n};\n\nProfileCategories.propTypes = {\n  name: PropTypes.string,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n  email: PropTypes.string,\n  website: PropTypes.string,\n  job: PropTypes.string,\n  school: PropTypes.string,\n  degree: PropTypes.string,\n  memberSince: PropTypes.string,\n  major: PropTypes.string,\n  year: PropTypes.string,\n  employer: PropTypes.string,\n  birthday: PropTypes.string,\n  emoji: PropTypes.string,\n  image: PropTypes.array,\n  coverPhoto: PropTypes.array,\n  description: PropTypes.string,\n  publicProfile: PropTypes.object,\n  isLoggedIn: PropTypes.bool\n};\nProfileCategories.defaultProps = {\n  name: '',\n  verifiedGithub: '',\n  verifiedTwitter: '',\n  email: '',\n  description: '',\n  image: [],\n  coverPhoto: [],\n  emoji: '',\n  memberSince: '',\n  website: '',\n  birthday: '',\n  job: '',\n  school: '',\n  degree: '',\n  major: '',\n  year: '',\n  employer: '',\n  publicProfile: {},\n  isLoggedIn: false\n};\n\nfunction mapState(state) {\n  return {\n    name: state.threeBox.name,\n    verifiedGithub: state.threeBox.verifiedGithub,\n    verifiedTwitter: state.threeBox.verifiedTwitter,\n    image: state.threeBox.image,\n    coverPhoto: state.threeBox.coverPhoto,\n    emoji: state.threeBox.emoji,\n    email: state.threeBox.email,\n    description: state.threeBox.description,\n    website: state.threeBox.website,\n    birthday: state.threeBox.birthday,\n    memberSince: state.threeBox.memberSince,\n    job: state.threeBox.job,\n    school: state.threeBox.school,\n    degree: state.threeBox.degree,\n    major: state.threeBox.major,\n    year: state.threeBox.year,\n    employer: state.threeBox.employer,\n    publicProfile: state.threeBox.publicProfile,\n    isLoggedIn: state.threeBox.isLoggedIn\n  };\n}\n\nexport default withRouter(connect(mapState)(ProfileCategories));","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/Categories.jsx"],"names":["React","PropTypes","connect","Link","NavLink","withRouter","address","routes","ProfileCategories","name","image","coverPhoto","description","emoji","publicProfile","location","isLoggedIn","console","log","length","contentUrl","EDITPROFILE","code","EthereumLogo","substring","PROFILE_ACTIVITY","PROFILE_ABOUT","TERMS","PRIVACY","propTypes","string","verifiedGithub","verifiedTwitter","email","website","job","school","degree","memberSince","major","year","employer","birthday","array","object","bool","defaultProps","mapState","state","threeBox"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\nimport { address } from '../../utils/address';\nimport * as routes from '../../utils/routes';\nimport EthereumLogo from '../../assets/EthereumIcon.svg';\n\nimport '../../views/styles/Profile.css';\n\nconst ProfileCategories = ({\n  name,\n  image,\n  coverPhoto,\n  description,\n  emoji,\n  publicProfile,\n  location,\n  isLoggedIn,\n}) => (\n    <div>\n\n      {/* {console.log(!!publicProfile)} */}\n      {console.log(publicProfile)}\n      {/* {console.log(!publicProfile && isLoggedIn)} */}\n\n      {/* {((!publicProfile) && isLoggedIn)\n        && (\n          coverPhoto.length > 0 && coverPhoto[0].contentUrl\n            ? <img src={`https://ipfs.infura.io/ipfs/${coverPhoto[0].contentUrl['/']}`} className=\"profile__coverPhoto clearProfPic\" alt=\"profile\" />\n            : <div className=\"profile__coverPhoto\" />)\n      } */}\n\n      {!!publicProfile && (\n        publicProfile.coverPhoto.length > 0 && publicProfile.coverPhoto[0].contentUrl\n          ? <img src={`https://ipfs.infura.io/ipfs/${publicProfile.coverPhoto[0].contentUrl['/']}`} className=\"profile__coverPhoto clearProfPic\" alt=\"profile\" />\n          : <div className=\"profile__coverPhoto\" />)\n      }\n\n      <div id=\"profile\">\n        <div id=\"profile__fixed\">\n\n          <div id=\"profile__user__info\">\n\n            {image.length > 0 && image[0].contentUrl\n              ? <img src={`https://ipfs.infura.io/ipfs/${image[0].contentUrl['/']}`} className=\"profile__user__picture clearProfPic\" alt=\"profile\" />\n              : <div className=\"profile__user__picture\" />\n            }\n\n            <div className=\"profile__basic\">\n              <div className=\"profile__basic__wrapper\">\n                {name\n                  ? <h2 id=\"profile__user__name\">{name}</h2>\n                  : <Link to={routes.EDITPROFILE}><h2 id=\"profile__user__name__add\">Add name</h2></Link>\n                }\n                <span className=\"profile__basic__emoji\">\n                  {emoji.code ? emoji.code : emoji}\n                </span>\n              </div>\n\n              <div id=\"profile__network\" title=\"Network\">\n                <img id=\"profile__network__networkLogo\" src={EthereumLogo} alt=\"Ethereum Logo\" />\n                <p id=\"profile__details__address\" title={address}>\n                  {address && address.substring(0, 8)}\n                  ...\n            </p>\n              </div>\n\n              <p className=\"profile__basic__description\">\n                {description}\n              </p>\n\n            </div>\n\n            <div className=\"profile__category\">\n              <div className=\"profile__category__sectionWrapper\">\n                <NavLink exact to={routes.PROFILE_ACTIVITY} className=\"profile__category__section\">Activity</NavLink>\n                <NavLink exact to={routes.PROFILE_ABOUT} className=\"profile__category__section \">Details</NavLink>\n              </div>\n            </div>\n\n          </div>\n\n          <div id=\"profile__footer\">\n            <div id=\"profile__footer__contents\">\n              <p>3Box 2018</p>\n              <Link to={routes.TERMS}>Terms</Link>\n              <Link to={routes.PRIVACY}>Privacy</Link>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n\nProfileCategories.propTypes = {\n  name: PropTypes.string,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n  email: PropTypes.string,\n  website: PropTypes.string,\n  job: PropTypes.string,\n  school: PropTypes.string,\n  degree: PropTypes.string,\n  memberSince: PropTypes.string,\n  major: PropTypes.string,\n  year: PropTypes.string,\n  employer: PropTypes.string,\n  birthday: PropTypes.string,\n  emoji: PropTypes.string,\n  image: PropTypes.array,\n  coverPhoto: PropTypes.array,\n  description: PropTypes.string,\n  publicProfile: PropTypes.object,\n  isLoggedIn: PropTypes.bool,\n};\n\nProfileCategories.defaultProps = {\n  name: '',\n  verifiedGithub: '',\n  verifiedTwitter: '',\n  email: '',\n  description: '',\n  image: [],\n  coverPhoto: [],\n  emoji: '',\n  memberSince: '',\n  website: '',\n  birthday: '',\n  job: '',\n  school: '',\n  degree: '',\n  major: '',\n  year: '',\n  employer: '',\n  publicProfile: {},\n  isLoggedIn: false,\n};\n\nfunction mapState(state) {\n  return {\n    name: state.threeBox.name,\n    verifiedGithub: state.threeBox.verifiedGithub,\n    verifiedTwitter: state.threeBox.verifiedTwitter,\n    image: state.threeBox.image,\n    coverPhoto: state.threeBox.coverPhoto,\n    emoji: state.threeBox.emoji,\n    email: state.threeBox.email,\n    description: state.threeBox.description,\n    website: state.threeBox.website,\n    birthday: state.threeBox.birthday,\n    memberSince: state.threeBox.memberSince,\n    job: state.threeBox.job,\n    school: state.threeBox.school,\n    degree: state.threeBox.degree,\n    major: state.threeBox.major,\n    year: state.threeBox.year,\n    employer: state.threeBox.employer,\n    publicProfile: state.threeBox.publicProfile,\n    isLoggedIn: state.threeBox.isLoggedIn,\n  };\n}\n\nexport default withRouter(connect(mapState)(ProfileCategories));\n"]},"metadata":{},"sourceType":"module"}