{"ast":null,"code":"'use strict';\n\nvar bsplit = require('buffer-split');\n\nvar errcode = require('err-code');\n/**\n * Checks a record and ensures it is still valid.\n * It runs the needed validators.\n *\n * @param {Object} validators\n * @param {Record} record\n * @param {function(Error)} callback\n * @returns {undefined}\n */\n\n\nvar verifyRecord = function verifyRecord(validators, record, callback) {\n  var key = record.key;\n  var parts = bsplit(key, Buffer.from('/'));\n\n  if (parts.length < 3) {\n    // No validator available\n    return callback();\n  }\n\n  var validator = validators[parts[1].toString()];\n\n  if (!validator) {\n    var errMsg = \"Invalid record keytype\";\n    return callback(errcode(new Error(errMsg), 'ERR_INVALID_RECORD_KEY_TYPE'));\n  }\n\n  validator.func(key, record.value, callback);\n};\n\nmodule.exports = {\n  verifyRecord: verifyRecord,\n  validators: require('./validators')\n};","map":null,"metadata":{},"sourceType":"script"}