{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nfunction toSources(args, defaultOptions) {\n  args = args.slice();\n  var callback = args.filter(function (arg) {\n    return typeof arg === 'function';\n  }).pop();\n  var options = Object.assign({}, defaultOptions, args.filter(function (arg) {\n    return typeof arg === 'object';\n  }).pop() || {}); // Support weird mfs.mv([source, dest], options, callback) signature\n\n  if (Array.isArray(args[0])) {\n    args = args[0];\n  }\n\n  var sources = args.filter(function (arg) {\n    return typeof arg === 'string';\n  }).map(function (source) {\n    source = source.trim();\n    return {\n      path: source,\n      name: path.basename(source),\n      dir: path.dirname(source)\n    };\n  });\n  return {\n    sources: sources,\n    options: options,\n    callback: callback\n  };\n}\n\nmodule.exports = toSources;","map":null,"metadata":{},"sourceType":"script"}