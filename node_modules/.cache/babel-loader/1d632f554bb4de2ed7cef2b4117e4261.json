{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/Content.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter, NavLink, Route } from 'react-router-dom';\nimport * as routes from '../../utils/routes';\nimport StatusUpdate from './StatusUpdate';\nimport Activity from './Activity';\nimport Details from './Details';\nimport '../styles/Feed.css';\nimport '../../views/styles/Profile.css';\nimport '../styles/NetworkArray.css';\n\nvar Content = function Content(_ref) {\n  var publicProfileActivity = _ref.publicProfileActivity,\n      publicProfile = _ref.publicProfile,\n      publicVerifiedAccounts = _ref.publicVerifiedAccounts,\n      location = _ref.location,\n      isPublicProfilePage = _ref.isPublicProfilePage;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(StatusUpdate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"profile__category--mobile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile__category__sectionWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    exact: true,\n    to: isPublicProfilePage ? \"\".concat(routes.PUBLIC_BASE, \"/\").concat(location.pathname.split('/')[2]).concat(routes.PUBLIC_ACTIVITY_ROUTE) : routes.PROFILE_ACTIVITY,\n    className: \"profile__category__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Activity\"), React.createElement(NavLink, {\n    exact: true,\n    to: isPublicProfilePage ? \"\".concat(routes.PUBLIC_BASE, \"/\").concat(location.pathname.split('/')[2]).concat(routes.PUBLIC_DETAILS_ROUTE) : routes.PROFILE_ABOUT,\n    className: \"profile__category__section \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Details\"))), React.createElement(Route, {\n    exact: true,\n    path: routes.PROFILE_ACTIVITY,\n    component: React.createElement(Activity, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: routes.PROFILE_ABOUT,\n    component: React.createElement(Details, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: routes.PUBLIC_ACTIVITY,\n    component: React.createElement(Activity, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: routes.PUBLIC_DETAILS,\n    component: React.createElement(Details, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n};\n\nContent.propTypes = {\n  publicProfile: PropTypes.object,\n  publicVerifiedAccounts: PropTypes.object,\n  publicProfileActivity: PropTypes.array,\n  location: PropTypes.object,\n  isPublicProfilePage: PropTypes.bool\n};\nContent.defaultProps = {\n  publicProfile: {},\n  publicVerifiedAccounts: {},\n  publicProfileActivity: [],\n  isPublicProfilePage: false\n};\n\nvar mapState = function mapState(state) {\n  return {\n    feedByAddress: state.threeBox.feedByAddress,\n    ifFetchingActivity: state.threeBox.ifFetchingActivity,\n    verifiedGithub: state.threeBox.verifiedGithub,\n    publicVerifiedAccounts: state.threeBox.publicVerifiedAccounts\n  };\n};\n\nexport default withRouter(connect(mapState)(Content)); // pathmatching doesnt work with this method\n// {\n//   location.pathname === routes.PROFILE_ACTIVITY\n//   && <Activity publicProfileActivity={publicProfileActivity} />\n// }\n// {\n//   location.pathname === routes.PROFILE_ABOUT\n//   && <Details />\n// }\n// {\n//   location.pathname === routes.PUBLIC_ACTIVITY\n//   && <Activity publicProfileActivity={publicProfileActivity} />\n// }\n// {\n//   location.pathname === routes.PUBLIC_ABOUT\n//   && <Details publicProfile={publicProfile} />\n// }","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/Content.jsx"],"names":["React","PropTypes","connect","withRouter","NavLink","Route","routes","StatusUpdate","Activity","Details","Content","publicProfileActivity","publicProfile","publicVerifiedAccounts","location","isPublicProfilePage","PUBLIC_BASE","pathname","split","PUBLIC_ACTIVITY_ROUTE","PROFILE_ACTIVITY","PUBLIC_DETAILS_ROUTE","PROFILE_ABOUT","PUBLIC_ACTIVITY","PUBLIC_DETAILS","propTypes","object","array","bool","defaultProps","mapState","state","feedByAddress","threeBox","ifFetchingActivity","verifiedGithub"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter, NavLink, Route } from 'react-router-dom';\n\nimport * as routes from '../../utils/routes';\nimport StatusUpdate from './StatusUpdate';\nimport Activity from './Activity';\nimport Details from './Details';\nimport '../styles/Feed.css';\nimport '../../views/styles/Profile.css';\nimport '../styles/NetworkArray.css';\n\nconst Content = ({\n  publicProfileActivity,\n  publicProfile,\n  publicVerifiedAccounts,\n  location,\n  isPublicProfilePage,\n}) => (\n    <div>\n      <StatusUpdate />\n\n      <div className=\"profile__category--mobile\">\n        <div className=\"profile__category__sectionWrapper\">\n          <NavLink exact to={isPublicProfilePage ? `${routes.PUBLIC_BASE}/${location.pathname.split('/')[2]}${routes.PUBLIC_ACTIVITY_ROUTE}` : routes.PROFILE_ACTIVITY} className=\"profile__category__section\">Activity</NavLink>\n          <NavLink exact to={isPublicProfilePage ? `${routes.PUBLIC_BASE}/${location.pathname.split('/')[2]}${routes.PUBLIC_DETAILS_ROUTE}` : routes.PROFILE_ABOUT} className=\"profile__category__section \">Details</NavLink>\n        </div>\n      </div>\n\n      <Route\n        exact\n        path={routes.PROFILE_ACTIVITY}\n        component={<Activity />}\n      />\n      <Route\n        exact\n        path={routes.PROFILE_ABOUT}\n        component={<Details />}\n      />\n\n      <Route\n        exact\n        path={routes.PUBLIC_ACTIVITY}\n        component={<Activity />}\n      />\n      <Route\n        exact\n        path={routes.PUBLIC_DETAILS}\n        component={<Details />}\n      />\n    </div>\n  );\n\nContent.propTypes = {\n  publicProfile: PropTypes.object,\n  publicVerifiedAccounts: PropTypes.object,\n  publicProfileActivity: PropTypes.array,\n  location: PropTypes.object,\n  isPublicProfilePage: PropTypes.bool,\n};\n\nContent.defaultProps = {\n  publicProfile: {},\n  publicVerifiedAccounts: {},\n  publicProfileActivity: [],\n  isPublicProfilePage: false,\n};\n\nconst mapState = state => ({\n  feedByAddress: state.threeBox.feedByAddress,\n  ifFetchingActivity: state.threeBox.ifFetchingActivity,\n  verifiedGithub: state.threeBox.verifiedGithub,\n  publicVerifiedAccounts: state.threeBox.publicVerifiedAccounts,\n});\n\nexport default withRouter(connect(mapState)(Content));\n\n\n// pathmatching doesnt work with this method\n\n// {\n//   location.pathname === routes.PROFILE_ACTIVITY\n//   && <Activity publicProfileActivity={publicProfileActivity} />\n// }\n\n// {\n//   location.pathname === routes.PROFILE_ABOUT\n//   && <Details />\n// }\n\n// {\n//   location.pathname === routes.PUBLIC_ACTIVITY\n//   && <Activity publicProfileActivity={publicProfileActivity} />\n// }\n\n// {\n//   location.pathname === routes.PUBLIC_ABOUT\n//   && <Details publicProfile={publicProfile} />\n// }"]},"metadata":{},"sourceType":"module"}