{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from './reducers';\n\nfunction configureStore()\n/* deps = {} */\n{\n  /* eslint-disable-next-line no-underscore-dangle */\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add middlewares here\n\n  var middleware = [thunkMiddleware]; // use the logger in development mode - this is set in webpack.config.dev.js\n\n  if (process.env.NODE_ENV !== 'production') {\n    /* eslint-disable-next-line no-console */\n    console.warn('----- In Development Mode -----');\n    /* eslint-disable-next-line import/no-extraneous-dependencies, global-require */\n\n    middleware.push(require('redux-logger').createLogger());\n  }\n\n  return createStore(reducer, composeEnhancers(applyMiddleware.apply(void 0, middleware)));\n}\n\nvar store = configureStore();\nexport { configureStore, store };","map":{"version":3,"sources":["/Users/kenzo/Desktop/WeMeme/src/state/store.js"],"names":["createStore","applyMiddleware","compose","thunkMiddleware","reducer","configureStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middleware","process","env","NODE_ENV","console","warn","push","require","createLogger","store"],"mappings":"AAAA,SACEA,WADF,EAEEC,eAFF,EAGEC,OAHF,QAIO,OAJP;AAKA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,SAASC,cAAT;AAAyB;AAAkB;AACzC;AACA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CN,OAAxE,CAFyC,CAGzC;;AACA,MAAMO,UAAU,GAAG,CAACN,eAAD,CAAnB,CAJyC,CAKzC;;AACA,MAAIO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAa,iCAAb;AACA;;AACAL,IAAAA,UAAU,CAACM,IAAX,CAAgBC,OAAO,CAAC,cAAD,CAAP,CAAwBC,YAAxB,EAAhB;AACD;;AAED,SAAOjB,WAAW,CAChBI,OADgB,EAEhBE,gBAAgB,CAACL,eAAe,MAAf,SAAmBQ,UAAnB,CAAD,CAFA,CAAlB;AAID;;AAED,IAAMS,KAAK,GAAGb,cAAc,EAA5B;AAEA,SACEA,cADF,EAEEa,KAFF","sourcesContent":["import {\n  createStore,\n  applyMiddleware,\n  compose,\n} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from './reducers';\n\nfunction configureStore( /* deps = {} */ ) {\n  /* eslint-disable-next-line no-underscore-dangle */\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  // add middlewares here\n  const middleware = [thunkMiddleware];\n  // use the logger in development mode - this is set in webpack.config.dev.js\n  if (process.env.NODE_ENV !== 'production') {\n    /* eslint-disable-next-line no-console */\n    console.warn('----- In Development Mode -----');\n    /* eslint-disable-next-line import/no-extraneous-dependencies, global-require */\n    middleware.push(require('redux-logger').createLogger());\n  }\n\n  return createStore(\n    reducer,\n    composeEnhancers(applyMiddleware(...middleware)),\n  );\n}\n\nconst store = configureStore();\n\nexport {\n  configureStore,\n  store,\n};\n"]},"metadata":{},"sourceType":"module"}