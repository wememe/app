{"ast":null,"code":"\"use strict\";\n\nvar EE = require(\"events\").EventEmitter;\n\nfunction DataQueue() {\n  var ee = new EE();\n  var q = [];\n  var ed;\n\n  function unleak() {\n    ee.removeAllListeners(\"err\");\n    ee.removeAllListeners(\"data\");\n  }\n\n  return {\n    append: function append(data) {\n      if (ed) return ed;\n      q.push(data);\n      ee.emit(\"data\");\n    },\n    prepend: function prepend(data) {\n      //better only call this before the get queue starts\n      if (ed) return ed;\n      q.unshift(data);\n    },\n    error: function error(e) {\n      ed = e;\n      ee.emit(\"err\", e);\n    },\n    get: function get(cb) {\n      unleak();\n      if (ed) return cb(ed);\n      if (q.length) return cb(null, q.shift());\n      ee.once(\"err\", function (e) {\n        unleak();\n        cb(e);\n      });\n      ee.once(\"data\", function () {\n        unleak();\n        return cb(null, q.shift());\n      });\n    },\n    height: function height() {\n      return q.length;\n    }\n  };\n}\n\nmodule.exports = DataQueue;","map":null,"metadata":{},"sourceType":"script"}