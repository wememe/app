{"ast":null,"code":"'use strict';\n\nvar convert = require('./convert');\n\nvar defineProperty = require('./properties').defineProperty;\n\nvar crypto = global.crypto || global.msCrypto;\n\nif (!crypto || !crypto.getRandomValues) {\n  console.log('WARNING: Missing strong random number source; using weak randomBytes');\n  crypto = {\n    getRandomValues: function getRandomValues(buffer) {\n      for (var round = 0; round < 20; round++) {\n        for (var i = 0; i < buffer.length; i++) {\n          if (round) {\n            buffer[i] ^= parseInt(256 * Math.random());\n          } else {\n            buffer[i] = parseInt(256 * Math.random());\n          }\n        }\n      }\n\n      return buffer;\n    },\n    _weakCrypto: true\n  };\n}\n\nfunction randomBytes(length) {\n  if (length <= 0 || length > 1024 || parseInt(length) != length) {\n    throw new Error('invalid length');\n  }\n\n  var result = new Uint8Array(length);\n  crypto.getRandomValues(result);\n  return convert.arrayify(result);\n}\n\n;\n\nif (crypto._weakCrypto === true) {\n  defineProperty(randomBytes, '_weakCrypto', true);\n}\n\nmodule.exports = randomBytes;","map":null,"metadata":{},"sourceType":"script"}