{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/FeedTile.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { timeSince } from '../../utils/time';\nimport PrivateActivity from \"../../assets/PrivateActivity.svg\";\nimport Globe from \"../../assets/Globe.svg\";\nimport Save from \"../../assets/Save.svg\";\nimport Delete from \"../../assets/Delete.svg\";\nimport Internal from \"../../assets/Internal.svg\";\nimport EthereumLine from \"../../assets/EthereumLine.svg\";\nimport Tokens from \"../../assets/Tokens.svg\";\nimport '../styles/Feed.css'; // import Send from '../../assets/Send.svg';\n// import Receive from '../../assets/Receive.svg';\n\nexport var FeedTileActivity = function FeedTileActivity(_ref) {\n  var item = _ref.item,\n      verifiedGithub = _ref.verifiedGithub,\n      verifiedTwitter = _ref.verifiedTwitter;\n  return React.createElement(\"div\", {\n    className: \"feed__activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.op === 'PUT' ? Save : Delete,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" You \\n            \".concat(item.op === 'PUT' ? 'updated your' : 'removed your', \"\\n            \").concat(item.dataType === 'Private' ? 'private data' : '', \"\\n            \").concat(item.key === 'proof_github' ? 'Github username' : '', \"\\n            \").concat(item.key === 'proof_twitter' ? 'Twitter username' : '', \"\\n            \").concat((item.key !== 'proof_twitter' ? item.key !== 'proof_github' : '') ? item.key.replace(/([A-Z])/g, ' $1').trim().toLowerCase() : '', \" \\n            \"), item.op === 'PUT' ? 'to' : ''), item.op === 'PUT' ? React.createElement(\"p\", {\n    className: \"feed__activity__info__token\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, item.key === 'image' || item.key === 'coverPhoto' ? '' : '', item.dataType === 'Private' ? '*****' : '', item.key === 'emoji' ? React.createElement(\"span\", {\n    className: \"feed__activity__address__amount__emoji\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value) : '', item.key === 'proof_github' ? verifiedGithub : '', item.key === 'proof_twitter' ? verifiedTwitter : '', typeof item.value === 'object' && item.key !== 'image' && item.key !== 'coverPhoto' ? item.value ? Object.keys(item.value)[0] : '-----' : '', typeof item.value === 'string' && item.key !== 'proof_github' && item.key !== 'proof_twitter' ? item.value : '') : ''), React.createElement(\"div\", {\n    className: \"feed__activity__metaData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)), item.dataType === 'Private' ? React.createElement(\"img\", {\n    src: PrivateActivity,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: Globe,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))), (item.key === 'image' || item.key === 'coverPhoto') && item.value && item.value.length > 0 && item.value[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(item.value[0].contentUrl['/']),\n    className: \"feed__activity__image clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }) : '');\n};\nFeedTileActivity.propTypes = {\n  item: PropTypes.object,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string\n};\nFeedTileActivity.defaultProps = {\n  item: {},\n  verifiedGithub: '',\n  verifiedTwitter: ''\n};\nexport var FeedTileInternal = function FeedTileInternal(_ref2) {\n  var item = _ref2.item,\n      currentAddress = _ref2.currentAddress,\n      name = _ref2.name,\n      onPublicProfilePage = _ref2.onPublicProfilePage,\n      metaDataName = _ref2.metaDataName;\n  return React.createElement(\"a\", {\n    href: \"https://etherscan.io/tx/\".concat(item.hash),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"feed__activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Internal,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase() ? \"\".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\") : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\")), !onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase() ? 'You sent' : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\"))), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" \").concat(item.tokenSymbol ? item.tokenSymbol : 'Tokens')), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase() ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to \".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"))), !onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase() ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to you\"))), React.createElement(\"div\", {\n    className: \"feed__activity__metaData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)), item.dataType === 'Private' ? React.createElement(\"img\", {\n    src: PrivateActivity,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: Globe,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }))));\n};\nFeedTileInternal.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  currentAddress: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool\n};\nFeedTileInternal.defaultProps = {\n  item: {},\n  metaDataName: '',\n  currentAddress: '',\n  name: '',\n  onPublicProfilePage: false\n};\nexport var FeedTileToken = function FeedTileToken(_ref3) {\n  var item = _ref3.item,\n      currentAddress = _ref3.currentAddress,\n      name = _ref3.name,\n      onPublicProfilePage = _ref3.onPublicProfilePage,\n      metaDataName = _ref3.metaDataName;\n  return React.createElement(\"a\", {\n    href: \"https://etherscan.io/tx/\".concat(item.hash),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"feed__activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Tokens,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase() ? \"\".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\") : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\")), !onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase() ? 'You sent' : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\"))), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" \").concat(item.tokenSymbol ? item.tokenSymbol : 'Tokens')), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase() ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to \".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"))), !onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase() ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to you\"))), React.createElement(\"div\", {\n    className: \"feed__activity__metaData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)), item.dataType === 'Private' ? React.createElement(\"img\", {\n    src: PrivateActivity,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: Globe,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }))));\n};\nFeedTileToken.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  currentAddress: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool\n};\nFeedTileToken.defaultProps = {\n  item: {},\n  metaDataName: '',\n  currentAddress: '',\n  name: '',\n  onPublicProfilePage: false\n};\nexport var FeedTileTXS = function FeedTileTXS(_ref4) {\n  var item = _ref4.item,\n      currentAddress = _ref4.currentAddress,\n      name = _ref4.name,\n      onPublicProfilePage = _ref4.onPublicProfilePage,\n      metaDataName = _ref4.metaDataName;\n  return React.createElement(\"a\", {\n    href: \"https://etherscan.io/tx/\".concat(item.hash),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"feed__activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: EthereumLine,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase() ? \"\".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\") : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\")), !onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase() ? 'You sent' : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\"))), React.createElement(\"p\", {\n    className: \"feed__activity__info__token\",\n    title: \"\".concat((Number(item.value) / 1000000000000000000).toString(), \" ETH\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" ETH\")), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase() ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to \".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"))), !onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase() ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to you\"))), React.createElement(\"div\", {\n    className: \"feed__activity__metaData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)), item.dataType === 'Private' ? React.createElement(\"img\", {\n    src: PrivateActivity,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: Globe,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }))));\n};\nFeedTileTXS.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  currentAddress: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool\n};\nFeedTileTXS.defaultProps = {\n  item: {},\n  metaDataName: '',\n  currentAddress: '',\n  name: '',\n  onPublicProfilePage: false\n};","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/FeedTile.jsx"],"names":["React","PropTypes","timeSince","FeedTileActivity","item","verifiedGithub","verifiedTwitter","op","Save","Delete","dataType","key","replace","trim","toLowerCase","value","Object","keys","timeStamp","PrivateActivity","Globe","length","contentUrl","propTypes","object","string","defaultProps","FeedTileInternal","currentAddress","name","onPublicProfilePage","metaDataName","hash","Internal","from","substring","Number","toString","tokenSymbol","to","bool","FeedTileToken","Tokens","FeedTileTXS","EthereumLine"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { timeSince } from '../../utils/time';\nimport PrivateActivity from '../../assets/PrivateActivity.svg';\nimport Globe from '../../assets/Globe.svg';\nimport Save from '../../assets/Save.svg';\nimport Delete from '../../assets/Delete.svg';\n\nimport Internal from '../../assets/Internal.svg';\nimport EthereumLine from '../../assets/EthereumLine.svg';\nimport Tokens from '../../assets/Tokens.svg';\nimport '../styles/Feed.css';\n// import Send from '../../assets/Send.svg';\n// import Receive from '../../assets/Receive.svg';\n\nexport const FeedTileActivity = ({ item, verifiedGithub, verifiedTwitter }) => (\n  <div className=\"feed__activity\">\n    <div className=\"feed__activity__data\">\n      <div className=\"feed__activity__info\">\n        <img src={item.op === 'PUT' ? Save : Delete} alt=\"Transaction Icon\" />\n\n        <p className=\"feed__activity__info__key\">\n          {` You \n            ${item.op === 'PUT' ? 'updated your' : 'removed your'}\n            ${item.dataType === 'Private' ? 'private data' : ''}\n            ${item.key === 'proof_github' ? 'Github username' : ''}\n            ${item.key === 'proof_twitter' ? 'Twitter username' : ''}\n            ${(item.key !== 'proof_twitter' ? item.key !== 'proof_github' : '')\n              ? (item.key).replace(/([A-Z])/g, ' $1').trim().toLowerCase()\n              : ''} \n            `}\n          {item.op === 'PUT' ? 'to' : ''}\n        </p>\n\n        {item.op === 'PUT' ? (\n          <p className=\"feed__activity__info__token\">\n            {(item.key === 'image' || item.key === 'coverPhoto')\n              ? '' : ''}\n            {item.dataType === 'Private'\n              ? '*****' : ''}\n            {item.key === 'emoji'\n              ? (\n                <span className=\"feed__activity__address__amount__emoji\">\n                  {typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value}\n                </span>\n              ) : ''}\n            {item.key === 'proof_github'\n              ? verifiedGithub : ''}\n            {item.key === 'proof_twitter'\n              ? verifiedTwitter : ''}\n\n            {(typeof item.value === 'object' && (item.key !== 'image' && item.key !== 'coverPhoto'))\n              ? (item.value ? Object.keys(item.value)[0] : '-----')\n              : ''}\n\n            {typeof item.value === 'string' && (item.key !== 'proof_github' && item.key !== 'proof_twitter')\n              ? item.value : ''}\n          </p>) : ''}\n      </div>\n      <div className=\"feed__activity__metaData\">\n        <p className=\"feed__activity__address__time\">\n          {timeSince(item.timeStamp * 1000)}\n        </p>\n        {item.dataType === 'Private'\n          ? <img src={PrivateActivity} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType\" />\n          : <img src={Globe} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType\" />\n        }\n      </div>\n    </div>\n\n    {((item.key === 'image' || item.key === 'coverPhoto')\n      && item.value\n      && item.value.length > 0\n      && item.value[0].contentUrl)\n      ? (\n        <img src={`https://ipfs.infura.io/ipfs/${item.value[0].contentUrl['/']}`} className=\"feed__activity__image clearProfPic\" alt=\"profile\" />\n      ) : ''\n    }\n  </div>\n);\n\nFeedTileActivity.propTypes = {\n  item: PropTypes.object,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n};\n\nFeedTileActivity.defaultProps = {\n  item: {},\n  verifiedGithub: '',\n  verifiedTwitter: '',\n};\n\nexport const FeedTileInternal = ({ item, currentAddress, name, onPublicProfilePage, metaDataName }) => (\n  <a href={`https://etherscan.io/tx/${item.hash}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"feed__activity\">\n    <div className=\"feed__activity__data\">\n      <div className=\"feed__activity__info\">\n        <img src={Internal} alt=\"Transaction Icon\" />\n        <p className=\"feed__activity__info__key\">\n          {onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase()\n            ? `${name || `${item.from.toLowerCase().substring(0, 12)}...`} sent`\n            : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n          }\n          {!onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase()\n            ? 'You sent'\n            : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n          }\n        </p>\n        <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n          {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ${item.tokenSymbol ? item.tokenSymbol : 'Tokens'}`}\n        </p>\n        <p className=\"feed__activity__info__key\">\n          {onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase()\n            ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n            : `to ${name || `${item.from.toLowerCase().substring(0, 12)}...`}`)\n          }\n          {!onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase()\n            ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n            : `to you`)\n          }\n        </p>\n      </div>\n      <div className=\"feed__activity__metaData\">\n        <p className=\"feed__activity__address__time\">\n          {timeSince(item.timeStamp * 1000)}\n        </p>\n        {item.dataType === 'Private'\n          ? <img src={PrivateActivity} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType\" />\n          : <img src={Globe} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType\" />\n        }\n      </div>\n    </div>\n  </a>\n);\n\nFeedTileInternal.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  currentAddress: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n};\n\nFeedTileInternal.defaultProps = {\n  item: {},\n  metaDataName: '',\n  currentAddress: '',\n  name: '',\n  onPublicProfilePage: false,\n};\n\nexport const FeedTileToken = ({ item, currentAddress, name, onPublicProfilePage, metaDataName }) => (\n  <a href={`https://etherscan.io/tx/${item.hash}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"feed__activity\">\n    <div className=\"feed__activity__data\">\n      <div className=\"feed__activity__info\">\n        <img src={Tokens} alt=\"Transaction Icon\" />\n        <p className=\"feed__activity__info__key\">\n          {onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase()\n            ? `${name || `${item.from.toLowerCase().substring(0, 12)}...`} sent`\n            : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n          }\n          {!onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase()\n            ? 'You sent'\n            : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n          }\n        </p>\n        <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n          {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ${item.tokenSymbol ? item.tokenSymbol : 'Tokens'}`}\n        </p>\n        <p className=\"feed__activity__info__key\">\n          {onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase()\n            ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n            : `to ${name || `${item.from.toLowerCase().substring(0, 12)}...`}`)\n          }\n          {!onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase()\n            ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n            : `to you`)\n          }\n        </p>\n      </div>\n      <div className=\"feed__activity__metaData\">\n        <p className=\"feed__activity__address__time\">\n          {timeSince(item.timeStamp * 1000)}\n        </p>\n        {item.dataType === 'Private'\n          ? <img src={PrivateActivity} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType\" />\n          : <img src={Globe} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType\" />\n        }\n      </div>\n    </div>\n  </a>\n);\n\nFeedTileToken.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  currentAddress: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n};\n\nFeedTileToken.defaultProps = {\n  item: {},\n  metaDataName: '',\n  currentAddress: '',\n  name: '',\n  onPublicProfilePage: false,\n};\n\nexport const FeedTileTXS = ({ item, currentAddress, name, onPublicProfilePage, metaDataName }) => (\n  <a href={`https://etherscan.io/tx/${item.hash}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"feed__activity\">\n    <div className=\"feed__activity__data\">\n      <div className=\"feed__activity__info\">\n        <img src={EthereumLine} alt=\"Transaction Icon\" />\n        <p className=\"feed__activity__info__key\">\n          {onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase()\n            ? `${name || `${item.from.toLowerCase().substring(0, 12)}...`} sent`\n            : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n          }\n          {!onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase()\n            ? 'You sent'\n            : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n          }\n        </p>\n        <p className=\"feed__activity__info__token\" title={`${(Number(item.value) / 1000000000000000000).toString()} ETH`}>\n          {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ETH`}\n        </p>\n        <p className=\"feed__activity__info__key\">\n          {onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase()\n            ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n            : `to ${name || `${item.from.toLowerCase().substring(0, 12)}...`}`)\n          }\n          {!onPublicProfilePage && (item.from.toLowerCase() === currentAddress.toLowerCase()\n            ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n            : `to you`)\n          }\n        </p>\n      </div>\n      <div className=\"feed__activity__metaData\">\n        <p className=\"feed__activity__address__time\">\n          {timeSince(item.timeStamp * 1000)}\n        </p>\n        {item.dataType === 'Private'\n          ? <img src={PrivateActivity} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType\" />\n          : <img src={Globe} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType\" />\n        }\n      </div>\n    </div>\n  </a>\n);\n\nFeedTileTXS.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  currentAddress: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n};\n\nFeedTileTXS.defaultProps = {\n  item: {},\n  metaDataName: '',\n  currentAddress: '',\n  name: '',\n  onPublicProfilePage: false,\n};"]},"metadata":{},"sourceType":"module"}