{"ast":null,"code":"'use strict';\n\nvar debug = require('debug');\n\nvar waterfall = require('async/waterfall');\n\nvar support = require('../support');\n\nvar crypto = require('./crypto');\n\nvar log = debug('libp2p:secio');\nlog.error = debug('libp2p:secio:error'); // step 2. Exchange\n// -- exchange (signed) ephemeral keys. verify signatures.\n\nmodule.exports = function exchange(state, callback) {\n  log('2. exchange - start');\n  log('2. exchange - writing exchange');\n  waterfall([function (cb) {\n    return crypto.createExchange(state, cb);\n  }, function (ex, cb) {\n    support.write(state, ex);\n    support.read(state.shake, cb);\n  }, function (msg, cb) {\n    log('2. exchange - reading exchange');\n    crypto.verify(state, msg, cb);\n  }, function (cb) {\n    return crypto.generateKeys(state, cb);\n  }], function (err) {\n    if (err) {\n      return callback(err);\n    }\n\n    log('2. exchange - finish');\n    callback();\n  });\n};","map":null,"metadata":{},"sourceType":"script"}