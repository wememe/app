{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/SideBar.jsx\";\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\nimport PubSideBar from './PubSideBar.jsx';\nimport { copyToClipBoard } from '../../state/actions';\nimport * as routes from '../../utils/routes';\nimport EthereumLogo from \"../../assets/EthereumIcon.svg\";\nimport Copy from \"../../assets/Copy.svg\";\nimport CopyGrey from \"../../assets/CopyGrey.svg\";\nimport '../../views/styles/Profile.css';\nimport '../styles/Modal.css';\n\nvar SideBar = function SideBar(_ref) {\n  var name = _ref.name,\n      image = _ref.image,\n      coverPhoto = _ref.coverPhoto,\n      description = _ref.description,\n      emoji = _ref.emoji,\n      location = _ref.location,\n      onPublicProfilePage = _ref.onPublicProfilePage,\n      copyToClipBoard = _ref.copyToClipBoard,\n      copySuccessful = _ref.copySuccessful,\n      showDownloadBanner = _ref.showDownloadBanner,\n      publicCoverPhoto = _ref.publicCoverPhoto,\n      publicImage = _ref.publicImage,\n      publicName = _ref.publicName,\n      publicEmoji = _ref.publicEmoji,\n      publicDescription = _ref.publicDescription,\n      showSignInBanner = _ref.showSignInBanner;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, !onPublicProfilePage && (coverPhoto.length > 0 && coverPhoto[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(coverPhoto[0].contentUrl['/']),\n    className: \"\".concat(showDownloadBanner ? 'bannerMargin' : '', \" profile__coverPhoto clearProfPic\"),\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"\".concat(showDownloadBanner ? 'bannerMargin' : '', \" profile__coverPhoto\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), onPublicProfilePage && (publicCoverPhoto.length > 0 && publicCoverPhoto[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(publicCoverPhoto[0].contentUrl['/']),\n    className: \"\".concat(showSignInBanner ? 'showSignInBanner' : '', \" \").concat(showDownloadBanner || showSignInBanner ? 'bannerMargin' : '', \" profile__coverPhoto clearProfPic\"),\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"\".concat(showSignInBanner ? 'showSignInBanner' : '', \" \").concat(showDownloadBanner || showSignInBanner ? 'bannerMargin' : '', \" profile__coverPhoto\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"\".concat(showSignInBanner ? 'showSignInBanner' : '', \" \").concat(showDownloadBanner || showSignInBanner ? 'bannerMargin' : '', \" profile__user__info\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, !onPublicProfilePage && (image.length > 0 && image[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(image[0].contentUrl['/']),\n    className: \"profile__user__picture clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"profile__user__picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), onPublicProfilePage && (publicImage.length > 0 && publicImage[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(publicImage[0].contentUrl['/']),\n    className: \"profile__user__picture clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"profile__user__picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"profile__basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile__basic__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, !onPublicProfilePage && (name ? React.createElement(\"h2\", {\n    id: \"profile__user__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, name) : React.createElement(Link, {\n    to: \"/\".concat(currentAddress, \"/\").concat(routes.EDIT),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"profile__user__name__add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Add name\"))), onPublicProfilePage && (publicName ? React.createElement(\"h2\", {\n    id: \"profile__user__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, publicName) : React.createElement(\"h2\", {\n    id: \"profile__user__name__add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"profile__basic__emoji\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, !onPublicProfilePage && (emoji.code ? emoji.code : emoji), onPublicProfilePage && publicEmoji && (publicEmoji.code ? publicEmoji.code : publicEmoji))), React.createElement(\"div\", {\n    id: \"profile__network\",\n    title: \"Network\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    id: \"profile__network__networkLogo\",\n    src: EthereumLogo,\n    alt: \"Ethereum Logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"profile__details__address\",\n    title: currentAddress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, !onPublicProfilePage && currentAddress && currentAddress.substring(0, 8), onPublicProfilePage && location.pathname.split('/')[1].substring(0, 8), \"...\")), React.createElement(\"p\", {\n    className: \"profile__basic__description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, !onPublicProfilePage && description, onPublicProfilePage && publicDescription), React.createElement(\"div\", {\n    className: \"publicProfile__basic--mobile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(PubSideBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"profile__category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile__category__sectionWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, !onPublicProfilePage ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    exact: true,\n    to: \"/\".concat(currentAddress, \"/\").concat(routes.ACTIVITY),\n    className: \"profile__category__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Activity\"), React.createElement(NavLink, {\n    exact: true,\n    to: \"/\".concat(currentAddress, \"/\").concat(routes.DETAILS),\n    className: \"profile__category__section \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Details\")) : React.createElement(PubSideBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }))), !onPublicProfilePage && React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return copyToClipBoard('profile', null);\n    },\n    className: \"profile__links__copy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"profile__links__copy__icon\",\n    src: CopyGrey,\n    alt: \"Copy icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Share profile\")), React.createElement(\"div\", {\n    id: \"profile__footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__footer__contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"3Box 2018\"), React.createElement(Link, {\n    to: routes.TERMS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Terms\"), React.createElement(Link, {\n    to: routes.PRIVACY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Privacy\")))))), document.queryCommandSupported('copy') && React.createElement(\"div\", {\n    className: \"\".concat(copySuccessful ? 'showModal' : '', \" modal__container--copied modal--effect\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal--sync\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal--sync__copy__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Copy,\n    className: \"modal__copy__ico\",\n    alt: \"Copied\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"COPIED PROFILE URL\")))));\n};\n\nSideBar.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  emoji: PropTypes.string,\n  publicEmoji: PropTypes.string,\n  currentAddress: PropTypes.string,\n  publicName: PropTypes.string,\n  publicDescription: PropTypes.string,\n  image: PropTypes.array,\n  coverPhoto: PropTypes.array,\n  publicCoverPhoto: PropTypes.array,\n  publicImage: PropTypes.array,\n  location: PropTypes.object.isRequired,\n  onPublicProfilePage: PropTypes.bool,\n  copySuccessful: PropTypes.bool,\n  showDownloadBanner: PropTypes.bool,\n  showSignInBanner: PropTypes.bool,\n  copyToClipBoard: PropTypes.func.isRequired\n};\nSideBar.defaultProps = {\n  name: '',\n  publicName: '',\n  description: '',\n  publicEmoji: '',\n  publicDescription: '',\n  currentAddress: '',\n  image: [],\n  coverPhoto: [],\n  publicImage: [],\n  publicCoverPhoto: [],\n  emoji: '',\n  copySuccessful: false,\n  onPublicProfilePage: false,\n  showDownloadBanner: false,\n  showSignInBanner: false\n};\n\nfunction mapState(state) {\n  return {\n    name: state.threeBox.name,\n    image: state.threeBox.image,\n    coverPhoto: state.threeBox.coverPhoto,\n    emoji: state.threeBox.emoji,\n    description: state.threeBox.description,\n    copySuccessful: state.threeBox.copySuccessful,\n    showDownloadBanner: state.threeBox.showDownloadBanner,\n    showSignInBanner: state.threeBox.showSignInBanner,\n    onPublicProfilePage: state.threeBox.onPublicProfilePage,\n    publicCoverPhoto: state.threeBox.publicCoverPhoto,\n    publicImage: state.threeBox.publicImage,\n    publicName: state.threeBox.publicName,\n    publicEmoji: state.threeBox.publicEmoji,\n    publicDescription: state.threeBox.publicDescription,\n    currentAddress: state.threeBox.currentAddress\n  };\n}\n\nexport default withRouter(connect(mapState, {\n  copyToClipBoard: copyToClipBoard\n})(SideBar));","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/SideBar.jsx"],"names":["React","useRef","PropTypes","connect","Link","NavLink","withRouter","PubSideBar","copyToClipBoard","routes","SideBar","name","image","coverPhoto","description","emoji","location","onPublicProfilePage","copySuccessful","showDownloadBanner","publicCoverPhoto","publicImage","publicName","publicEmoji","publicDescription","showSignInBanner","length","contentUrl","currentAddress","EDIT","code","EthereumLogo","substring","pathname","split","ACTIVITY","DETAILS","CopyGrey","TERMS","PRIVACY","document","queryCommandSupported","Copy","propTypes","string","array","object","isRequired","bool","func","defaultProps","mapState","state","threeBox"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\n\nimport PubSideBar from './PubSideBar.jsx';\nimport { copyToClipBoard } from '../../state/actions';\nimport * as routes from '../../utils/routes';\nimport EthereumLogo from '../../assets/EthereumIcon.svg';\nimport Copy from '../../assets/Copy.svg';\nimport CopyGrey from '../../assets/CopyGrey.svg';\nimport '../../views/styles/Profile.css';\nimport '../styles/Modal.css';\n\nconst SideBar = ({\n  name,\n  image,\n  coverPhoto,\n  description,\n  emoji,\n  location,\n  onPublicProfilePage,\n  copyToClipBoard,\n  copySuccessful,\n  showDownloadBanner,\n  publicCoverPhoto,\n  publicImage,\n  publicName,\n  publicEmoji,\n  publicDescription,\n  showSignInBanner,\n}) => (\n    <div>\n      {!onPublicProfilePage && (\n        coverPhoto.length > 0 && coverPhoto[0].contentUrl\n          ? <img src={`https://ipfs.infura.io/ipfs/${coverPhoto[0].contentUrl['/']}`} className={`${showDownloadBanner ? 'bannerMargin' : ''} profile__coverPhoto clearProfPic`} alt=\"profile\" />\n          : <div className={`${showDownloadBanner ? 'bannerMargin' : ''} profile__coverPhoto`} />)\n      }\n      {onPublicProfilePage && (\n        publicCoverPhoto.length > 0 && publicCoverPhoto[0].contentUrl\n          ? <img src={`https://ipfs.infura.io/ipfs/${publicCoverPhoto[0].contentUrl['/']}`} className={`${showSignInBanner ? 'showSignInBanner' : ''} ${(showDownloadBanner || showSignInBanner) ? 'bannerMargin' : ''} profile__coverPhoto clearProfPic`} alt=\"profile\" />\n          : <div className={`${showSignInBanner ? 'showSignInBanner' : ''} ${(showDownloadBanner || showSignInBanner) ? 'bannerMargin' : ''} profile__coverPhoto`} />)\n      }\n\n      <div id=\"profile\">\n        <div id=\"profile__fixed\">\n\n          <div className={`${showSignInBanner ? 'showSignInBanner' : ''} ${(showDownloadBanner || showSignInBanner) ? 'bannerMargin' : ''} profile__user__info`}>\n\n            {!onPublicProfilePage && (\n              image.length > 0 && image[0].contentUrl\n                ? <img src={`https://ipfs.infura.io/ipfs/${image[0].contentUrl['/']}`} className=\"profile__user__picture clearProfPic\" alt=\"profile\" />\n                : <div className=\"profile__user__picture\" />)\n            }\n\n            {onPublicProfilePage && (\n              publicImage.length > 0 && publicImage[0].contentUrl\n                ? <img src={`https://ipfs.infura.io/ipfs/${publicImage[0].contentUrl['/']}`} className=\"profile__user__picture clearProfPic\" alt=\"profile\" />\n                : <div className=\"profile__user__picture\" />)\n            }\n\n            <div className=\"profile__basic\">\n              <div className=\"profile__basic__wrapper\">\n                {!onPublicProfilePage && (name\n                  ? <h2 id=\"profile__user__name\">{name}</h2>\n                  : <Link to={`/${currentAddress}/${routes.EDIT}`}><h2 id=\"profile__user__name__add\">Add name</h2></Link>)\n                }\n\n                {onPublicProfilePage && (publicName\n                  ? <h2 id=\"profile__user__name\">{publicName}</h2>\n                  : <h2 id=\"profile__user__name__add\"></h2>)\n                }\n\n\n                <span className=\"profile__basic__emoji\">\n                  {!onPublicProfilePage && (emoji.code ? emoji.code : emoji)}\n                  {(onPublicProfilePage && publicEmoji) && (publicEmoji.code ? publicEmoji.code : publicEmoji)}\n                </span>\n              </div>\n\n              <div id=\"profile__network\" title=\"Network\">\n                <img id=\"profile__network__networkLogo\" src={EthereumLogo} alt=\"Ethereum Logo\" />\n                <p id=\"profile__details__address\" title={currentAddress}>\n                  {!onPublicProfilePage && currentAddress && currentAddress.substring(0, 8)}\n                  {onPublicProfilePage && location.pathname.split('/')[1].substring(0, 8)}\n                  ...\n                </p>\n              </div>\n\n              <p className=\"profile__basic__description\">\n                {!onPublicProfilePage && description}\n                {onPublicProfilePage && publicDescription}\n              </p>\n\n              <div className=\"publicProfile__basic--mobile\">\n                <PubSideBar />\n              </div>\n\n            </div>\n\n            <div className=\"profile__category\">\n              <div className=\"profile__category__sectionWrapper\">\n                {!onPublicProfilePage ? (\n                  <React.Fragment>\n                    <NavLink exact to={`/${currentAddress}/${routes.ACTIVITY}`} className=\"profile__category__section\">Activity</NavLink>\n                    <NavLink exact to={`/${currentAddress}/${routes.DETAILS}`} className=\"profile__category__section \">Details</NavLink>\n                  </React.Fragment>)\n                  : (\n                    <PubSideBar />)}\n              </div>\n            </div>\n\n            {/* this is showing when its not supposed to, how does it know that its my currentAddress??? */}\n            {(!onPublicProfilePage)\n              && (\n                <button type=\"button\" onClick={() => copyToClipBoard('profile', null)} className=\"profile__links__copy\">\n                  <img className=\"profile__links__copy__icon\" src={CopyGrey} alt=\"Copy icon\" />\n                  <p>\n                    Share profile\n                  </p>\n                </button>\n              )}\n\n            <div id=\"profile__footer\">\n              <div id=\"profile__footer__contents\">\n                <p>3Box 2018</p>\n                <Link to={routes.TERMS}>Terms</Link>\n                <Link to={routes.PRIVACY}>Privacy</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {document.queryCommandSupported('copy') && (\n        <div className={`${copySuccessful ? 'showModal' : ''} modal__container--copied modal--effect`}>\n          <div className=\"modal--sync\">\n            <div className=\"modal--sync__copy__wrapper\">\n              <img src={Copy} className=\"modal__copy__ico\" alt=\"Copied\" />\n              <p>COPIED PROFILE URL</p>\n            </div>\n          </div>\n        </div>)}\n    </div>\n  );\n\nSideBar.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  emoji: PropTypes.string,\n  publicEmoji: PropTypes.string,\n  currentAddress: PropTypes.string,\n  publicName: PropTypes.string,\n  publicDescription: PropTypes.string,\n  image: PropTypes.array,\n  coverPhoto: PropTypes.array,\n  publicCoverPhoto: PropTypes.array,\n  publicImage: PropTypes.array,\n  location: PropTypes.object.isRequired,\n  onPublicProfilePage: PropTypes.bool,\n  copySuccessful: PropTypes.bool,\n  showDownloadBanner: PropTypes.bool,\n  showSignInBanner: PropTypes.bool,\n  copyToClipBoard: PropTypes.func.isRequired,\n};\n\nSideBar.defaultProps = {\n  name: '',\n  publicName: '',\n  description: '',\n  publicEmoji: '',\n  publicDescription: '',\n  currentAddress: '',\n  image: [],\n  coverPhoto: [],\n  publicImage: [],\n  publicCoverPhoto: [],\n  emoji: '',\n  copySuccessful: false,\n  onPublicProfilePage: false,\n  showDownloadBanner: false,\n  showSignInBanner: false,\n};\n\nfunction mapState(state) {\n  return {\n    name: state.threeBox.name,\n    image: state.threeBox.image,\n    coverPhoto: state.threeBox.coverPhoto,\n    emoji: state.threeBox.emoji,\n    description: state.threeBox.description,\n    copySuccessful: state.threeBox.copySuccessful,\n    showDownloadBanner: state.threeBox.showDownloadBanner,\n    showSignInBanner: state.threeBox.showSignInBanner,\n    onPublicProfilePage: state.threeBox.onPublicProfilePage,\n    publicCoverPhoto: state.threeBox.publicCoverPhoto,\n    publicImage: state.threeBox.publicImage,\n    publicName: state.threeBox.publicName,\n    publicEmoji: state.threeBox.publicEmoji,\n    publicDescription: state.threeBox.publicDescription,\n    currentAddress: state.threeBox.currentAddress,\n  };\n}\n\nexport default withRouter(connect(mapState,\n  {\n    copyToClipBoard,\n  })(SideBar));\n"]},"metadata":{},"sourceType":"module"}