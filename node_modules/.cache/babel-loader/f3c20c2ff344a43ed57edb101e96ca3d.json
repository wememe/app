{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar WS = require('libp2p-websockets');\n\nvar WebRTCStar = require('libp2p-webrtc-star');\n\nvar WebSocketStar = require('libp2p-websocket-star');\n\nvar Multiplex = require('libp2p-mplex');\n\nvar SECIO = require('libp2p-secio');\n\nvar Bootstrap = require('libp2p-bootstrap');\n\nvar libp2p = require('libp2p');\n\nvar defaultsDeep = require('@nodeutils/defaults-deep');\n\nvar Node =\n/*#__PURE__*/\nfunction (_libp2p) {\n  _inherits(Node, _libp2p);\n\n  function Node(_options) {\n    _classCallCheck(this, Node);\n\n    var wrtcstar = new WebRTCStar({\n      id: _options.peerInfo.id\n    });\n    var wsstar = new WebSocketStar({\n      id: _options.peerInfo.id\n    });\n    var defaults = {\n      modules: {\n        transport: [WS, wrtcstar, wsstar],\n        streamMuxer: [Multiplex],\n        connEncryption: [SECIO],\n        peerDiscovery: [wrtcstar.discovery, wsstar.discovery, Bootstrap]\n      },\n      config: {\n        peerDiscovery: {\n          bootstrap: {\n            enabled: true\n          },\n          webRTCStar: {\n            enabled: true\n          },\n          websocketStar: {\n            enabled: true\n          }\n        },\n        EXPERIMENTAL: {\n          dht: false,\n          pubsub: false\n        }\n      }\n    };\n    return _possibleConstructorReturn(this, _getPrototypeOf(Node).call(this, defaultsDeep(_options, defaults)));\n  }\n\n  return Node;\n}(libp2p);\n\nmodule.exports = Node;","map":null,"metadata":{},"sourceType":"script"}