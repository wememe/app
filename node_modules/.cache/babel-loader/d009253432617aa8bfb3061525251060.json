{"ast":null,"code":"import _objectSpread from \"/Users/kenzo/Desktop/app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport var threeBoxReducer = function threeBoxReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'WEMEME_CONTRACT':\n      return _objectSpread({}, state, {\n        wememeContract: action.wememeContract,\n        address: action.address,\n        user: action.wememeContract,\n        profile: action.profile\n      });\n\n    case 'CHECK_WALLET':\n      return _objectSpread({}, state, {\n        hasWallet: action.hasWallet,\n        showDownloadBanner: action.showDownloadBanner,\n        currentWallet: action.currentWallet,\n        mobileWalletRequiredModal: action.mobileWalletRequiredModal\n      });\n\n    case 'UPDATE_ADDRESSES':\n      return _objectSpread({}, state, {\n        isSignedIntoWallet: action.isSignedIntoWallet,\n        isLoggedIn: action.isLoggedIn,\n        accountAddress: action.accountAddress,\n        allowAccessModal: action.allowAccessModal,\n        currentAddress: action.currentAddress\n      });\n\n    case 'UPDATE_NETWORK':\n      return _objectSpread({}, state, {\n        currentNetwork: action.currentNetwork,\n        prevNetwork: action.prevNetwork,\n        prevPrevNetwork: action.prevPrevNetwork\n      });\n\n    case 'SIGN_IN_UP':\n      return _objectSpread({}, state, {\n        box: action.box,\n        ifFetchingThreeBox: false,\n        showErrorModal: false,\n        errorMessage: '',\n        name: action.name,\n        github: action.github,\n        image: action.image,\n        email: action.email,\n        feedByAddress: action.feedByAddress,\n        isLoggedIn: action.isLoggedIn\n      });\n\n    case 'UPDATE_ACTIVITY':\n      return _objectSpread({}, state, {\n        feedByAddress: action.feedByAddress,\n        ifFetchingActivity: false,\n        isLoggedIn: action.isLoggedIn\n      });\n\n    case 'FAILED_LOADING_ACTIVITY':\n      return _objectSpread({}, state, {\n        feedByAddress: [],\n        ifFetchingActivity: false\n      });\n\n    case 'UPDATE_THREEBOX':\n      return _objectSpread({}, state, {\n        box: action.box,\n        ifFetchingThreeBox: false,\n        isLoggedIn: action.isLoggedIn\n      });\n\n    case 'LOADING_PUBLIC_PROFILE':\n      return _objectSpread({}, state, {\n        isLoadingPublicProfile: action.isLoadingPublicProfile\n      });\n\n    case 'HANDLE_SIGNIN_BANNER':\n      return _objectSpread({}, state, {\n        showSignInBanner: action.showSignInBanner\n      });\n\n    case 'GET_PUBLIC_PROFILE':\n      return _objectSpread({}, state, {\n        publicGithub: action.publicGithub,\n        publicTwitter: action.publicTwitter,\n        publicDescription: action.publicDescription,\n        publicLocation: action.publicLocation,\n        publicWebsite: action.publicWebsite,\n        publicMemberSince: action.publicMemberSince,\n        publicJob: action.publicJob,\n        publicSchool: action.publicSchool,\n        publicDegree: action.publicDegree,\n        publicMajor: action.publicMajor,\n        publicYear: action.publicYear,\n        publicEmployer: action.publicEmployer,\n        publicCoverPhoto: action.publicCoverPhoto,\n        publicImage: action.publicImage,\n        publicName: action.publicName,\n        publicEmoji: action.publicEmoji,\n        publicStatus: action.publicStatus\n      });\n\n    case 'GET_PUBLIC_PROFILE_ACTIVITY':\n      return _objectSpread({}, state, {\n        publicProfileActivity: action.publicProfileActivity,\n        ifFetchingActivity: action.ifFetchingActivity\n      });\n\n    case 'GET_PUBLIC_NAME':\n      return _objectSpread({}, state, {\n        name: action.name\n      });\n\n    case 'GET_PUBLIC_GITHUB':\n      return _objectSpread({}, state, {\n        github: action.github\n      });\n\n    case 'GET_VERIFIED_PUBLIC_GITHUB':\n      return _objectSpread({}, state, {\n        verifiedGithub: action.verifiedGithub\n      });\n\n    case 'GET_VERIFIED_PUBLIC_TWITTER':\n      return _objectSpread({}, state, {\n        verifiedTwitter: action.verifiedTwitter\n      });\n\n    case 'GET_VERIFIED_PRIVATE_EMAIL':\n      return _objectSpread({}, state, {\n        verifiedEmail: action.verifiedEmail\n      });\n\n    case 'GET_PUBLIC_DESCRIPTION':\n      return _objectSpread({}, state, {\n        description: action.description\n      });\n\n    case 'GET_PUBLIC_LOCATION':\n      return _objectSpread({}, state, {\n        location: action.location\n      });\n\n    case 'GET_PUBLIC_WEBSITE':\n      return _objectSpread({}, state, {\n        website: action.website\n      });\n\n    case 'GET_PUBLIC_EMPLOYER':\n      return _objectSpread({}, state, {\n        employer: action.employer\n      });\n\n    case 'GET_PUBLIC_JOB':\n      return _objectSpread({}, state, {\n        job: action.job\n      });\n\n    case 'GET_PUBLIC_SCHOOL':\n      return _objectSpread({}, state, {\n        school: action.school\n      });\n\n    case 'GET_PUBLIC_DEGREE':\n      return _objectSpread({}, state, {\n        degree: action.degree\n      });\n\n    case 'GET_PUBLIC_MAJOR':\n      return _objectSpread({}, state, {\n        major: action.major\n      });\n\n    case 'GET_PUBLIC_YEAR':\n      return _objectSpread({}, state, {\n        year: action.year\n      });\n\n    case 'GET_PUBLIC_IMAGE':\n      return _objectSpread({}, state, {\n        image: action.image\n      });\n\n    case 'GET_PUBLIC_COVERPHOTO':\n      return _objectSpread({}, state, {\n        coverPhoto: action.coverPhoto\n      });\n\n    case 'GET_PUBLIC_EMOJI':\n      return _objectSpread({}, state, {\n        emoji: action.emoji\n      });\n\n    case 'GET_PUBLIC_STATUS':\n      return _objectSpread({}, state, {\n        status: action.status\n      });\n\n    case 'GET_PRIVATE_EMAIL':\n      return _objectSpread({}, state, {\n        email: action.email\n      });\n\n    case 'GET_PRIVATE_BIRTHDAY':\n      return _objectSpread({}, state, {\n        birthday: action.birthday\n      });\n\n    case 'GET_PUBLIC_MEMBERSINCE':\n      return _objectSpread({}, state, {\n        memberSince: action.memberSince\n      });\n\n    case 'GET_PUBLIC_DID':\n      return _objectSpread({}, state, {\n        did: action.did\n      });\n\n    case 'HANDLE_SIGNOUT':\n      return _objectSpread({}, state, {\n        isLoggedIn: false,\n        onSyncFinished: false,\n        birthday: '',\n        name: '',\n        github: '',\n        image: [],\n        email: '',\n        feedByAddress: [],\n        box: {},\n        description: '',\n        location: '',\n        website: '',\n        employer: '',\n        job: '',\n        school: '',\n        degree: '',\n        major: '',\n        year: '',\n        coverPhoto: [],\n        emoji: '',\n        status: '',\n        hasSignedOut: action.hasSignedOut\n      });\n    // MODALS\n\n    case 'HANDLE_CONSENT_MODAL':\n      return _objectSpread({}, state, {\n        provideConsent: action.provideConsent,\n        showSignInBanner: action.showSignInBanner\n      });\n\n    case 'LOADING_3BOX':\n      return _objectSpread({}, state, {\n        provideConsent: false,\n        ifFetchingThreeBox: true\n      });\n\n    case 'LOADING_ACTIVITY':\n      return _objectSpread({}, state, {\n        ifFetchingActivity: true\n      });\n\n    case 'APP_SYNC':\n      return _objectSpread({}, state, {\n        isSyncing: action.isSyncing,\n        onSyncFinished: action.onSyncFinished\n      });\n\n    case 'FAILED_LOADING_3BOX':\n      return _objectSpread({}, state, {\n        ifFetchingThreeBox: false,\n        showErrorModal: true,\n        provideConsent: false,\n        errorMessage: action.errorMessage\n      });\n\n    case 'REQUIRE_METAMASK':\n      return _objectSpread({}, state, {\n        alertRequireMetaMask: action.alertRequireMetaMask\n      });\n\n    case 'CLOSE_ERROR_MODAL':\n      return _objectSpread({}, state, {\n        errorMessage: '',\n        showErrorModal: false\n      });\n\n    case 'OPEN_ERROR_MODAL':\n      return _objectSpread({}, state, {\n        errorMessage: '',\n        showErrorModal: true\n      });\n\n    case 'DIFFERENT_NETWORK':\n      return _objectSpread({}, state, {\n        currentNetwork: action.currentNetwork,\n        prevNetwork: action.prevNetwork,\n        prevPrevNetwork: action.prevPrevNetwork,\n        showDifferentNetworkModal: action.showDifferentNetworkModal,\n        onBoardingModal: false,\n        onBoardingModal2: false,\n        ifFetchingThreeBox: false\n      });\n\n    case 'HANDLE_LOGGEDOUT_MODAL':\n      return _objectSpread({}, state, {\n        loggedOutModal: action.loggedOutModal,\n        ifFetchingThreeBox: false,\n        onBoardingModal: false,\n        onBoardingModal2: false\n      });\n\n    case 'HANDLE_SWITCHED_ADDRESS_MODAL':\n      return _objectSpread({}, state, {\n        switchedAddressModal: action.switchedAddressModal,\n        ifFetchingThreeBox: false,\n        onBoardingModal: false,\n        onBoardingModal2: false,\n        prevAddress: action.prevAddress\n      });\n\n    case 'HANDLE_SIGNIN_MODAL':\n      return _objectSpread({}, state, {\n        signInModal: action.signInModal\n      });\n\n    case 'HANDLE_SWITCHED_NETWORK_MODAL':\n      return _objectSpread({}, state, {\n        showDifferentNetworkModal: action.showDifferentNetworkModal\n      });\n\n    case 'HANDLE_ONBOARDING_MODAL':\n      return _objectSpread({}, state, {\n        onBoardingModal: action.onBoardingModal\n      });\n\n    case 'HANDLE_ONBOARDING_MODAL2':\n      return _objectSpread({}, state, {\n        onBoardingModal: action.onBoardingModal,\n        onBoardingModalTwo: action.onBoardingModalTwo\n      });\n\n    case 'HANDLE_REQUIRE_LOGIN_MODAL':\n      return _objectSpread({}, state, {\n        signInToWalletModal: action.signInToWalletModal\n      });\n\n    case 'HANDLE_WALLET_LOGIN_DETECTED_MODAL':\n      return _objectSpread({}, state, {\n        isSignedIntoWallet: action.isSignedIntoWallet,\n        hasWallet: action.hasWallet\n      });\n\n    case 'HANDLE_MOBILE_WALLET_REQUIRED_MODAL':\n      return _objectSpread({}, state, {\n        mobileWalletRequiredModal: action.mobileWalletRequiredModal\n      });\n\n    case 'HANDLE_GITHUB_MODAL':\n      return _objectSpread({}, state, {\n        showGithubVerificationModal: action.showGithubVerificationModal\n      });\n\n    case 'HANDLE_TWITTER_MODAL':\n      return _objectSpread({}, state, {\n        showTwitterVerificationModal: action.showTwitterVerificationModal\n      });\n\n    case 'HANDLE_EMAIL_MODAL':\n      return _objectSpread({}, state, {\n        showEmailVerificationModal: action.showEmailVerificationModal\n      });\n\n    case 'HANDLE_ACCESS_MODAL':\n      return _objectSpread({}, state, {\n        allowAccessModal: action.allowAccessModal,\n        directLogin: action.directLogin\n      });\n\n    case 'HANDLE_DENIED_ACCESS_MODAL':\n      return _objectSpread({}, state, {\n        accessDeniedModal: action.accessDeniedModal,\n        allowAccessModal: action.allowAccessModal\n      });\n\n    case 'HANDLE_DOWNLOAD_BANNER':\n      return _objectSpread({}, state, {\n        showDownloadBanner: action.showDownloadBanner\n      });\n\n    case 'UPDATE_ROUTE':\n      return _objectSpread({}, state, {\n        currentRoute: action.currentRoute\n      });\n\n    case 'UPDATE_PUBLIC_PROFILE':\n      return _objectSpread({}, state, {\n        onPublicProfilePage: action.onPublicProfilePage,\n        publicProfileAddress: action.publicProfileAddress\n      });\n\n    case 'COPY_SUCCESSFUL':\n      return _objectSpread({}, state, {\n        copySuccessful: action.copySuccessful\n      });\n\n    case 'UPDATE_ADDRESS':\n      return _objectSpread({}, state, {\n        currentAddress: action.currentAddress\n      });\n\n    default:\n      return state;\n  }\n};\nexport default threeBoxReducer;","map":{"version":3,"sources":["/Users/kenzo/Desktop/app/src/state/reducer-threeBox.js"],"names":["threeBoxReducer","state","action","type","wememeContract","address","user","profile","hasWallet","showDownloadBanner","currentWallet","mobileWalletRequiredModal","isSignedIntoWallet","isLoggedIn","accountAddress","allowAccessModal","currentAddress","currentNetwork","prevNetwork","prevPrevNetwork","box","ifFetchingThreeBox","showErrorModal","errorMessage","name","github","image","email","feedByAddress","ifFetchingActivity","isLoadingPublicProfile","showSignInBanner","publicGithub","publicTwitter","publicDescription","publicLocation","publicWebsite","publicMemberSince","publicJob","publicSchool","publicDegree","publicMajor","publicYear","publicEmployer","publicCoverPhoto","publicImage","publicName","publicEmoji","publicStatus","publicProfileActivity","verifiedGithub","verifiedTwitter","verifiedEmail","description","location","website","employer","job","school","degree","major","year","coverPhoto","emoji","status","birthday","memberSince","did","onSyncFinished","hasSignedOut","provideConsent","isSyncing","alertRequireMetaMask","showDifferentNetworkModal","onBoardingModal","onBoardingModal2","loggedOutModal","switchedAddressModal","prevAddress","signInModal","onBoardingModalTwo","signInToWalletModal","showGithubVerificationModal","showTwitterVerificationModal","showEmailVerificationModal","directLogin","accessDeniedModal","currentRoute","onPublicProfilePage","publicProfileAddress","copySuccessful"],"mappings":"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","sourcesContent":["export const threeBoxReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'WEMEME_CONTRACT':\n      return {\n        ...state,\n        wememeContract: action.wememeContract,\n        address: action.address,\n        user: action.wememeContract,\n        profile: action.profile,\n      };\n\n    case 'CHECK_WALLET':\n      return {\n        ...state,\n        hasWallet: action.hasWallet,\n        showDownloadBanner: action.showDownloadBanner,\n        currentWallet: action.currentWallet,\n        mobileWalletRequiredModal: action.mobileWalletRequiredModal,\n      };\n\n    case 'UPDATE_ADDRESSES':\n      return {\n        ...state,\n        isSignedIntoWallet: action.isSignedIntoWallet,\n        isLoggedIn: action.isLoggedIn,\n        accountAddress: action.accountAddress,\n        allowAccessModal: action.allowAccessModal,\n        currentAddress: action.currentAddress,\n      };\n\n    case 'UPDATE_NETWORK':\n      return {\n        ...state,\n        currentNetwork: action.currentNetwork,\n        prevNetwork: action.prevNetwork,\n        prevPrevNetwork: action.prevPrevNetwork,\n      };\n\n    case 'SIGN_IN_UP':\n      return {\n        ...state,\n        box: action.box,\n        ifFetchingThreeBox: false,\n        showErrorModal: false,\n        errorMessage: '',\n        name: action.name,\n        github: action.github,\n        image: action.image,\n        email: action.email,\n        feedByAddress: action.feedByAddress,\n        isLoggedIn: action.isLoggedIn,\n      };\n\n    case 'UPDATE_ACTIVITY':\n      return {\n        ...state,\n        feedByAddress: action.feedByAddress,\n        ifFetchingActivity: false,\n        isLoggedIn: action.isLoggedIn,\n      };\n\n    case 'FAILED_LOADING_ACTIVITY':\n      return {\n        ...state,\n        feedByAddress: [],\n        ifFetchingActivity: false,\n      };\n\n    case 'UPDATE_THREEBOX':\n      return {\n        ...state,\n        box: action.box,\n        ifFetchingThreeBox: false,\n        isLoggedIn: action.isLoggedIn,\n      };\n\n    case 'LOADING_PUBLIC_PROFILE':\n      return {\n        ...state,\n        isLoadingPublicProfile: action.isLoadingPublicProfile,\n      };\n\n    case 'HANDLE_SIGNIN_BANNER':\n      return {\n        ...state,\n        showSignInBanner: action.showSignInBanner,\n      };\n\n    case 'GET_PUBLIC_PROFILE':\n      return {\n        ...state,\n        publicGithub: action.publicGithub,\n        publicTwitter: action.publicTwitter,\n        publicDescription: action.publicDescription,\n        publicLocation: action.publicLocation,\n        publicWebsite: action.publicWebsite,\n        publicMemberSince: action.publicMemberSince,\n        publicJob: action.publicJob,\n        publicSchool: action.publicSchool,\n        publicDegree: action.publicDegree,\n        publicMajor: action.publicMajor,\n        publicYear: action.publicYear,\n        publicEmployer: action.publicEmployer,\n        publicCoverPhoto: action.publicCoverPhoto,\n        publicImage: action.publicImage,\n        publicName: action.publicName,\n        publicEmoji: action.publicEmoji,\n        publicStatus: action.publicStatus,\n      };\n\n    case 'GET_PUBLIC_PROFILE_ACTIVITY':\n      return {\n        ...state,\n        publicProfileActivity: action.publicProfileActivity,\n        ifFetchingActivity: action.ifFetchingActivity,\n      };\n\n    case 'GET_PUBLIC_NAME':\n      return {\n        ...state,\n        name: action.name,\n      };\n\n    case 'GET_PUBLIC_GITHUB':\n      return {\n        ...state,\n        github: action.github,\n      };\n\n    case 'GET_VERIFIED_PUBLIC_GITHUB':\n      return {\n        ...state,\n        verifiedGithub: action.verifiedGithub,\n      };\n\n    case 'GET_VERIFIED_PUBLIC_TWITTER':\n      return {\n        ...state,\n        verifiedTwitter: action.verifiedTwitter,\n      };\n\n    case 'GET_VERIFIED_PRIVATE_EMAIL':\n      return {\n        ...state,\n        verifiedEmail: action.verifiedEmail,\n      };\n\n    case 'GET_PUBLIC_DESCRIPTION':\n      return {\n        ...state,\n        description: action.description,\n      };\n\n    case 'GET_PUBLIC_LOCATION':\n      return {\n        ...state,\n        location: action.location,\n      };\n\n    case 'GET_PUBLIC_WEBSITE':\n      return {\n        ...state,\n        website: action.website,\n      };\n\n    case 'GET_PUBLIC_EMPLOYER':\n      return {\n        ...state,\n        employer: action.employer,\n      };\n\n    case 'GET_PUBLIC_JOB':\n      return {\n        ...state,\n        job: action.job,\n      };\n\n    case 'GET_PUBLIC_SCHOOL':\n      return {\n        ...state,\n        school: action.school,\n      };\n\n    case 'GET_PUBLIC_DEGREE':\n      return {\n        ...state,\n        degree: action.degree,\n      };\n\n    case 'GET_PUBLIC_MAJOR':\n      return {\n        ...state,\n        major: action.major,\n      };\n\n    case 'GET_PUBLIC_YEAR':\n      return {\n        ...state,\n        year: action.year,\n      };\n\n    case 'GET_PUBLIC_IMAGE':\n      return {\n        ...state,\n        image: action.image,\n      };\n\n    case 'GET_PUBLIC_COVERPHOTO':\n      return {\n        ...state,\n        coverPhoto: action.coverPhoto,\n      };\n\n    case 'GET_PUBLIC_EMOJI':\n      return {\n        ...state,\n        emoji: action.emoji,\n      };\n\n    case 'GET_PUBLIC_STATUS':\n      return {\n        ...state,\n        status: action.status,\n      };\n\n    case 'GET_PRIVATE_EMAIL':\n      return {\n        ...state,\n        email: action.email,\n      };\n\n    case 'GET_PRIVATE_BIRTHDAY':\n      return {\n        ...state,\n        birthday: action.birthday,\n      };\n\n    case 'GET_PUBLIC_MEMBERSINCE':\n      return {\n        ...state,\n        memberSince: action.memberSince,\n      };\n\n    case 'GET_PUBLIC_DID':\n      return {\n        ...state,\n        did: action.did,\n      };\n\n    case 'HANDLE_SIGNOUT':\n      return {\n        ...state,\n        isLoggedIn: false,\n        onSyncFinished: false,\n        birthday: '',\n        name: '',\n        github: '',\n        image: [],\n        email: '',\n        feedByAddress: [],\n        box: {},\n        description: '',\n        location: '',\n        website: '',\n        employer: '',\n        job: '',\n        school: '',\n        degree: '',\n        major: '',\n        year: '',\n        coverPhoto: [],\n        emoji: '',\n        status: '',\n        hasSignedOut: action.hasSignedOut,\n      };\n\n      // MODALS\n    case 'HANDLE_CONSENT_MODAL':\n      return {\n        ...state,\n        provideConsent: action.provideConsent,\n        showSignInBanner: action.showSignInBanner,\n      };\n\n    case 'LOADING_3BOX':\n      return {\n        ...state,\n        provideConsent: false,\n        ifFetchingThreeBox: true,\n      };\n\n    case 'LOADING_ACTIVITY':\n      return {\n        ...state,\n        ifFetchingActivity: true,\n      };\n\n    case 'APP_SYNC':\n      return {\n        ...state,\n        isSyncing: action.isSyncing,\n        onSyncFinished: action.onSyncFinished,\n      };\n\n    case 'FAILED_LOADING_3BOX':\n      return {\n        ...state,\n        ifFetchingThreeBox: false,\n        showErrorModal: true,\n        provideConsent: false,\n        errorMessage: action.errorMessage,\n      };\n\n    case 'REQUIRE_METAMASK':\n      return {\n        ...state,\n        alertRequireMetaMask: action.alertRequireMetaMask,\n      };\n\n    case 'CLOSE_ERROR_MODAL':\n      return {\n        ...state,\n        errorMessage: '',\n        showErrorModal: false,\n      };\n\n    case 'OPEN_ERROR_MODAL':\n      return {\n        ...state,\n        errorMessage: '',\n        showErrorModal: true,\n      };\n\n    case 'DIFFERENT_NETWORK':\n      return {\n        ...state,\n        currentNetwork: action.currentNetwork,\n        prevNetwork: action.prevNetwork,\n        prevPrevNetwork: action.prevPrevNetwork,\n        showDifferentNetworkModal: action.showDifferentNetworkModal,\n        onBoardingModal: false,\n        onBoardingModal2: false,\n        ifFetchingThreeBox: false,\n      };\n\n    case 'HANDLE_LOGGEDOUT_MODAL':\n      return {\n        ...state,\n        loggedOutModal: action.loggedOutModal,\n        ifFetchingThreeBox: false,\n        onBoardingModal: false,\n        onBoardingModal2: false,\n      };\n\n    case 'HANDLE_SWITCHED_ADDRESS_MODAL':\n      return {\n        ...state,\n        switchedAddressModal: action.switchedAddressModal,\n        ifFetchingThreeBox: false,\n        onBoardingModal: false,\n        onBoardingModal2: false,\n        prevAddress: action.prevAddress,\n      };\n\n    case 'HANDLE_SIGNIN_MODAL':\n      return {\n        ...state,\n        signInModal: action.signInModal,\n      };\n\n    case 'HANDLE_SWITCHED_NETWORK_MODAL':\n      return {\n        ...state,\n        showDifferentNetworkModal: action.showDifferentNetworkModal,\n      };\n\n    case 'HANDLE_ONBOARDING_MODAL':\n      return {\n        ...state,\n        onBoardingModal: action.onBoardingModal,\n      };\n\n    case 'HANDLE_ONBOARDING_MODAL2':\n      return {\n        ...state,\n        onBoardingModal: action.onBoardingModal,\n        onBoardingModalTwo: action.onBoardingModalTwo,\n      };\n\n    case 'HANDLE_REQUIRE_LOGIN_MODAL':\n      return {\n        ...state,\n        signInToWalletModal: action.signInToWalletModal,\n      };\n\n    case 'HANDLE_WALLET_LOGIN_DETECTED_MODAL':\n      return {\n        ...state,\n        isSignedIntoWallet: action.isSignedIntoWallet,\n        hasWallet: action.hasWallet,\n      };\n\n    case 'HANDLE_MOBILE_WALLET_REQUIRED_MODAL':\n      return {\n        ...state,\n        mobileWalletRequiredModal: action.mobileWalletRequiredModal,\n      };\n\n    case 'HANDLE_GITHUB_MODAL':\n      return {\n        ...state,\n        showGithubVerificationModal: action.showGithubVerificationModal,\n      };\n\n    case 'HANDLE_TWITTER_MODAL':\n      return {\n        ...state,\n        showTwitterVerificationModal: action.showTwitterVerificationModal,\n      };\n\n    case 'HANDLE_EMAIL_MODAL':\n      return {\n        ...state,\n        showEmailVerificationModal: action.showEmailVerificationModal,\n      };\n\n    case 'HANDLE_ACCESS_MODAL':\n      return {\n        ...state,\n        allowAccessModal: action.allowAccessModal,\n        directLogin: action.directLogin,\n      };\n\n    case 'HANDLE_DENIED_ACCESS_MODAL':\n      return {\n        ...state,\n        accessDeniedModal: action.accessDeniedModal,\n        allowAccessModal: action.allowAccessModal,\n      };\n\n    case 'HANDLE_DOWNLOAD_BANNER':\n      return {\n        ...state,\n        showDownloadBanner: action.showDownloadBanner,\n      };\n\n    case 'UPDATE_ROUTE':\n      return {\n        ...state,\n        currentRoute: action.currentRoute,\n      };\n\n    case 'UPDATE_PUBLIC_PROFILE':\n      return {\n        ...state,\n        onPublicProfilePage: action.onPublicProfilePage,\n        publicProfileAddress: action.publicProfileAddress,\n      };\n\n    case 'COPY_SUCCESSFUL':\n      return {\n        ...state,\n        copySuccessful: action.copySuccessful,\n      };\n\n    case 'UPDATE_ADDRESS':\n      return {\n        ...state,\n        currentAddress: action.currentAddress,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default threeBoxReducer;"]},"metadata":{},"sourceType":"module"}