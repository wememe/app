{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar path = require('path'); // Creates a DB manifest file and saves it in IPFS\n\n\nvar createDBManifest =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ipfs, name, type, accessControllerAddress) {\n    var manifest, dag;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            manifest = {\n              name: name,\n              type: type,\n              accessController: path.join('/ipfs', accessControllerAddress)\n            };\n            _context.next = 3;\n            return ipfs.object.put(Buffer.from(JSON.stringify(manifest)));\n\n          case 3:\n            dag = _context.sent;\n            return _context.abrupt(\"return\", dag.toJSON().multihash.toString());\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function createDBManifest(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = createDBManifest;","map":null,"metadata":{},"sourceType":"script"}