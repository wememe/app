{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/ProfileCategories.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, NavLink } from 'react-router-dom';\nimport { address } from '../utils/address';\nimport * as routes from '../utils/routes';\nimport EthereumLogo from \"../assets/EthereumIcon.svg\";\nimport '../views/styles/Profile.css';\n\nvar ProfileCategories = function ProfileCategories(_ref) {\n  var name = _ref.name,\n      image = _ref.image,\n      coverPhoto = _ref.coverPhoto,\n      description = _ref.description,\n      emoji = _ref.emoji;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, coverPhoto.length > 0 && coverPhoto[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(coverPhoto[0].contentUrl['/']),\n    className: \"profile__coverPhoto clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"profile__coverPhoto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__user__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, image.length > 0 && image[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(image[0].contentUrl['/']),\n    className: \"profile__user__picture clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"profile__user__picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"profile__basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile__basic__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, name ? React.createElement(\"h2\", {\n    id: \"profile__user__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, name) : React.createElement(Link, {\n    to: routes.EDITPROFILE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"profile__user__name__add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Add name\")), React.createElement(\"span\", {\n    className: \"profile__basic__emoji\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, emoji.code ? emoji.code : emoji)), React.createElement(\"div\", {\n    id: \"profile__network\",\n    title: \"Network\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    id: \"profile__network__networkLogo\",\n    src: EthereumLogo,\n    alt: \"Ethereum Logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"profile__details__address\",\n    title: address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, address && address.substring(0, 8), \"...\")), React.createElement(\"p\", {\n    className: \"profile__basic__description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, description)), React.createElement(\"div\", {\n    className: \"profile__category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile__category__sectionWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    exact: true,\n    to: \"/profile/activity\",\n    className: \"profile__category__section\",\n    activeClassName: \"selected\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Activity\"), React.createElement(NavLink, {\n    exact: true,\n    to: \"/profile/about\",\n    className: \"profile__category__section\",\n    activeClassName: \"selected\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"About\"), React.createElement(NavLink, {\n    exact: true,\n    to: \"/profile/collectibles\",\n    className: \"profile__category__section\",\n    activeClassName: \"selectedCategory\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Collectibles\")))), React.createElement(\"div\", {\n    id: \"profile__footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__footer__contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"3Box 2018\"), React.createElement(Link, {\n    to: routes.TERMS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Terms\"), React.createElement(Link, {\n    to: routes.PRIVACY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Privacy\"))))));\n};\n\nProfileCategories.propTypes = {\n  name: PropTypes.string,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n  email: PropTypes.string,\n  location: PropTypes.string,\n  website: PropTypes.string,\n  job: PropTypes.string,\n  school: PropTypes.string,\n  degree: PropTypes.string,\n  memberSince: PropTypes.string,\n  major: PropTypes.string,\n  year: PropTypes.string,\n  employer: PropTypes.string,\n  birthday: PropTypes.string,\n  emoji: PropTypes.string,\n  image: PropTypes.array,\n  coverPhoto: PropTypes.array,\n  description: PropTypes.string\n};\nProfileCategories.defaultProps = {\n  name: '',\n  verifiedGithub: '',\n  verifiedTwitter: '',\n  email: '',\n  description: '',\n  image: [],\n  coverPhoto: [],\n  emoji: '',\n  location: '',\n  memberSince: '',\n  website: '',\n  birthday: '',\n  job: '',\n  school: '',\n  degree: '',\n  major: '',\n  year: '',\n  employer: ''\n};\n\nfunction mapState(state) {\n  return {\n    name: state.threeBox.name,\n    verifiedGithub: state.threeBox.verifiedGithub,\n    verifiedTwitter: state.threeBox.verifiedTwitter,\n    image: state.threeBox.image,\n    coverPhoto: state.threeBox.coverPhoto,\n    emoji: state.threeBox.emoji,\n    email: state.threeBox.email,\n    description: state.threeBox.description,\n    location: state.threeBox.location,\n    website: state.threeBox.website,\n    birthday: state.threeBox.birthday,\n    memberSince: state.threeBox.memberSince,\n    job: state.threeBox.job,\n    school: state.threeBox.school,\n    degree: state.threeBox.degree,\n    major: state.threeBox.major,\n    year: state.threeBox.year,\n    employer: state.threeBox.employer\n  };\n}\n\nexport default connect(mapState)(ProfileCategories);","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/ProfileCategories.jsx"],"names":["React","PropTypes","connect","Link","NavLink","address","routes","ProfileCategories","name","image","coverPhoto","description","emoji","length","contentUrl","EDITPROFILE","code","EthereumLogo","substring","TERMS","PRIVACY","propTypes","string","verifiedGithub","verifiedTwitter","email","location","website","job","school","degree","memberSince","major","year","employer","birthday","array","defaultProps","mapState","state","threeBox"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, NavLink } from 'react-router-dom';\nimport { address } from '../utils/address';\nimport * as routes from '../utils/routes';\nimport EthereumLogo from '../assets/EthereumIcon.svg';\n\nimport '../views/styles/Profile.css';\n\nconst ProfileCategories = ({\n  name,\n  image,\n  coverPhoto,\n  description,\n  emoji,\n}) => (\n    <div>\n      {coverPhoto.length > 0 && coverPhoto[0].contentUrl\n        ? <img src={`https://ipfs.infura.io/ipfs/${coverPhoto[0].contentUrl['/']}`} className=\"profile__coverPhoto clearProfPic\" alt=\"profile\" />\n        : <div className=\"profile__coverPhoto\" />\n      }\n      <div id=\"profile\">\n        <div id=\"profile__fixed\">\n\n          <div id=\"profile__user__info\">\n\n            {image.length > 0 && image[0].contentUrl\n              ? <img src={`https://ipfs.infura.io/ipfs/${image[0].contentUrl['/']}`} className=\"profile__user__picture clearProfPic\" alt=\"profile\" />\n              : <div className=\"profile__user__picture\" />\n            }\n\n            <div className=\"profile__basic\">\n              <div className=\"profile__basic__wrapper\">\n                {name\n                  ? <h2 id=\"profile__user__name\">{name}</h2>\n                  : <Link to={routes.EDITPROFILE}><h2 id=\"profile__user__name__add\">Add name</h2></Link>\n                }\n                <span className=\"profile__basic__emoji\">\n                  {emoji.code ? emoji.code : emoji}\n                </span>\n              </div>\n\n              <div id=\"profile__network\" title=\"Network\">\n                <img id=\"profile__network__networkLogo\" src={EthereumLogo} alt=\"Ethereum Logo\" />\n                <p id=\"profile__details__address\" title={address}>\n                  {address && address.substring(0, 8)}\n                  ...\n            </p>\n              </div>\n\n              <p className=\"profile__basic__description\">\n                {description}\n              </p>\n\n            </div>\n\n            <div className=\"profile__category\">\n              <div className=\"profile__category__sectionWrapper\">\n                <NavLink exact to=\"/profile/activity\" className=\"profile__category__section\" activeClassName=\"selected\">Activity</NavLink>\n                <NavLink exact to=\"/profile/about\" className=\"profile__category__section\" activeClassName=\"selected\">About</NavLink>\n                <NavLink exact to=\"/profile/collectibles\" className=\"profile__category__section\" activeClassName=\"selectedCategory\">Collectibles</NavLink>\n                {/* <h3 className=\"profile__category__section\">Activity</h3>\n                <h3 className=\"profile__category__section\">About</h3>\n                <h3 className=\"profile__category__section\">Collectibles</h3> */}\n              </div>\n            </div>\n\n          </div>\n\n          <div id=\"profile__footer\">\n            <div id=\"profile__footer__contents\">\n              <p>3Box 2018</p>\n              <Link to={routes.TERMS}>Terms</Link>\n              <Link to={routes.PRIVACY}>Privacy</Link>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n\nProfileCategories.propTypes = {\n  name: PropTypes.string,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n  email: PropTypes.string,\n  location: PropTypes.string,\n  website: PropTypes.string,\n  job: PropTypes.string,\n  school: PropTypes.string,\n  degree: PropTypes.string,\n  memberSince: PropTypes.string,\n  major: PropTypes.string,\n  year: PropTypes.string,\n  employer: PropTypes.string,\n  birthday: PropTypes.string,\n  emoji: PropTypes.string,\n  image: PropTypes.array,\n  coverPhoto: PropTypes.array,\n  description: PropTypes.string,\n};\n\nProfileCategories.defaultProps = {\n  name: '',\n  verifiedGithub: '',\n  verifiedTwitter: '',\n  email: '',\n  description: '',\n  image: [],\n  coverPhoto: [],\n  emoji: '',\n  location: '',\n  memberSince: '',\n  website: '',\n  birthday: '',\n  job: '',\n  school: '',\n  degree: '',\n  major: '',\n  year: '',\n  employer: '',\n};\n\nfunction mapState(state) {\n  return {\n    name: state.threeBox.name,\n    verifiedGithub: state.threeBox.verifiedGithub,\n    verifiedTwitter: state.threeBox.verifiedTwitter,\n    image: state.threeBox.image,\n    coverPhoto: state.threeBox.coverPhoto,\n    emoji: state.threeBox.emoji,\n    email: state.threeBox.email,\n    description: state.threeBox.description,\n    location: state.threeBox.location,\n    website: state.threeBox.website,\n    birthday: state.threeBox.birthday,\n    memberSince: state.threeBox.memberSince,\n    job: state.threeBox.job,\n    school: state.threeBox.school,\n    degree: state.threeBox.degree,\n    major: state.threeBox.major,\n    year: state.threeBox.year,\n    employer: state.threeBox.employer,\n  };\n}\n\nexport default connect(mapState)(ProfileCategories);\n"]},"metadata":{},"sourceType":"module"}