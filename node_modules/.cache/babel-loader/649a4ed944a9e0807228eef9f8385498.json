{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/views/ProfilePublic.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getProfiles, getActivity, getProfilesVerifiedAccounts } from '../state/actions';\nimport Content from '../components/Profile/Content';\nimport Categories from '../components/Profile/Categories';\nimport Nav from '../components/Nav';\nimport './styles/Profile.css';\n\nvar ProfilePublic =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfilePublic, _Component);\n\n  function ProfilePublic() {\n    _classCallCheck(this, ProfilePublic);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProfilePublic).apply(this, arguments));\n  }\n\n  _createClass(ProfilePublic, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var pathname, profileAddress, profileAddressArray;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                pathname = this.props.location.pathname;\n                profileAddress = pathname.split('/')[2];\n                profileAddressArray = new Array(profileAddress);\n                this.props.getActivity(profileAddress);\n                _context.next = 6;\n                return this.props.getProfiles(profileAddressArray);\n\n              case 6:\n                this.props.publicProfile.proof_twitter && this.props.getProfilesVerifiedAccounts(this.props.publicProfile.proof_twitter);\n                this.props.publicProfile.proof_github && this.props.getProfilesVerifiedAccounts(this.props.publicProfile.proof_github);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"profile__page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"profile__contents\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Categories, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Content, {\n        publicProfile: this.props.publicProfile,\n        publicProfileActivity: this.props.publicProfileActivity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ProfilePublic;\n}(Component);\n\nProfilePublic.propTypes = {\n  box: PropTypes.object,\n  pathname: PropTypes.object,\n  location: PropTypes.object,\n  publicProfile: PropTypes.object,\n  publicProfileActivity: PropTypes.array,\n  getProfiles: PropTypes.func,\n  getActivity: PropTypes.func\n};\nProfilePublic.defaultProps = {\n  box: {},\n  pathname: {},\n  publicProfile: {},\n  publicProfileActivity: [],\n  location: {},\n  getProfiles: getProfiles(),\n  getProfilesVerifiedAccounts: getProfilesVerifiedAccounts(),\n  getActivity: getActivity()\n};\n\nvar mapState = function mapState(state) {\n  return {\n    box: state.threeBox.box,\n    publicProfile: state.threeBox.publicProfile,\n    publicProfileActivity: state.threeBox.publicProfileActivity\n  };\n};\n\nexport default withRouter(connect(mapState, {\n  getProfiles: getProfiles,\n  getProfilesVerifiedAccounts: getProfilesVerifiedAccounts,\n  getActivity: getActivity\n})(ProfilePublic));","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/views/ProfilePublic.jsx"],"names":["React","Component","withRouter","connect","PropTypes","getProfiles","getActivity","getProfilesVerifiedAccounts","Content","Categories","Nav","ProfilePublic","pathname","props","location","profileAddress","split","profileAddressArray","Array","publicProfile","proof_twitter","proof_github","publicProfileActivity","propTypes","box","object","array","func","defaultProps","mapState","state","threeBox"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n  getProfiles,\n  getActivity,\n  getProfilesVerifiedAccounts,\n} from '../state/actions';\nimport Content from '../components/Profile/Content';\nimport Categories from '../components/Profile/Categories';\nimport Nav from '../components/Nav';\nimport './styles/Profile.css';\n\n\nclass ProfilePublic extends Component {\n  async componentDidMount() {\n    const { location: { pathname } } = this.props;\n    const profileAddress = pathname.split('/')[2];\n    const profileAddressArray = new Array(profileAddress);\n    this.props.getActivity(profileAddress);\n    await this.props.getProfiles(profileAddressArray);\n\n    this.props.publicProfile.proof_twitter\n      && this.props.getProfilesVerifiedAccounts(this.props.publicProfile.proof_twitter);\n\n    this.props.publicProfile.proof_github\n      && this.props.getProfilesVerifiedAccounts(this.props.publicProfile.proof_github);\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <div id=\"profile__page\">\n          <div id=\"profile__contents\">\n            <Categories />\n            <Content\n              publicProfile={this.props.publicProfile}\n              publicProfileActivity={this.props.publicProfileActivity}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProfilePublic.propTypes = {\n  box: PropTypes.object,\n  pathname: PropTypes.object,\n  location: PropTypes.object,\n  publicProfile: PropTypes.object,\n  publicProfileActivity: PropTypes.array,\n  getProfiles: PropTypes.func,\n  getActivity: PropTypes.func,\n};\n\nProfilePublic.defaultProps = {\n  box: {},\n  pathname: {},\n  publicProfile: {},\n  publicProfileActivity: [],\n  location: {},\n  getProfiles: getProfiles(),\n  getProfilesVerifiedAccounts: getProfilesVerifiedAccounts(),\n  getActivity: getActivity(),\n};\n\nconst mapState = state => ({\n  box: state.threeBox.box,\n  publicProfile: state.threeBox.publicProfile,\n  publicProfileActivity: state.threeBox.publicProfileActivity,\n});\n\nexport default withRouter(connect(mapState,\n  {\n    getProfiles,\n    getProfilesVerifiedAccounts,\n    getActivity,\n  })(ProfilePublic));\n"]},"metadata":{},"sourceType":"module"}