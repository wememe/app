{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/PublicProfile/PublicActivityHeader.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport networkArray from '../../../utils/networkArray';\nimport '../../styles/Feed.css';\nimport '../../../views/styles/Profile.css';\nimport '../../styles/NetworkArray.css';\n\nvar PublicActivityContext = function PublicActivityContext(_ref) {\n  var feedAddress = _ref.feedAddress;\n  return React.createElement(\"div\", {\n    className: \"feed__activity__context\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, console.log(feedAddress.metaData), feedAddress.metaData && feedAddress.metaData.image && React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(feedAddress.metaData.image),\n    className: \"feed__activity__user clear\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), feedAddress.metaData && feedAddress.metaData.contractImg && React.createElement(\"img\", {\n    src: feedAddress.metaData.contractImg.src,\n    className: \"feed__activity__user clear\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), (!feedAddress.metaData || !feedAddress.metaData.image && !feedAddress.metaData.contractImg && !feedAddress.metaData.contractData && !feedAddress.metaData.name && !feedAddress.metaData.contractDetails) && React.createElement(\"div\", {\n    className: \"feed__activity__context__network \".concat(networkArray[Math.floor(Math.random() * networkArray.length)]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"0x\"), React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, feedAddress.metaData && feedAddress.metaData.name && React.createElement(\"div\", {\n    className: \"feed__activity__address__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://3box.io/\".concat(Object.keys(feedAddress)[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, feedAddress.metaData.name)), React.createElement(\"p\", {\n    className: \"feed__activity__address__type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Address\", \" \".concat(Object.keys(feedAddress)[0].substring(0, 12), \"...\"))), feedAddress.metaData && feedAddress.metaData.contractDetails && feedAddress.metaData.contractDetails.name && React.createElement(\"div\", {\n    className: \"feed__activity__address__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://etherscan.io/address/\".concat(Object.keys(feedAddress)[0]),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, (feedAddress.metaData.contractDetails.name.charAt(0).toUpperCase() + feedAddress.metaData.contractDetails.name.slice(1)).replace(/([A-Z])/g, ' $1').trim())), React.createElement(\"p\", {\n    className: \"feed__activity__address__type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Contract\", \" \".concat(Object.keys(feedAddress)[0].substring(0, 12), \"...\"))), (!feedAddress.metaData || !feedAddress.metaData.contractDetails && !feedAddress.metaData.name) && React.createElement(\"div\", {\n    className: \"feed__activity__address__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://ethstats.io/account/\".concat(Object.keys(feedAddress)[0]),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, Object.keys(feedAddress)[0])), React.createElement(\"p\", {\n    className: \"feed__activity__address__type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Address\"))));\n};\n\nPublicActivityContext.propTypes = {\n  feedAddress: PropTypes.object\n};\nPublicActivityContext.defaultProps = {\n  feedAddress: {}\n};\nexport default PublicActivityContext;\n{\n  /* {(feedAddress.metaData && feedAddress.metaData.image)\n         ? <img src={`https://ipfs.infura.io/ipfs/${feedAddress.metaData.image}`} className=\"feed__activity__user clear\" alt=\"profile\" />\n         : (feedAddress.metaData && feedAddress.metaData.contractImg)\n           ? <img src={feedAddress.metaData.contractImg.src} className=\"feed__activity__user clear\" alt=\"profile\" />\n           : (\n             <div className={`feed__activity__context__network ${networkArray[Math.floor(Math.random() * networkArray.length)]}`}>\n               0x\n             </div>)} */\n}","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/PublicProfile/PublicActivityHeader.jsx"],"names":["React","PropTypes","networkArray","PublicActivityContext","feedAddress","console","log","metaData","image","contractImg","src","contractData","name","contractDetails","Math","floor","random","length","Object","keys","substring","charAt","toUpperCase","slice","replace","trim","propTypes","object","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport networkArray from '../../../utils/networkArray';\nimport '../../styles/Feed.css';\nimport '../../../views/styles/Profile.css';\nimport '../../styles/NetworkArray.css';\n\nconst PublicActivityContext = ({ feedAddress }) => (\n  <div className=\"feed__activity__context\">\n    {console.log(feedAddress.metaData)}\n    {(feedAddress.metaData && feedAddress.metaData.image)\n      && <img src={`https://ipfs.infura.io/ipfs/${feedAddress.metaData.image}`} className=\"feed__activity__user clear\" alt=\"profile\" />}\n\n    {(feedAddress.metaData && feedAddress.metaData.contractImg)\n      && <img src={feedAddress.metaData.contractImg.src} className=\"feed__activity__user clear\" alt=\"profile\" />}\n\n    {(!feedAddress.metaData\n      || (!feedAddress.metaData.image\n        && !feedAddress.metaData.contractImg\n        && !feedAddress.metaData.contractData\n        && !feedAddress.metaData.name\n        && !feedAddress.metaData.contractDetails))\n      && (\n        <div className={`feed__activity__context__network ${networkArray[Math.floor(Math.random() * networkArray.length)]}`}>\n          0x\n        </div>)}\n\n    <React.Fragment>\n      {(feedAddress.metaData && feedAddress.metaData.name)\n        && (\n          <div className=\"feed__activity__address__wrapper\">\n            <a href={`https://3box.io/${Object.keys(feedAddress)[0]}`}>\n              <h4>\n                {feedAddress.metaData.name}\n              </h4>\n            </a>\n            <p className=\"feed__activity__address__type\">\n              Address\n              {` ${Object.keys(feedAddress)[0].substring(0, 12)}...`}\n            </p>\n          </div>\n        )}\n      {(feedAddress.metaData && feedAddress.metaData.contractDetails && feedAddress.metaData.contractDetails.name)\n        && (\n          <div className=\"feed__activity__address__wrapper\">\n            <a href={`https://etherscan.io/address/${Object.keys(feedAddress)[0]}`} target=\"_blank\" rel=\"noopener noreferrer\">\n              <h4>\n                {(feedAddress.metaData.contractDetails.name.charAt(0).toUpperCase() + feedAddress.metaData.contractDetails.name.slice(1)).replace(/([A-Z])/g, ' $1').trim()}\n              </h4>\n            </a>\n            <p className=\"feed__activity__address__type\">\n              Contract\n              {` ${Object.keys(feedAddress)[0].substring(0, 12)}...`}\n            </p>\n          </div>\n        )}\n      {(!feedAddress.metaData || (!feedAddress.metaData.contractDetails && !feedAddress.metaData.name))\n        && (\n          <div className=\"feed__activity__address__wrapper\">\n            <a href={`https://ethstats.io/account/${Object.keys(feedAddress)[0]}`} target=\"_blank\" rel=\"noopener noreferrer\">\n              <h4>\n                {Object.keys(feedAddress)[0]}\n              </h4>\n            </a>\n            <p className=\"feed__activity__address__type\">\n              Address\n            </p>\n          </div>\n        )}\n    </React.Fragment>\n  </div>\n);\n\nPublicActivityContext.propTypes = {\n  feedAddress: PropTypes.object,\n};\n\nPublicActivityContext.defaultProps = {\n  feedAddress: {},\n};\n\nexport default PublicActivityContext;\n\n\n{/* {(feedAddress.metaData && feedAddress.metaData.image)\n        ? <img src={`https://ipfs.infura.io/ipfs/${feedAddress.metaData.image}`} className=\"feed__activity__user clear\" alt=\"profile\" />\n        : (feedAddress.metaData && feedAddress.metaData.contractImg)\n          ? <img src={feedAddress.metaData.contractImg.src} className=\"feed__activity__user clear\" alt=\"profile\" />\n          : (\n            <div className={`feed__activity__context__network ${networkArray[Math.floor(Math.random() * networkArray.length)]}`}>\n              0x\n            </div>)} */}"]},"metadata":{},"sourceType":"module"}