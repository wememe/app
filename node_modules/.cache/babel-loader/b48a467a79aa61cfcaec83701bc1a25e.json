{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/WeMeme/src/components/Profile/MyProfile/Activity.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ActivityHeader from './ActivityHeader';\nimport ActivityTiles from './ActivityTiles';\nimport Loading from \"../../../assets/Loading.svg\";\nimport '../../styles/Feed.css';\nimport '../../../views/styles/Profile.css';\nimport '../../styles/NetworkArray.css';\n\nvar Activity = function Activity(_ref) {\n  var ifFetchingActivity = _ref.ifFetchingActivity,\n      feedByAddress = _ref.feedByAddress,\n      publicProfileActivity = _ref.publicProfileActivity;\n  return React.createElement(\"div\", {\n    id: \"feed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"header publicHeader\",\n    id: \"feed__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Activity\"), React.createElement(\"div\", {\n    className: \"feed__activity__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, ifFetchingActivity && React.createElement(\"div\", {\n    className: \"feed__activity__load\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Loading,\n    alt: \"loading\",\n    id: \"activityLoad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), feedByAddress.length > 0 ? feedByAddress.map(function (feedAddress, i) {\n    return React.createElement(\"div\", {\n      key: i,\n      className: \"feed__activity__tile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(ActivityHeader, {\n      feedAddress: feedAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(ActivityTiles, {\n      feedAddress: feedAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }) : !ifFetchingActivity && !publicProfileActivity.length && React.createElement(\"div\", {\n    className: \"feed__activity__load\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"No activity at this address yet\")))), React.createElement(\"div\", {\n    className: \"feed__footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"logo__icon--footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"3\"))));\n};\n\nActivity.propTypes = {\n  feedByAddress: PropTypes.array,\n  ifFetchingActivity: PropTypes.bool,\n  currentAddress: PropTypes.string,\n  name: PropTypes.string,\n  publicProfileAddress: PropTypes.string,\n  publicProfileActivity: PropTypes.array,\n  location: PropTypes.object,\n  publicName: PropTypes.string\n};\nActivity.defaultProps = {\n  feedByAddress: [],\n  name: '',\n  ifFetchingActivity: false,\n  publicProfileAddress: '',\n  currentAddress: '',\n  publicName: '',\n  publicProfileActivity: [],\n  location: {}\n};\n\nvar mapState = function mapState(state) {\n  return {\n    feedByAddress: state.threeBox.feedByAddress,\n    ifFetchingActivity: state.threeBox.ifFetchingActivity,\n    publicProfileActivity: state.threeBox.publicProfileActivity,\n    currentAddress: state.threeBox.currentAddress,\n    publicProfileAddress: state.threeBox.publicProfileAddress,\n    name: state.threeBox.name,\n    publicName: state.threeBox.publicName\n  };\n};\n\nexport default connect(mapState)(Activity);","map":{"version":3,"sources":["/Users/kenzo/Desktop/WeMeme/src/components/Profile/MyProfile/Activity.jsx"],"names":["React","PropTypes","connect","ActivityHeader","ActivityTiles","Activity","ifFetchingActivity","feedByAddress","publicProfileActivity","Loading","length","map","feedAddress","i","propTypes","array","bool","currentAddress","string","name","publicProfileAddress","location","object","publicName","defaultProps","mapState","state","threeBox"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport ActivityHeader from './ActivityHeader';\nimport ActivityTiles from './ActivityTiles';\nimport Loading from '../../../assets/Loading.svg';\nimport '../../styles/Feed.css';\nimport '../../../views/styles/Profile.css';\nimport '../../styles/NetworkArray.css';\n\nconst Activity = ({\n  ifFetchingActivity,\n  feedByAddress,\n  publicProfileActivity,\n}) => (\n    <div id=\"feed\">\n      <div>\n        <p className=\"header publicHeader\" id=\"feed__header\">Activity</p>\n        <div className=\"feed__activity__header\">\n          {(ifFetchingActivity)\n            && (\n              <div className=\"feed__activity__load\">\n                <img src={Loading} alt=\"loading\" id=\"activityLoad\" />\n              </div>\n            )}\n          {(feedByAddress.length > 0)\n            ? feedByAddress.map((feedAddress, i) => (\n              <div key={i} className=\"feed__activity__tile\">\n                <ActivityHeader feedAddress={feedAddress} />\n                <ActivityTiles feedAddress={feedAddress} />\n              </div>\n            ))\n            : (!ifFetchingActivity && !publicProfileActivity.length)\n            && (\n              <div className=\"feed__activity__load\">\n                <p>No activity at this address yet</p>\n              </div>\n            )\n          }\n        </div>\n      </div>\n      <div className=\"feed__footer\">\n        <div className=\"logo__icon--footer\">\n          <h2>3</h2>\n        </div>\n      </div>\n    </div>\n  );\n\nActivity.propTypes = {\n  feedByAddress: PropTypes.array,\n  ifFetchingActivity: PropTypes.bool,\n  currentAddress: PropTypes.string,\n  name: PropTypes.string,\n  publicProfileAddress: PropTypes.string,\n  publicProfileActivity: PropTypes.array,\n  location: PropTypes.object,\n  publicName: PropTypes.string,\n};\n\nActivity.defaultProps = {\n  feedByAddress: [],\n  name: '',\n  ifFetchingActivity: false,\n  publicProfileAddress: '',\n  currentAddress: '',\n  publicName: '',\n  publicProfileActivity: [],\n  location: {},\n};\n\nconst mapState = state => ({\n  feedByAddress: state.threeBox.feedByAddress,\n  ifFetchingActivity: state.threeBox.ifFetchingActivity,\n  publicProfileActivity: state.threeBox.publicProfileActivity,\n  currentAddress: state.threeBox.currentAddress,\n  publicProfileAddress: state.threeBox.publicProfileAddress,\n  name: state.threeBox.name,\n  publicName: state.threeBox.publicName,\n});\n\nexport default connect(mapState)(Activity);\n"]},"metadata":{},"sourceType":"module"}