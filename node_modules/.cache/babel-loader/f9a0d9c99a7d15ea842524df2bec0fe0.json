{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar PeerId = require('peer-id');\n\nvar PeerInfo = require('peer-info');\n\nvar multiaddr = require('multiaddr');\n\nvar mafmt = require('mafmt');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar debug = require('debug');\n\nvar nextTick = require('async/nextTick');\n\nvar log = debug('libp2p:bootstrap');\nlog.error = debug('libp2p:bootstrap:error');\n\nfunction isIPFS(addr) {\n  try {\n    return mafmt.IPFS.matches(addr);\n  } catch (e) {\n    return false;\n  }\n}\n\nvar Bootstrap =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Bootstrap, _EventEmitter);\n\n  function Bootstrap(options) {\n    var _this;\n\n    _classCallCheck(this, Bootstrap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Bootstrap).call(this));\n    _this._list = options.list;\n    _this._interval = options.interval || 10000;\n    _this._timer = null;\n    return _this;\n  }\n\n  _createClass(Bootstrap, [{\n    key: \"start\",\n    value: function start(callback) {\n      var _this2 = this;\n\n      if (this._timer) {\n        return nextTick(function () {\n          return callback();\n        });\n      }\n\n      this._timer = setInterval(function () {\n        return _this2._discoverBootstrapPeers();\n      }, this._interval);\n      nextTick(function () {\n        callback();\n\n        _this2._discoverBootstrapPeers();\n      });\n    }\n  }, {\n    key: \"_discoverBootstrapPeers\",\n    value: function _discoverBootstrapPeers() {\n      var _this3 = this;\n\n      this._list.forEach(function (candidate) {\n        if (!isIPFS(candidate)) {\n          return log.error('Invalid multiaddr');\n        }\n\n        var ma = multiaddr(candidate);\n        var peerId = PeerId.createFromB58String(ma.getPeerId());\n        PeerInfo.create(peerId, function (err, peerInfo) {\n          if (err) {\n            return log.error('Invalid bootstrap peer id', err);\n          }\n\n          peerInfo.multiaddrs.add(ma);\n\n          _this3.emit('peer', peerInfo);\n        });\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(callback) {\n      nextTick(callback);\n\n      if (this._timer) {\n        clearInterval(this._timer);\n        this._timer = null;\n      }\n    }\n  }]);\n\n  return Bootstrap;\n}(EventEmitter);\n\nexports = module.exports = Bootstrap;\nexports.tag = 'bootstrap';","map":null,"metadata":{},"sourceType":"script"}