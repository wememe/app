{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { store } from '../state/store';\nvar returnedAddress;\nvar accountsPromise = new Promise(function (resolve, reject) {\n  window.web3.eth.getAccounts(function (e, accountsFound) {\n    // eslint-disable-line no-undef\n    if (e != null) {\n      reject(e);\n    } else {\n      console.log('accounts Found', accountsFound);\n      returnedAddress = accountsFound[0];\n      resolve(accountsFound);\n    }\n  });\n});\n\nvar requestAccess = function requestAccess() {\n  return (\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return accountsPromise;\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }))\n  );\n};\n\nrequestAccess();\nexport var address = typeof window.web3 !== 'undefined' ? window.web3.eth.accounts[0] ? window.web3.eth.accounts[0] : returnedAddress : ''; // eslint-disable-line no-undef\n\nvar prevAddress;\n\nvar pollNetworkAndAddress = function pollNetworkAndAddress() {\n  setTimeout(function () {\n    var currentAddress = typeof window.web3 !== 'undefined' ? window.web3.eth.accounts[0] : ''; // eslint-disable-line no-undef\n    // Logged out of MM while logged in to 3Box\n\n    if (currentAddress !== address && currentAddress === undefined && store.getState().threeBox.isLoggedIn) {\n      prevAddress = address;\n      store.dispatch({\n        type: 'HANDLE_LOGGEDOUT_MODAL',\n        loggedOutModal: true\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Logs out of 3Box\n\n\n    if (currentAddress !== address && currentAddress === undefined && store.getState().threeBox.isLoggedIn) {\n      store.dispatch({\n        type: 'HANDLE_LOGGEDOUT_MODAL',\n        loggedOutModal: true\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Switched address\n\n\n    if (currentAddress !== address && typeof currentAddress === 'string' && currentAddress !== prevAddress && address !== undefined && store.getState().threeBox.isLoggedIn) {\n      prevAddress = address;\n      store.dispatch({\n        type: 'HANDLE_SWITCHED_ADDRESS_MODAL',\n        switchedAddressModal: true,\n        prevAddress: prevAddress\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Switched back to previous address\n\n\n    if (currentAddress !== address && typeof currentAddress === 'string' && typeof address === 'string' && store.getState().threeBox.isLoggedIn && currentAddress === prevAddress) {\n      store.dispatch({\n        type: 'HANDLE_SWITCHED_ADDRESS_MODAL',\n        switchedAddressModal: false,\n        prevAddress: ''\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Logged in to MM\n\n\n    if (currentAddress !== address && typeof currentAddress === 'string' && address === undefined && !window.ethereum) {\n      store.dispatch({\n        type: 'HANDLE_WALLET_LOGIN_DETECTED_MODAL',\n        isSignedIntoWallet: true,\n        hasWallet: true\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Logged out of MM while not signed in to 3Box\n\n\n    if (currentAddress !== address && currentAddress === undefined) {\n      store.dispatch({\n        type: 'HANDLE_WALLET_LOGIN_DETECTED_MODAL',\n        isSignedIntoWallet: false,\n        hasWallet: false\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    address = currentAddress;\n    pollNetworkAndAddress();\n  }, 1000);\n};\n\npollNetworkAndAddress();\nexport default address;","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/utils/address.js"],"names":["store","returnedAddress","accountsPromise","Promise","resolve","reject","window","web3","eth","getAccounts","e","accountsFound","console","log","requestAccess","address","accounts","prevAddress","pollNetworkAndAddress","setTimeout","currentAddress","undefined","getState","threeBox","isLoggedIn","dispatch","type","loggedOutModal","localStorage","setItem","switchedAddressModal","ethereum","isSignedIntoWallet","hasWallet"],"mappings":"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","sourcesContent":["import {\n  store,\n} from '../state/store';\n\nlet returnedAddress;\n\nconst accountsPromise = new Promise((resolve, reject) => {\n  window.web3.eth.getAccounts((e, accountsFound) => { // eslint-disable-line no-undef\n    if (e != null) {\n      reject(e);\n    } else {\n      console.log('accounts Found', accountsFound);\n      returnedAddress = accountsFound[0];\n      resolve(accountsFound);\n    }\n  });\n});\n\nconst requestAccess = () => async () => {\n  await accountsPromise;\n};\nrequestAccess();\n\nexport let address = typeof window.web3 !== 'undefined' ? window.web3.eth.accounts[0] ? window.web3.eth.accounts[0] : returnedAddress :\n  ''; // eslint-disable-line no-undef\n\nlet prevAddress;\n\nconst pollNetworkAndAddress = () => {\n  setTimeout(() => {\n    const currentAddress = typeof window.web3 !== 'undefined' ? window.web3.eth.accounts[0] : ''; // eslint-disable-line no-undef\n    // Logged out of MM while logged in to 3Box\n    if (currentAddress !== address &&\n      currentAddress === undefined &&\n      store.getState().threeBox.isLoggedIn) {\n      prevAddress = address;\n      store.dispatch({\n        type: 'HANDLE_LOGGEDOUT_MODAL',\n        loggedOutModal: true,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Logs out of 3Box\n    if (currentAddress !== address &&\n      currentAddress === undefined &&\n      store.getState().threeBox.isLoggedIn) {\n      store.dispatch({\n        type: 'HANDLE_LOGGEDOUT_MODAL',\n        loggedOutModal: true,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Switched address\n    if (currentAddress !== address &&\n      typeof currentAddress === 'string' &&\n      currentAddress !== prevAddress &&\n      address !== undefined &&\n      store.getState().threeBox.isLoggedIn) {\n      prevAddress = address;\n      store.dispatch({\n        type: 'HANDLE_SWITCHED_ADDRESS_MODAL',\n        switchedAddressModal: true,\n        prevAddress,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Switched back to previous address\n    if (currentAddress !== address &&\n      typeof currentAddress === 'string' &&\n      typeof address === 'string' &&\n      store.getState().threeBox.isLoggedIn &&\n      currentAddress === prevAddress\n    ) {\n      store.dispatch({\n        type: 'HANDLE_SWITCHED_ADDRESS_MODAL',\n        switchedAddressModal: false,\n        prevAddress: '',\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Logged in to MM\n    if (currentAddress !== address &&\n      typeof currentAddress === 'string' &&\n      address === undefined &&\n      !window.ethereum) {\n      store.dispatch({\n        type: 'HANDLE_WALLET_LOGIN_DETECTED_MODAL',\n        isSignedIntoWallet: true,\n        hasWallet: true,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Logged out of MM while not signed in to 3Box\n    if (currentAddress !== address &&\n      currentAddress === undefined) {\n      store.dispatch({\n        type: 'HANDLE_WALLET_LOGIN_DETECTED_MODAL',\n        isSignedIntoWallet: false,\n        hasWallet: false,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    address = currentAddress;\n    pollNetworkAndAddress();\n  }, 1000);\n};\n\npollNetworkAndAddress();\n\nexport default address;"]},"metadata":{},"sourceType":"module"}