{"ast":null,"code":"'use strict';\n\nvar promisify = require('promisify-es6');\n\nvar whole = /^((\\d+(\\.\\d+)*)(ns|ms|us|µs|m|s|h))+$/;\nvar pieces = /((\\d+(\\.\\d+)*)(ns|ms|us|µs|m|s|h))/g;\nvar measure = /(ns|ms|us|µs|m|s|h)/g;\nvar multipliers = {\n  ns: 1e-6,\n  us: 0.001,\n  µs: 0.001,\n  ms: 1,\n  s: 1000,\n  m: 60000,\n  h: 3.6e+6\n};\n\nfunction analyse(time) {\n  var unit = time.match(measure)[0];\n  time = time.substring(0, time.length - unit.length);\n  return parseFloat(time) * multipliers[unit];\n}\n\nmodule.exports = promisify(function (time, callback) {\n  if (typeof time !== 'string') {\n    return callback(new Error('the first argument must be a string'));\n  }\n\n  if (!whole.test(time)) {\n    return callback(new Error('invalid time'));\n  }\n\n  callback(null, time.match(pieces).reduce(function (sum, currentVal) {\n    return sum + analyse(currentVal);\n  }, 0));\n});","map":null,"metadata":{},"sourceType":"script"}