{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/PublicProfile/PublicActivityHeader.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport networkArray from '../../../utils/networkArray';\nimport '../../styles/Feed.css';\nimport '../../../views/styles/Profile.css';\nimport '../../styles/NetworkArray.css';\n\nvar PublicActivityContext = function PublicActivityContext(_ref) {\n  var feedAddress = _ref.feedAddress;\n  return React.createElement(\"div\", {\n    className: \"feed__activity__context\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, console.log(feedAddress), feedAddress.metaData && feedAddress.metaData.image ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(feedAddress.metaData.image),\n    className: \"feed__activity__user clear\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : feedAddress.metaData && feedAddress.metaData.contractImg ? React.createElement(\"img\", {\n    src: feedAddress.metaData.contractImg.src,\n    className: \"feed__activity__user clear\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"feed__activity__context__network \".concat(networkArray[Math.floor(Math.random() * networkArray.length)]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"0x\"), React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, feedAddress.metaData && feedAddress.metaData.name && React.createElement(\"div\", {\n    className: \"feed__activity__address__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://3box.io/\".concat(Object.keys(feedAddress)[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, feedAddress.metaData.name)), React.createElement(\"p\", {\n    className: \"feed__activity__address__type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Address\", \" \".concat(Object.keys(feedAddress)[0].substring(0, 12), \"...\"))), feedAddress.metaData && feedAddress.metaData.contractDetails && feedAddress.metaData.contractDetails.name && React.createElement(\"div\", {\n    className: \"feed__activity__address__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://etherscan.io/tx/\".concat(Object.keys(feedAddress)[0]),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, (feedAddress.metaData.contractDetails.name.charAt(0).toUpperCase() + feedAddress.metaData.contractDetails.name.slice(1)).replace(/([A-Z])/g, ' $1').trim())), React.createElement(\"p\", {\n    className: \"feed__activity__address__type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Contract\", \" \".concat(Object.keys(feedAddress)[0].substring(0, 12), \"...\"))), (!feedAddress.metaData || !feedAddress.metaData.contractDetails && !feedAddress.metaData.name) && React.createElement(\"div\", {\n    className: \"feed__activity__address__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://ethstats.io/account/\".concat(Object.keys(feedAddress)[0]),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, Object.keys(feedAddress)[0])), React.createElement(\"p\", {\n    className: \"feed__activity__address__type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Address\"))));\n};\n\nPublicActivityContext.propTypes = {\n  feedAddress: PropTypes.object\n};\nPublicActivityContext.defaultProps = {\n  feedAddress: {}\n};\nexport default PublicActivityContext;","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/PublicProfile/PublicActivityHeader.jsx"],"names":["React","PropTypes","networkArray","PublicActivityContext","feedAddress","console","log","metaData","image","contractImg","src","Math","floor","random","length","name","Object","keys","substring","contractDetails","charAt","toUpperCase","slice","replace","trim","propTypes","object","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport networkArray from '../../../utils/networkArray';\nimport '../../styles/Feed.css';\nimport '../../../views/styles/Profile.css';\nimport '../../styles/NetworkArray.css';\n\nconst PublicActivityContext = ({\n  feedAddress,\n}) => (\n    <div className=\"feed__activity__context\">\n      {console.log(feedAddress)}\n      {(feedAddress.metaData && feedAddress.metaData.image)\n        ? <img src={`https://ipfs.infura.io/ipfs/${feedAddress.metaData.image}`} className=\"feed__activity__user clear\" alt=\"profile\" />\n        : (feedAddress.metaData && feedAddress.metaData.contractImg)\n          ? <img src={feedAddress.metaData.contractImg.src} className=\"feed__activity__user clear\" alt=\"profile\" />\n          : (\n            <div className={`feed__activity__context__network ${networkArray[Math.floor(Math.random() * networkArray.length)]}`}>\n              0x\n            </div>)}\n      <React.Fragment>\n        {(feedAddress.metaData && feedAddress.metaData.name)\n          && (\n            <div className=\"feed__activity__address__wrapper\">\n              <a href={`https://3box.io/${Object.keys(feedAddress)[0]}`}>\n                <h4>\n                  {feedAddress.metaData.name}\n                </h4>\n              </a>\n              <p className=\"feed__activity__address__type\">\n                Address\n                {` ${Object.keys(feedAddress)[0].substring(0, 12)}...`}\n              </p>\n            </div>\n          )}\n        {(feedAddress.metaData && feedAddress.metaData.contractDetails && feedAddress.metaData.contractDetails.name)\n          && (\n            <div className=\"feed__activity__address__wrapper\">\n              <a href={`https://etherscan.io/tx/${Object.keys(feedAddress)[0]}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                <h4>\n                  {(feedAddress.metaData.contractDetails.name.charAt(0).toUpperCase() + feedAddress.metaData.contractDetails.name.slice(1)).replace(/([A-Z])/g, ' $1').trim()}\n                </h4>\n              </a>\n              <p className=\"feed__activity__address__type\">\n                Contract\n                {` ${Object.keys(feedAddress)[0].substring(0, 12)}...`}\n              </p>\n            </div>\n          )}\n        {(!feedAddress.metaData || (!feedAddress.metaData.contractDetails && !feedAddress.metaData.name))\n          && (\n            <div className=\"feed__activity__address__wrapper\">\n              <a href={`https://ethstats.io/account/${Object.keys(feedAddress)[0]}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                <h4>\n                  {Object.keys(feedAddress)[0]}\n                </h4>\n              </a>\n              <p className=\"feed__activity__address__type\">\n                Address\n              </p>\n            </div>\n          )}\n      </React.Fragment>\n    </div>\n  );\n\nPublicActivityContext.propTypes = {\n  feedAddress: PropTypes.object,\n};\n\nPublicActivityContext.defaultProps = {\n  feedAddress: {},\n};\n\nexport default PublicActivityContext;\n"]},"metadata":{},"sourceType":"module"}