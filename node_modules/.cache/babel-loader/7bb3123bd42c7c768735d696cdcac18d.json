{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get3 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar KeyValueStore = require('./keyValueStore');\n\nvar utils = require('./utils/index');\n\nvar ENC_BLOCK_SIZE = 24;\n\nvar PrivateStore =\n/*#__PURE__*/\nfunction (_KeyValueStore) {\n  (0, _inherits2.default)(PrivateStore, _KeyValueStore);\n\n  function PrivateStore(muportDID, orbitdb, name, ensureConnected) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PrivateStore);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PrivateStore).call(this, orbitdb, name, ensureConnected));\n    _this.muportDID = muportDID;\n    _this._salt = _this._generateSalt();\n    return _this;\n  }\n\n  (0, _createClass2.default)(PrivateStore, [{\n    key: \"get\",\n    value: function () {\n      var _get2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee(key) {\n        var encryptedEntry;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _get3.default)((0, _getPrototypeOf2.default)(PrivateStore.prototype), \"get\", this).call(this, this._genDbKey(key));\n\n              case 2:\n                encryptedEntry = _context.sent;\n                return _context.abrupt(\"return\", encryptedEntry ? this._decryptEntry(encryptedEntry) : null);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function get(_x) {\n        return _get2.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"set\",\n    value: function () {\n      var _set = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee2(key, value) {\n        return _regenerator.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                value = this._encryptEntry(value);\n                key = this._genDbKey(key);\n                return _context2.abrupt(\"return\", (0, _get3.default)((0, _getPrototypeOf2.default)(PrivateStore.prototype), \"set\", this).call(this, key, value));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function set(_x2, _x3) {\n        return _set.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _remove = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee3(key) {\n        return _regenerator.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                key = this._genDbKey(key);\n                return _context3.abrupt(\"return\", (0, _get3.default)((0, _getPrototypeOf2.default)(PrivateStore.prototype), \"remove\", this).call(this, key));\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function remove(_x4) {\n        return _remove.apply(this, arguments);\n      };\n    }()\n    /**\n     * Returns array of underlying log entries. In linearized order according to their Lamport clocks.\n     * Useful for generating a complete history of all operations on store. Key is hashed, so key is\n     * not available from the private store.\n     *\n     *  @example\n     *  const log = store.log\n     *  const entry = log[0]\n     *  console.log(entry)\n     *  // { op: 'PUT', key: ...., value: 'Botbot', timeStamp: '1538575416068' }\n     *\n     * @return    {Array<Object>}     Array of ordered log entry objects\n     */\n\n  }, {\n    key: \"_generateSalt\",\n    value: function _generateSalt() {\n      var saltData = this.muportDID.keyring.signingKey.deriveChild(0)._hdkey._privateKey.toString('hex');\n\n      return utils.sha256(saltData);\n    }\n  }, {\n    key: \"_genDbKey\",\n    value: function _genDbKey(key) {\n      return utils.sha256Multihash(this._salt + key);\n    }\n  }, {\n    key: \"_encryptEntry\",\n    value: function _encryptEntry(entry) {\n      if (typeof entry === 'undefined') throw new Error('Entry to encrypt cannot be undefined');\n      return this.muportDID.symEncrypt(this._pad(JSON.stringify(entry)));\n    }\n  }, {\n    key: \"_decryptEntry\",\n    value: function _decryptEntry(_ref) {\n      var ciphertext = _ref.ciphertext,\n          nonce = _ref.nonce;\n      return JSON.parse(this._unpad(this.muportDID.symDecrypt(ciphertext, nonce)));\n    }\n  }, {\n    key: \"_pad\",\n    value: function _pad(val) {\n      var blockSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ENC_BLOCK_SIZE;\n      var blockDiff = (blockSize - val.length % blockSize) % blockSize;\n      return \"\".concat(val).concat('\\0'.repeat(blockDiff));\n    }\n  }, {\n    key: \"_unpad\",\n    value: function _unpad(padded) {\n      return padded.replace(/\\0+$/, '');\n    }\n  }, {\n    key: \"log\",\n    get: function get() {\n      var _this2 = this;\n\n      return (0, _get3.default)((0, _getPrototypeOf2.default)(PrivateStore.prototype), \"log\", this).map(function (obj) {\n        return Object.assign(obj, {\n          value: obj.value ? _this2._decryptEntry(obj.value) : null\n        });\n      });\n    }\n  }]);\n  return PrivateStore;\n}(KeyValueStore);\n\nmodule.exports = PrivateStore;","map":null,"metadata":{},"sourceType":"script"}