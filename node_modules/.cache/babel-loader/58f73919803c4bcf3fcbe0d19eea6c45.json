{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar assert = require('assert');\n\nvar withIs = require('class-is');\n\nvar CID = require('cids');\n\nvar DAGNode =\n/*#__PURE__*/\nfunction () {\n  function DAGNode(data, links, serialized, multihash) {\n    _classCallCheck(this, DAGNode);\n\n    assert(serialized, 'DAGNode needs its serialized format');\n    assert(multihash, 'DAGNode needs its multihash');\n    this._cid = new CID(multihash);\n    this._data = data || Buffer.alloc(0);\n    this._links = links || [];\n    this._serialized = serialized;\n  }\n\n  _createClass(DAGNode, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (!this._json) {\n        this._json = Object.freeze({\n          data: this.data,\n          links: this.links.map(function (l) {\n            return l.toJSON();\n          }),\n          multihash: this._cid.toBaseEncodedString(),\n          size: this.size\n        });\n      }\n\n      return Object.assign({}, this._json);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"DAGNode <\".concat(this._cid.toBaseEncodedString(), \" - data: \\\"\").concat(this.data.toString(), \"\\\", links: \").concat(this.links.length, \", size: \").concat(this.size, \">\");\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    },\n    set: function set(data) {\n      throw new Error(\"Can't set property: 'data' is immutable\");\n    }\n  }, {\n    key: \"links\",\n    get: function get() {\n      return this._links;\n    },\n    set: function set(links) {\n      throw new Error(\"Can't set property: 'links' is immutable\");\n    }\n  }, {\n    key: \"serialized\",\n    get: function get() {\n      return this._serialized;\n    },\n    set: function set(serialized) {\n      throw new Error(\"Can't set property: 'serialized' is immutable\");\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      if (this._size === undefined) {\n        this._size = this.links.reduce(function (sum, l) {\n          return sum + l.size;\n        }, this.serialized.length);\n      }\n\n      return this._size;\n    },\n    set: function set(size) {\n      throw new Error(\"Can't set property: 'size' is immutable\");\n    }\n  }, {\n    key: \"multihash\",\n    get: function get() {\n      return this._cid.buffer;\n    },\n    set: function set(multihash) {\n      throw new Error(\"Can't set property: 'multihash' is immutable\");\n    }\n  }, {\n    key: \"cid\",\n    get: function get() {\n      return this._cid;\n    },\n    set: function set(cid) {\n      throw new Error(\"Can't set property: 'cid' is immutable\");\n    }\n  }]);\n\n  return DAGNode;\n}();\n\nexports = module.exports = withIs(DAGNode, {\n  className: 'DAGNode',\n  symbolName: '@ipld/js-ipld-dag-pb/dagnode'\n});\nexports.create = require('./create');\nexports.clone = require('./clone');\nexports.addLink = require('./addLink');\nexports.rmLink = require('./rmLink');","map":null,"metadata":{},"sourceType":"script"}