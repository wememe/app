{"ast":null,"code":"'use strict';\n\nvar setImmediate = require('async/setImmediate');\n\nvar SmartBuffer = require('smart-buffer').SmartBuffer;\n\nvar gitUtil = require('./util');\n\nexports = module.exports;\n\nexports.serialize = function (dagNode, callback) {\n  var lines = [];\n  lines.push('object ' + gitUtil.cidToSha(dagNode.object['/']).toString('hex'));\n  lines.push('type ' + dagNode.type);\n  lines.push('tag ' + dagNode.tag);\n\n  if (dagNode.tagger !== null) {\n    lines.push('tagger ' + gitUtil.serializePersonLine(dagNode.tagger));\n  }\n\n  lines.push('');\n  lines.push(dagNode.message);\n  var data = lines.join('\\n');\n  var outBuf = new SmartBuffer();\n  outBuf.writeString('tag ');\n  outBuf.writeString(data.length.toString());\n  outBuf.writeUInt8(0);\n  outBuf.writeString(data);\n  setImmediate(function () {\n    return callback(null, outBuf.toBuffer());\n  });\n};\n\nexports.deserialize = function (data, callback) {\n  var lines = data.toString().split('\\n');\n  var res = {\n    gitType: 'tag'\n  };\n\n  var _loop = function _loop(line) {\n    var m = lines[line].match(/^([^ ]+) (.+)$/);\n\n    if (m === null) {\n      if (lines[line] !== '') {\n        setImmediate(function () {\n          return callback(new Error('Invalid tag line ' + line));\n        });\n      }\n\n      res.message = lines.slice(line + 1).join('\\n');\n      return \"break\";\n    }\n\n    var key = m[1];\n    var value = m[2];\n\n    switch (key) {\n      case 'object':\n        res.object = {\n          '/': gitUtil.shaToCid(Buffer.from(value, 'hex'))\n        };\n        break;\n\n      case 'tagger':\n        res.tagger = gitUtil.parsePersonLine(value);\n        break;\n\n      case 'tag':\n        res.tag = value;\n        break;\n\n      case 'type':\n        res.type = value;\n        break;\n\n      default:\n        res[key] = value;\n    }\n  };\n\n  for (var line = 0; line < lines.length; line++) {\n    var _ret = _loop(line);\n\n    if (_ret === \"break\") break;\n  }\n\n  setImmediate(function () {\n    return callback(null, res);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}