{"ast":null,"code":"'use strict';\n\nvar Connection = require('interface-connection').Connection;\n\nvar pull = require('pull-stream');\n/**\n * Creates a pull stream to run the given Connection stream through\n * the given Observer. This provides a way to more easily monitor connections\n * and their metadata. A new Connection will be returned that contains\n * has the attached Observer.\n *\n * @param {Transport} transport\n * @param {string} protocol\n * @param {Connection} connection\n * @param {Observer} observer\n * @returns {Connection}\n */\n\n\nmodule.exports = function (transport, protocol, connection, observer) {\n  var peerInfo = new Promise(function (resolve, reject) {\n    connection.getPeerInfo(function (err, peerInfo) {\n      if (!err && peerInfo) {\n        resolve(peerInfo);\n        return;\n      }\n\n      var setPeerInfo = connection.setPeerInfo;\n\n      connection.setPeerInfo = function (pi) {\n        setPeerInfo.call(connection, pi);\n        resolve(pi);\n      };\n    });\n  });\n  var stream = {\n    source: pull(connection, observer.incoming(transport, protocol, peerInfo)),\n    sink: pull(observer.outgoing(transport, protocol, peerInfo), connection)\n  };\n  return new Connection(stream, connection);\n};","map":null,"metadata":{},"sourceType":"script"}