{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/PublicActivityTiles.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FeedTileTXS, FeedTileToken, FeedTileInternal } from './FeedTile';\nimport '../styles/Feed.css';\nimport '../../views/styles/Profile.css';\nimport '../styles/NetworkArray.css';\n\nvar PublicActivity = function PublicActivity(_ref) {\n  var feedAddress = _ref.feedAddress,\n      publicProfileAddress = _ref.publicProfileAddress,\n      publicName = _ref.publicName;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, Object.values(feedAddress)[0].map(function (item, index) {\n    return function () {\n      if (item.dataType === 'Internal') {\n        return React.createElement(FeedTileInternal, {\n          currentAddress: publicProfileAddress,\n          metaDataName: feedAddress.metaData && (feedAddress.metaData.name || feedAddress.metaData.contractDetails && feedAddress.metaData.contractDetails.name),\n          onPublicProfilePage: true,\n          name: publicName,\n          item: item,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      }\n\n      if (item.dataType === 'Token') {\n        return React.createElement(FeedTileToken, {\n          currentAddress: publicProfileAddress,\n          metaDataName: feedAddress.metaData && (feedAddress.metaData.name || feedAddress.metaData.contractDetails && feedAddress.metaData.contractDetails.name),\n          onPublicProfilePage: true,\n          name: publicName,\n          item: item,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      }\n\n      if (item.dataType === 'Txs') {\n        return React.createElement(FeedTileTXS, {\n          currentAddress: publicProfileAddress,\n          metaDataName: feedAddress.metaData && (feedAddress.metaData.name || feedAddress.metaData.contractDetails && feedAddress.metaData.contractDetails.name),\n          onPublicProfilePage: true,\n          name: publicName,\n          item: item,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      }\n    }();\n  }));\n};\n\nPublicActivity.propTypes = {\n  feedAddress: PropTypes.object,\n  publicProfileAddress: PropTypes.string,\n  publicName: PropTypes.string\n};\nPublicActivity.defaultProps = {\n  feedAddress: {},\n  publicProfileAddress: '',\n  publicName: ''\n};\n\nvar mapState = function mapState(state) {\n  return {\n    publicProfileAddress: state.threeBox.publicProfileAddress,\n    publicName: state.threeBox.publicName\n  };\n};\n\nexport default connect(mapState)(PublicActivity);","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/PublicActivityTiles.jsx"],"names":["React","PropTypes","connect","FeedTileTXS","FeedTileToken","FeedTileInternal","PublicActivity","feedAddress","publicProfileAddress","publicName","Object","values","map","item","index","dataType","metaData","name","contractDetails","propTypes","object","string","defaultProps","mapState","state","threeBox"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n  FeedTileTXS,\n  FeedTileToken,\n  FeedTileInternal,\n} from './FeedTile';\n\nimport '../styles/Feed.css';\nimport '../../views/styles/Profile.css';\nimport '../styles/NetworkArray.css';\n\nconst PublicActivity = ({\n  feedAddress,\n  publicProfileAddress,\n  publicName,\n}) => (\n    <React.Fragment>\n      {\n        Object.values(feedAddress)[0].map((item, index) => (\n          (() => {\n            if (item.dataType === 'Internal') {\n              return (\n                <FeedTileInternal\n                  currentAddress={publicProfileAddress}\n                  metaDataName={feedAddress.metaData && (feedAddress.metaData.name || (feedAddress.metaData.contractDetails && feedAddress.metaData.contractDetails.name))}\n                  onPublicProfilePage\n                  name={publicName}\n                  item={item}\n                  key={index}\n                />);\n            }\n            if (item.dataType === 'Token') {\n              return (\n                <FeedTileToken\n                  currentAddress={publicProfileAddress}\n                  metaDataName={feedAddress.metaData && (feedAddress.metaData.name || (feedAddress.metaData.contractDetails && feedAddress.metaData.contractDetails.name))}\n                  onPublicProfilePage\n                  name={publicName}\n                  item={item}\n                  key={index}\n                />);\n            }\n            if (item.dataType === 'Txs') {\n              return (\n                <FeedTileTXS\n                  currentAddress={publicProfileAddress}\n                  metaDataName={feedAddress.metaData && (feedAddress.metaData.name || (feedAddress.metaData.contractDetails && feedAddress.metaData.contractDetails.name))}\n                  onPublicProfilePage\n                  name={publicName}\n                  item={item}\n                  key={index}\n                />);\n            }\n          })()\n        ))\n      }\n    </React.Fragment>\n  );\n\nPublicActivity.propTypes = {\n  feedAddress: PropTypes.object,\n  publicProfileAddress: PropTypes.string,\n  publicName: PropTypes.string,\n};\n\nPublicActivity.defaultProps = {\n  feedAddress: {},\n  publicProfileAddress: '',\n  publicName: '',\n};\n\nconst mapState = state => ({\n  publicProfileAddress: state.threeBox.publicProfileAddress,\n  publicName: state.threeBox.publicName,\n});\n\nexport default connect(mapState)(PublicActivity);\n"]},"metadata":{},"sourceType":"module"}