{"ast":null,"code":"'use strict';\n\nvar Key = require('interface-datastore').Key;\n\nvar debug = require('debug');\n\nvar log = debug('repo:version');\nvar versionKey = new Key('version');\n\nmodule.exports = function (store) {\n  return {\n    /**\n     * Check if a version file exists.\n     *\n     * @param {function(Error, bool)} callback\n     * @returns {void}\n     */\n    exists: function exists(callback) {\n      store.has(versionKey, callback);\n    },\n\n    /**\n     * Get the current version.\n     *\n     * @param {function(Error, number)} callback\n     * @returns {void}\n     */\n    get: function get(callback) {\n      store.get(versionKey, function (err, buf) {\n        if (err) {\n          return callback(err);\n        }\n\n        callback(null, parseInt(buf.toString().trim(), 10));\n      });\n    },\n\n    /**\n     * Set the version of the repo, writing it to the underlying store.\n     *\n     * @param {number} version\n     * @param {function(Error)} callback\n     * @returns {void}\n     */\n    set: function set(version, callback) {\n      store.put(versionKey, Buffer.from(String(version)), callback);\n    },\n\n    /**\n     * Check the current version, and return an error on missmatch\n     * @param {number} expected\n     * @param {function(Error)} callback\n     * @returns {void}\n     */\n    check: function check(expected, callback) {\n      this.get(function (err, version) {\n        if (err) {\n          return callback(err);\n        }\n\n        log('comparing version: %s and %s', version, expected); // Version 6 and 7 are the same\n        // TODO: Clean up the compatibility logic. Repo feature detection would be ideal, or a better version schema\n\n        var compatibleVersion = version === 6 && expected === 7 || expected === 6 && version === 7;\n\n        if (version !== expected && !compatibleVersion) {\n          return callback(new Error(\"ipfs repo needs migration: expected version v\".concat(expected, \", found version v\").concat(version)));\n        }\n\n        callback();\n      });\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}