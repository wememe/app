{"ast":null,"code":"'use strict';\n\nvar promisify = require('promisify-es6');\n\nvar mfs = require('ipfs-mfs/core');\n\nmodule.exports = function (self) {\n  var mfsSelf = Object.assign({}, self); // A patched dag API to ensure preload doesn't happen for MFS operations\n  // (MFS is preloaded periodically)\n\n  mfsSelf.dag = Object.assign({}, self.dag, {\n    get: promisify(function (cid, path, opts, cb) {\n      if (typeof path === 'function') {\n        cb = path;\n        path = undefined;\n      }\n\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = {};\n      }\n\n      opts = Object.assign({}, opts, {\n        preload: false\n      });\n      return self.dag.get(cid, path, opts, cb);\n    }),\n    put: promisify(function (node, opts, cb) {\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = {};\n      }\n\n      opts = Object.assign({}, opts, {\n        preload: false\n      });\n      return self.dag.put(node, opts, cb);\n    })\n  });\n  return mfs(mfsSelf, mfsSelf._options);\n};","map":null,"metadata":{},"sourceType":"script"}