{"ast":null,"code":"'use strict';\n\nvar CID = require('cids');\n\nvar multihash = require('multihashing-async'); // binary resolver\n\n\nmodule.exports = {\n  resolver: {\n    multicodec: 'raw',\n    defaultHashAlg: 'sha2-256',\n    resolve: function resolve(binaryBlob, path, callback) {\n      callback(null, {\n        value: binaryBlob,\n        remainderPath: ''\n      });\n    },\n    tree: function tree(binaryBlob, options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n      }\n\n      callback(null, []);\n    }\n  },\n  util: {\n    deserialize: function deserialize(data, cb) {\n      cb(null, data);\n    },\n    serialize: function serialize(data, cb) {\n      cb(null, data);\n    },\n    cid: function cid(data, options, cb) {\n      if (typeof options === 'function') {\n        cb = options;\n        options = {};\n      }\n\n      options = options || {};\n      var hashAlg = options.hashAlg || 'sha2-256';\n      var version = typeof options.version === 'undefined' ? 1 : options.version;\n      multihash(data, hashAlg, function (err, mh) {\n        if (err) return cb(err);\n        cb(null, new CID(version, 'raw', mh));\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}