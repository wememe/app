{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/FeedTile.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport tokenToData from '../../utils/tokenToData.json'; // import contractMap from 'eth-contract-metadata';\n\nimport Save from \"../../assets/Save.svg\";\nimport Delete from \"../../assets/Delete.svg\";\nimport FeedTileContext from './FeedTileContext';\nimport Internal from \"../../assets/Internal.svg\";\nimport EthereumLine from \"../../assets/EthereumLine.svg\";\nimport Tokens from \"../../assets/Tokens.svg\";\nimport '../styles/Feed.css';\nimport networkArray from '../../utils/networkArray';\nimport '../styles/NetworkArray.css'; // import Send from '../../assets/Send.svg';\n// import Receive from '../../assets/Receive.svg';\n\nexport var FeedTileActivity = function FeedTileActivity(_ref) {\n  var item = _ref.item,\n      verifiedGithub = _ref.verifiedGithub,\n      verifiedTwitter = _ref.verifiedTwitter;\n  return React.createElement(\"div\", {\n    className: \"feed__activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.op === 'PUT' ? Save : Delete,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" You \\n            \".concat(item.op === 'PUT' ? 'updated your' : 'removed your', \"\\n            \").concat(item.dataType === 'Private' ? 'private data' : '', \"\\n            \").concat(item.key === 'proof_github' ? 'Github username' : '', \"\\n            \").concat(item.key === 'proof_twitter' ? 'Twitter username' : '', \"\\n            \").concat(item.key !== 'proof_twitter' && item.key !== 'proof_github' && item.dataType !== 'Private' ? item.key.replace(/([A-Z])/g, ' $1').trim().toLowerCase() : '', \" \\n            \"), item.op === 'PUT' ? 'to' : ''), item.op === 'PUT' ? React.createElement(\"span\", {\n    className: \"feed__activity__info__value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, item.key === 'image' || item.key === 'coverPhoto' ? '' : '', item.key === 'emoji' ? React.createElement(\"span\", {\n    className: \"feed__activity__address__amount__emoji\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value) : '', item.key === 'proof_github' ? verifiedGithub : '', item.key === 'proof_twitter' ? verifiedTwitter : '', typeof item.value === 'object' && item.key !== 'image' && item.key !== 'coverPhoto' ? item.value ? Object.keys(item.value)[0] : '-----' : '', typeof item.value === 'string' && item.key !== 'proof_github' && item.key !== 'proof_twitter' ? item.value : '') : '')), React.createElement(FeedTileContext, {\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), (item.key === 'image' || item.key === 'coverPhoto') && item.value && item.value.length > 0 && item.value[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(item.value[0].contentUrl['/']),\n    className: \"feed__activity__image clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }) : '');\n};\nFeedTileActivity.propTypes = {\n  item: PropTypes.object,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string\n};\nFeedTileActivity.defaultProps = {\n  item: {},\n  verifiedGithub: '',\n  verifiedTwitter: ''\n};\nexport var FeedTileInternal = function FeedTileInternal(_ref2) {\n  var item = _ref2.item,\n      name = _ref2.name,\n      onPublicProfilePage = _ref2.onPublicProfilePage,\n      metaDataName = _ref2.metaDataName,\n      isFromProfile = _ref2.isFromProfile,\n      contractImg = _ref2.contractImg;\n  return React.createElement(\"a\", {\n    href: \"https://etherscan.io/tx/\".concat(item.hash),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"feed__activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, tokenToData[item.tokenSymbol] ? React.createElement(\"img\", {\n    src: \"/contractIcons/\".concat(tokenToData[item.tokenSymbol].logo),\n    alt: \"token icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: Internal,\n    alt: \"Internal Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), item.value === '0' && contractImg && React.createElement(\"img\", {\n    src: contractImg,\n    alt: \"token icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), item.value === '0' && !contractImg && React.createElement(\"div\", {\n    className: \"feed__activity__context__network \".concat(networkArray[Math.floor(Math.random() * networkArray.length)]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"0x\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, onPublicProfilePage && item.value === '0' && (isFromProfile ? \"\".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" performed the method\") : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" performed the method\")), !onPublicProfilePage && item.value === '0' && (isFromProfile ? 'You performed the method' : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" performed the method\")), onPublicProfilePage && item.value !== '0' && (isFromProfile ? \"\".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\") : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\")), !onPublicProfilePage && item.value !== '0' && (isFromProfile ? 'You sent' : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\"))), item.value !== '0' && React.createElement(\"span\", {\n    className: \"feed__activity__info__token \".concat(isFromProfile ? 'sentCurrency' : 'receivedCurrency'),\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" \").concat(item.tokenSymbol ? item.tokenSymbol : 'Tokens')), item.value !== '0' && React.createElement(\"span\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, onPublicProfilePage && (isFromProfile ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to \".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"))), !onPublicProfilePage && (isFromProfile ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to you\")), item.methodCall && item.value !== '0' && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"for \".concat(item.methodCall)), item.methodCall && item.value === '0' && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"\".concat(item.methodCall)))), React.createElement(FeedTileContext, {\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })));\n};\nFeedTileInternal.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n  isFromProfile: PropTypes.bool,\n  contractImg: PropTypes.string\n};\nFeedTileInternal.defaultProps = {\n  item: {},\n  metaDataName: '',\n  name: '',\n  contractImg: '',\n  onPublicProfilePage: false,\n  isFromProfile: false\n};\nexport var FeedTileToken = function FeedTileToken(_ref3) {\n  var item = _ref3.item,\n      name = _ref3.name,\n      onPublicProfilePage = _ref3.onPublicProfilePage,\n      metaDataName = _ref3.metaDataName,\n      isFromProfile = _ref3.isFromProfile,\n      contractImg = _ref3.contractImg;\n  return React.createElement(\"a\", {\n    href: \"https://etherscan.io/tx/\".concat(item.hash),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"feed__activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, tokenToData[item.tokenSymbol] ? React.createElement(\"img\", {\n    src: \"/contractIcons/\".concat(tokenToData[item.tokenSymbol].logo),\n    alt: \"token icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: Tokens,\n    alt: \"Token Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }), item.value === '0' && contractImg && React.createElement(\"img\", {\n    src: contractImg,\n    alt: \"token icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), item.value === '0' && !contractImg && React.createElement(\"div\", {\n    className: \"feed__activity__context__network \".concat(networkArray[Math.floor(Math.random() * networkArray.length)]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"0x\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, onPublicProfilePage && item.value === '0' && (isFromProfile ? \"\".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" performed the method\") : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" performed the method\")), !onPublicProfilePage && item.value === '0' && (isFromProfile ? 'You performed the method' : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" performed the method\")), onPublicProfilePage && item.value !== '0' && (isFromProfile ? \"\".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\") : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\")), !onPublicProfilePage && item.value !== '0' && (isFromProfile ? 'You sent' : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\"))), item.value !== '0' && React.createElement(\"span\", {\n    className: \"feed__activity__info__token \".concat(isFromProfile ? 'sentCurrency' : 'receivedCurrency'),\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" \").concat(item.tokenSymbol ? item.tokenSymbol : 'Tokens')), item.value !== '0' && React.createElement(\"span\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, onPublicProfilePage && (isFromProfile ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to \".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"))), !onPublicProfilePage && (isFromProfile ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to you\")), item.methodCall && item.value !== '0' && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"for \".concat(item.methodCall)), item.methodCall && item.value === '0' && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"\".concat(item.methodCall)))), React.createElement(FeedTileContext, {\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  })));\n};\nFeedTileToken.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  contractImgƒ: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n  isFromProfile: PropTypes.bool\n};\nFeedTileToken.defaultProps = {\n  item: {},\n  metaDataName: '',\n  contractImg: '',\n  name: '',\n  onPublicProfilePage: false,\n  isFromProfile: false\n};\nexport var FeedTileTXS = function FeedTileTXS(_ref4) {\n  var item = _ref4.item,\n      name = _ref4.name,\n      onPublicProfilePage = _ref4.onPublicProfilePage,\n      metaDataName = _ref4.metaDataName,\n      isFromProfile = _ref4.isFromProfile,\n      contractImg = _ref4.contractImg;\n  return React.createElement(\"a\", {\n    href: \"https://etherscan.io/tx/\".concat(item.hash),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"feed__activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, item.value === '0' && contractImg ? React.createElement(\"img\", {\n    src: contractImg,\n    alt: \"token icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: EthereumLine,\n    alt: \"Ethereum Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, onPublicProfilePage && item.value === '0' && (isFromProfile ? \"\".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" performed the method\") : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" performed the method\")), !onPublicProfilePage && item.value === '0' && (isFromProfile ? 'You performed the method' : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" performed the method\")), onPublicProfilePage && item.value !== '0' && (isFromProfile ? \"\".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\") : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\")), !onPublicProfilePage && item.value !== '0' && (isFromProfile ? 'You sent' : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\"))), item.value !== '0' && React.createElement(\"span\", {\n    className: \"feed__activity__info__token \".concat(isFromProfile ? 'sentCurrency' : 'receivedCurrency'),\n    title: \"\".concat((Number(item.value) / 1000000000000000000).toString(), \" ETH\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" ETH\")), item.value !== '0' && React.createElement(\"span\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, onPublicProfilePage && (isFromProfile ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to \".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"))), !onPublicProfilePage && (isFromProfile ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to you\")), item.methodCall && item.value !== '0' && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, \"for \".concat(item.methodCall)), item.methodCall && item.value === '0' && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, \"\".concat(item.methodCall)))), React.createElement(FeedTileContext, {\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  })));\n};\nFeedTileTXS.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  contractImg: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n  isFromProfile: PropTypes.bool\n};\nFeedTileTXS.defaultProps = {\n  item: {},\n  metaDataName: '',\n  contractImg: '',\n  name: '',\n  onPublicProfilePage: false,\n  isFromProfile: false\n};","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/FeedTile.jsx"],"names":["React","PropTypes","tokenToData","FeedTileContext","networkArray","FeedTileActivity","item","verifiedGithub","verifiedTwitter","op","Save","Delete","dataType","key","replace","trim","toLowerCase","value","Object","keys","length","contentUrl","propTypes","object","string","defaultProps","FeedTileInternal","name","onPublicProfilePage","metaDataName","isFromProfile","contractImg","hash","tokenSymbol","logo","Internal","Math","floor","random","from","substring","Number","toString","to","methodCall","bool","FeedTileToken","Tokens","contractImgƒ","FeedTileTXS","EthereumLine"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport tokenToData from '../../utils/tokenToData.json';\n// import contractMap from 'eth-contract-metadata';\n\nimport Save from '../../assets/Save.svg';\nimport Delete from '../../assets/Delete.svg';\nimport FeedTileContext from './FeedTileContext';\nimport Internal from '../../assets/Internal.svg';\nimport EthereumLine from '../../assets/EthereumLine.svg';\nimport Tokens from '../../assets/Tokens.svg';\nimport '../styles/Feed.css';\nimport networkArray from '../../utils/networkArray';\nimport '../styles/NetworkArray.css';\n// import Send from '../../assets/Send.svg';\n// import Receive from '../../assets/Receive.svg';\n\nexport const FeedTileActivity = ({ item, verifiedGithub, verifiedTwitter }) => (\n  <div className=\"feed__activity\">\n    <div className=\"feed__activity__data\">\n      <div className=\"feed__activity__info\">\n        <img src={item.op === 'PUT' ? Save : Delete} alt=\"Transaction Icon\" />\n        <p>\n          <span className=\"feed__activity__info__key\">\n            {` You \n            ${item.op === 'PUT' ? 'updated your' : 'removed your'}\n            ${item.dataType === 'Private' ? 'private data' : ''}\n            ${item.key === 'proof_github' ? 'Github username' : ''}\n            ${item.key === 'proof_twitter' ? 'Twitter username' : ''}\n            ${(item.key !== 'proof_twitter' && item.key !== 'proof_github' && item.dataType !== 'Private')\n                ? (item.key).replace(/([A-Z])/g, ' $1').trim().toLowerCase()\n                : ''} \n            `}\n            {item.op === 'PUT' ? 'to' : ''}\n          </span>\n\n          {item.op === 'PUT' ? (\n            <span className=\"feed__activity__info__value\">\n              {(item.key === 'image' || item.key === 'coverPhoto')\n                ? '' : ''}\n              {item.key === 'emoji'\n                ? (\n                  <span className=\"feed__activity__address__amount__emoji\">\n                    {typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value}\n                  </span>\n                ) : ''}\n              {item.key === 'proof_github'\n                ? verifiedGithub : ''}\n              {item.key === 'proof_twitter'\n                ? verifiedTwitter : ''}\n\n              {(typeof item.value === 'object' && (item.key !== 'image' && item.key !== 'coverPhoto'))\n                ? (item.value ? Object.keys(item.value)[0] : '-----')\n                : ''}\n\n              {typeof item.value === 'string' && (item.key !== 'proof_github' && item.key !== 'proof_twitter')\n                ? item.value : ''}\n            </span>) : ''}\n        </p>\n      </div>\n      <FeedTileContext item={item} />\n    </div>\n\n    {((item.key === 'image' || item.key === 'coverPhoto')\n      && item.value\n      && item.value.length > 0\n      && item.value[0].contentUrl)\n      ? (\n        <img src={`https://ipfs.infura.io/ipfs/${item.value[0].contentUrl['/']}`} className=\"feed__activity__image clearProfPic\" alt=\"profile\" />\n      ) : ''\n    }\n  </div>\n);\n\nFeedTileActivity.propTypes = {\n  item: PropTypes.object,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n};\n\nFeedTileActivity.defaultProps = {\n  item: {},\n  verifiedGithub: '',\n  verifiedTwitter: '',\n};\n\nexport const FeedTileInternal = ({ item, name, onPublicProfilePage, metaDataName, isFromProfile, contractImg }) => (\n  <a href={`https://etherscan.io/tx/${item.hash}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"feed__activity\">\n    <div className=\"feed__activity__data\">\n      <div className=\"feed__activity__info\">\n        {\n          (tokenToData[item.tokenSymbol])\n            ? <img src={`/contractIcons/${tokenToData[item.tokenSymbol].logo}`} alt=\"token icon\" />\n            : <img src={Internal} alt=\"Internal Transaction Icon\" />\n        }\n        {\n          (item.value === '0' && contractImg)\n          && <img src={contractImg} alt=\"token icon\" />\n        }\n        {\n          (item.value === '0' && !contractImg)\n          && (\n            <div className={`feed__activity__context__network ${networkArray[Math.floor(Math.random() * networkArray.length)]}`}>\n              0x\n            </div>\n          )\n        }\n        <p>\n          <span className=\"feed__activity__info__key\">\n            {(onPublicProfilePage && item.value === '0') && (isFromProfile\n              ? `${name || `${item.from.toLowerCase().substring(0, 12)}...`} performed the method`\n              : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} performed the method`)\n            }\n            {(!onPublicProfilePage && item.value === '0') && (isFromProfile\n              ? 'You performed the method'\n              : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} performed the method`)\n            }\n\n            {(onPublicProfilePage && item.value !== '0') && (isFromProfile\n              ? `${name || `${item.from.toLowerCase().substring(0, 12)}...`} sent`\n              : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n            }\n            {(!onPublicProfilePage && item.value !== '0') && (isFromProfile\n              ? 'You sent'\n              : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n            }\n          </span>\n\n          {item.value !== '0' && (\n            <span className={`feed__activity__info__token ${isFromProfile ? 'sentCurrency' : 'receivedCurrency'}`} title={(Number(item.value) / 1000000000000000000).toString()}>\n              {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ${item.tokenSymbol ? item.tokenSymbol : 'Tokens'}`}\n            </span>)}\n\n          {item.value !== '0' && (\n            <span className=\"feed__activity__info__key\">\n              {onPublicProfilePage && (isFromProfile\n                ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n                : `to ${name || `${item.from.toLowerCase().substring(0, 12)}...`}`)\n              }\n              {!onPublicProfilePage && (isFromProfile\n                ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n                : `to you`)\n              }\n            </span>)}\n\n          {(item.methodCall && item.value !== '0') && (\n            <span>\n              {`for ${item.methodCall}`}\n            </span>\n          )}\n          {(item.methodCall && item.value === '0') && (\n            <span>\n              {`${item.methodCall}`}\n            </span>\n          )}\n        </p>\n      </div>\n      <FeedTileContext item={item} />\n    </div>\n  </a>\n);\n\nFeedTileInternal.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n  isFromProfile: PropTypes.bool,\n  contractImg: PropTypes.string,\n};\n\nFeedTileInternal.defaultProps = {\n  item: {},\n  metaDataName: '',\n  name: '',\n  contractImg: '',\n  onPublicProfilePage: false,\n  isFromProfile: false,\n};\n\nexport const FeedTileToken = ({ item, name, onPublicProfilePage, metaDataName, isFromProfile, contractImg }) => (\n  <a href={`https://etherscan.io/tx/${item.hash}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"feed__activity\">\n    <div className=\"feed__activity__data\">\n      <div className=\"feed__activity__info\">\n        {\n          (tokenToData[item.tokenSymbol])\n            ? <img src={`/contractIcons/${tokenToData[item.tokenSymbol].logo}`} alt=\"token icon\" />\n            : <img src={Tokens} alt=\"Token Transaction Icon\" />\n        }\n        {\n          (item.value === '0' && contractImg)\n          && <img src={contractImg} alt=\"token icon\" />\n        }\n        {\n          (item.value === '0' && !contractImg)\n          && (\n            <div className={`feed__activity__context__network ${networkArray[Math.floor(Math.random() * networkArray.length)]}`}>\n              0x\n            </div>\n          )\n        }\n        <p>\n          <span className=\"feed__activity__info__key\">\n            {(onPublicProfilePage && item.value === '0') && (isFromProfile\n              ? `${name || `${item.from.toLowerCase().substring(0, 12)}...`} performed the method`\n              : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} performed the method`)\n            }\n            {(!onPublicProfilePage && item.value === '0') && (isFromProfile\n              ? 'You performed the method'\n              : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} performed the method`)\n            }\n\n            {(onPublicProfilePage && item.value !== '0') && (isFromProfile\n              ? `${name || `${item.from.toLowerCase().substring(0, 12)}...`} sent`\n              : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n            }\n            {(!onPublicProfilePage && item.value !== '0') && (isFromProfile\n              ? 'You sent'\n              : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n            }\n          </span>\n          {item.value !== '0' && (\n            <span className={`feed__activity__info__token ${isFromProfile ? 'sentCurrency' : 'receivedCurrency'}`} title={(Number(item.value) / 1000000000000000000).toString()}>\n              {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ${item.tokenSymbol ? item.tokenSymbol : 'Tokens'}`}\n            </span>)}\n\n          {item.value !== '0' && (\n            <span className=\"feed__activity__info__key\">\n              {onPublicProfilePage && (isFromProfile\n                ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n                : `to ${name || `${item.from.toLowerCase().substring(0, 12)}...`}`)\n              }\n              {!onPublicProfilePage && (isFromProfile\n                ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n                : `to you`)\n              }\n            </span>)}\n          {(item.methodCall && item.value !== '0') && (\n            <span>\n              {`for ${item.methodCall}`}\n            </span>\n          )}\n          {(item.methodCall && item.value === '0') && (\n            <span>\n              {`${item.methodCall}`}\n            </span>\n          )}\n        </p>\n      </div>\n      <FeedTileContext item={item} />\n    </div>\n  </a>\n);\n\nFeedTileToken.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  contractImgƒ: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n  isFromProfile: PropTypes.bool,\n};\n\nFeedTileToken.defaultProps = {\n  item: {},\n  metaDataName: '',\n  contractImg: '',\n  name: '',\n  onPublicProfilePage: false,\n  isFromProfile: false,\n};\n\nexport const FeedTileTXS = ({ item, name, onPublicProfilePage, metaDataName, isFromProfile, contractImg }) => (\n  <a href={`https://etherscan.io/tx/${item.hash}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"feed__activity\">\n    <div className=\"feed__activity__data\">\n      <div className=\"feed__activity__info\">\n        {\n          (item.value === '0' && contractImg)\n            ? <img src={contractImg} alt=\"token icon\" />\n            : <img src={EthereumLine} alt=\"Ethereum Transaction Icon\" />\n        }\n        <p>\n          <span className=\"feed__activity__info__key\">\n            {(onPublicProfilePage && item.value === '0') && (isFromProfile\n              ? `${name || `${item.from.toLowerCase().substring(0, 12)}...`} performed the method`\n              : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} performed the method`)\n            }\n            {(!onPublicProfilePage && item.value === '0') && (isFromProfile\n              ? 'You performed the method'\n              : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} performed the method`)\n            }\n\n            {(onPublicProfilePage && item.value !== '0') && (isFromProfile\n              ? `${name || `${item.from.toLowerCase().substring(0, 12)}...`} sent`\n              : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n            }\n            {(!onPublicProfilePage && item.value !== '0') && (isFromProfile\n              ? 'You sent'\n              : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n            }\n          </span>\n\n          {item.value !== '0' && (\n            <span className={`feed__activity__info__token ${isFromProfile ? 'sentCurrency' : 'receivedCurrency'}`} title={`${(Number(item.value) / 1000000000000000000).toString()} ETH`}>\n              {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ETH`}\n            </span>)}\n\n          {item.value !== '0' && (\n            <span className=\"feed__activity__info__key\">\n              {onPublicProfilePage && (isFromProfile\n                ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n                : `to ${name || `${item.from.toLowerCase().substring(0, 12)}...`}`)\n              }\n              {!onPublicProfilePage && (isFromProfile\n                ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n                : `to you`)\n              }\n            </span>)}\n\n          {(item.methodCall && item.value !== '0') && (\n            <span>\n              {`for ${item.methodCall}`}\n            </span>\n          )}\n          {(item.methodCall && item.value === '0') && (\n            <span>\n              {`${item.methodCall}`}\n            </span>\n          )}\n        </p>\n      </div>\n      <FeedTileContext item={item} />\n    </div>\n  </a>\n);\n\nFeedTileTXS.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  contractImg: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n  isFromProfile: PropTypes.bool,\n};\n\nFeedTileTXS.defaultProps = {\n  item: {},\n  metaDataName: '',\n  contractImg: '',\n  name: '',\n  onPublicProfilePage: false,\n  isFromProfile: false,\n};"]},"metadata":{},"sourceType":"module"}