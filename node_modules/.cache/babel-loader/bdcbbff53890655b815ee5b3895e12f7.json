{"ast":null,"code":"'use strict';\n\nvar debug = require('debug');\n\nvar waterfall = require('async/waterfall');\n\nvar support = require('../support');\n\nvar crypto = require('./crypto');\n\nvar log = debug('libp2p:secio');\nlog.error = debug('libp2p:secio:error'); // step 1. Propose\n// -- propose cipher suite + send pubkeys + nonce\n\nmodule.exports = function propose(state, callback) {\n  log('1. propose - start');\n  log('1. propose - writing proposal');\n  support.write(state, crypto.createProposal(state));\n  waterfall([function (cb) {\n    return support.read(state.shake, cb);\n  }, function (msg, cb) {\n    log('1. propose - reading proposal', msg);\n    crypto.identify(state, msg, cb);\n  }, function (cb) {\n    return crypto.selectProtocols(state, cb);\n  }], function (err) {\n    if (err) {\n      return callback(err);\n    }\n\n    log('1. propose - finish');\n    callback();\n  });\n};","map":null,"metadata":{},"sourceType":"script"}