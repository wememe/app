{"ast":null,"code":"'use strict';\n\nvar series = require('async/series');\n\nvar _require = require('./utils'),\n    toSources = _require.toSources;\n\nvar cp = require('./cp');\n\nvar rm = require('./rm');\n\nvar defaultOptions = {\n  parents: false,\n  recursive: false,\n  flush: true,\n  format: 'dag-pb',\n  hashAlg: 'sha2-256'\n};\n\nmodule.exports = function (ipfs) {\n  return function mfsMv() {\n    var args = Array.from(arguments);\n\n    if (Array.isArray(args[0])) {\n      args = args[0].concat(args.slice(1));\n    }\n\n    var _toSources = toSources(args, defaultOptions),\n        sources = _toSources.sources,\n        options = _toSources.options,\n        callback = _toSources.callback; // remove the callback\n\n\n    var cpArgs = sources.map(function (source) {\n      return source.path;\n    }).concat(options); // remove the last source as it'll be the destination\n\n    var rmArgs = sources.slice(0, -1).map(function (source) {\n      return source.path;\n    }).concat(Object.assign(options, {\n      recursive: true\n    }));\n    series([function (cb) {\n      return cp(ipfs).apply(null, cpArgs.concat(cb));\n    }, function (cb) {\n      return rm(ipfs).apply(null, rmArgs.concat(cb));\n    }], callback);\n  };\n};","map":null,"metadata":{},"sourceType":"script"}