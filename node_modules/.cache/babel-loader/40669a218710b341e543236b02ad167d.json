{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/MyProfile/ActivityHeader.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport networkArray from '../../../utils/networkArray';\nimport '../../styles/Feed.css';\nimport '../../../views/styles/Profile.css';\nimport '../../styles/NetworkArray.css';\n\nvar Activity = function Activity(_ref) {\n  var name = _ref.name,\n      image = _ref.image,\n      feedAddress = _ref.feedAddress;\n  return React.createElement(\"div\", {\n    className: \"feed__activity__context\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, console.log(image), Object.keys(feedAddress)[0] === 'threeBox' && image.length > 0 && image[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(image[0].contentUrl['/']),\n    className: \"feed__activity__user\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"feed__activity__user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), Object.keys(feedAddress)[0] !== 'threeBox' && React.createElement(\"div\", {\n    className: \"feed__activity__context__network \".concat(networkArray[Math.floor(Math.random() * networkArray.length)]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"0x\"), React.createElement(\"div\", {\n    className: \"feed__activity__address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, Object.keys(feedAddress)[0] === 'threeBox' ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    className: \"feed__activity__address__type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"3Box Profile\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: feedAddress.metaData && feedAddress.metaData.name ? \"https://3box.io/\".concat(Object.keys(feedAddress)[0]) : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, feedAddress.metaData && feedAddress.metaData.name ? feedAddress.metaData.name : '', feedAddress.metaData && feedAddress.metaData.contractDetails ? feedAddress.metaData.contractDetails.name : '', feedAddress.metaData && !feedAddress.metaData.contractDetails && !feedAddress.metaData.name ? Object.keys(feedAddress)[0] : '')), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Ethereum Address\"))));\n};\n\nActivity.propTypes = {\n  feedAddress: PropTypes.object,\n  name: PropTypes.string,\n  image: PropTypes.array\n};\nActivity.defaultProps = {\n  feedAddress: {},\n  image: [],\n  name: ''\n};\n\nvar mapState = function mapState(state) {\n  return {\n    name: state.threeBox.name,\n    image: state.threeBox.image\n  };\n};\n\nexport default connect(mapState)(Activity);","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/MyProfile/ActivityHeader.jsx"],"names":["React","PropTypes","connect","networkArray","Activity","name","image","feedAddress","console","log","Object","keys","length","contentUrl","Math","floor","random","metaData","contractDetails","propTypes","object","string","array","defaultProps","mapState","state","threeBox"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport networkArray from '../../../utils/networkArray';\nimport '../../styles/Feed.css';\nimport '../../../views/styles/Profile.css';\nimport '../../styles/NetworkArray.css';\n\nconst Activity = ({\n  name,\n  image,\n  feedAddress,\n}) => (\n    <div className=\"feed__activity__context\">\n      {console.log(image)}\n      {Object.keys(feedAddress)[0] === 'threeBox'\n        && image.length > 0 && image[0].contentUrl\n        ? <img src={`https://ipfs.infura.io/ipfs/${image[0].contentUrl['/']}`} className=\"feed__activity__user\" alt=\"profile\" />\n        : <div className=\"feed__activity__user\" />\n      }\n      {Object.keys(feedAddress)[0] !== 'threeBox'\n        && (\n          <div className={`feed__activity__context__network ${networkArray[Math.floor(Math.random() * networkArray.length)]}`}>\n            0x\n          </div>)\n      }\n      <div className=\"feed__activity__address\">\n        {Object.keys(feedAddress)[0] === 'threeBox'\n          ? (\n            <div>\n              <h4>\n                {name}\n              </h4>\n              <p className=\"feed__activity__address__type\">\n                3Box Profile\n              </p>\n            </div>\n          )\n          : (\n            <div>\n              <a href={(feedAddress.metaData && feedAddress.metaData.name) ? `https://3box.io/${Object.keys(feedAddress)[0]}` : ''}>\n                <h4>\n                  {(feedAddress.metaData && feedAddress.metaData.name) ? feedAddress.metaData.name : ''}\n                  {(feedAddress.metaData && feedAddress.metaData.contractDetails) ? feedAddress.metaData.contractDetails.name : ''}\n                  {(feedAddress.metaData && (!feedAddress.metaData.contractDetails && !feedAddress.metaData.name)) ? Object.keys(feedAddress)[0] : ''}\n                </h4>\n              </a>\n              <p>\n                Ethereum Address\n              </p>\n            </div>\n          )}\n      </div>\n    </div>\n  );\n\nActivity.propTypes = {\n  feedAddress: PropTypes.object,\n  name: PropTypes.string,\n  image: PropTypes.array,\n};\n\nActivity.defaultProps = {\n  feedAddress: {},\n  image: [],\n  name: '',\n};\n\nconst mapState = state => ({\n  name: state.threeBox.name,\n  image: state.threeBox.image,\n});\n\nexport default connect(mapState)(Activity);\n"]},"metadata":{},"sourceType":"module"}