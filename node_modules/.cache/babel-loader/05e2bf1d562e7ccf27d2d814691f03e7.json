{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/FeedTile.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { timeSince } from '../../utils/time';\nimport PrivateActivity from \"../../assets/PrivateActivity.svg\";\nimport Globe from \"../../assets/Globe.svg\";\nimport Save from \"../../assets/Save.svg\";\nimport Delete from \"../../assets/Delete.svg\";\nimport Internal from \"../../assets/Internal.svg\";\nimport EthereumLine from \"../../assets/EthereumLine.svg\";\nimport Send from \"../../assets/Send.svg\";\nimport Receive from \"../../assets/Receive.svg\";\nimport Tokens from \"../../assets/Tokens.svg\";\nimport '../styles/Feed.css';\nexport var FeedTileActivity = function FeedTileActivity(_ref) {\n  var item = _ref.item,\n      verifiedGithub = _ref.verifiedGithub,\n      verifiedTwitter = _ref.verifiedTwitter;\n  return React.createElement(\"div\", {\n    className: \"feed__activity___data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.op === 'PUT' ? Save : Delete,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" You \\n        \".concat(item.op === 'PUT' ? 'added' : 'removed', \"\\n        \").concat(item.dataType === 'Private' ? 'private data' : item.key === 'proof_github' ? 'a Github username' : item.key === 'proof_twitter' ? 'a Twitter username' : item.key && (item.key.charAt(0).toUpperCase() + item.key.slice(1)).replace(/([A-Z])/g, ' $1').trim(), \": \")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, console.log(item.key), console.log(item.value), item.key === 'image' || item.key === 'coverPhoto' ? item.value && item.value.length > 0 && item.value[0].contentUrl && React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(item.value[0].contentUrl['/']),\n    className: \"feed__activity__image clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }) : item.dataType === 'Private' ? '*****' : item.key === 'emoji' ? React.createElement(\"span\", {\n    className: \"feed__activity__address__amount__emoji\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value) : item.key === 'proof_github' ? verifiedGithub : item.key === 'proof_twitter' ? verifiedTwitter : typeof item.value === 'object' ? \"\".concat(item.value ? Object.keys(item.value)[0] : '-----') : item.value)), React.createElement(\"div\", {\n    className: \"feed__activity__metaData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)), item.dataType === 'Private' ? React.createElement(\"img\", {\n    src: PrivateActivity,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: Globe,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })));\n}; // export const FeedTileActivity = ({ item, isEven, verifiedGithub, verifiedTwitter }) => (\n//   <div className={`feed__activity___data ${isEven ? 'darkFeed' : 'lightFeed'}`}>\n//     <div className=\"feed__activity__address__dataType\">\n//       {item.dataType === 'Private'\n//         ? <img src={PrivateActivity} alt=\"Transaction Icon\" className=\" />\n//         : <img src={Globe} alt=\"Transaction Icon\" className=\" />\n//       }\n//     </div>\n//     <div className=\"feed__activity__address__toFrom saveDelete\">\n//       <img src={item.op === 'PUT' ? Save : Delete} alt=\"Transaction Icon\" />\n//       <p>\n//         {item.op === 'PUT' ? 'Save' : 'Delete'}\n//       </p>\n//     </div>\n//     <p className=\"feed__activity__address__function\">\n//       {item.dataType === 'Private'\n//         ? 'Private'\n//         : item.key === 'proof_github'\n//           ? 'Github'\n//           : item.key === 'proof_twitter'\n//             ? 'Twitter'\n//             : item.key && (item.key.charAt(0).toUpperCase() + item.key.slice(1)).replace(/([A-Z])/g, ' $1').trim()\n//       }\n//     </p>\n//     <p className=\"feed__activity__address__amount\">\n//       {item.key === 'image' || item.key === 'coverPhoto'\n//         ? (item.value && item.value.length > 0 && item.value[0].contentUrl)\n//         && <img src={`https://ipfs.infura.io/ipfs/${item.value[0].contentUrl['/']}`} className=\"feed__activity__image clearProfPic\" alt=\"profile\" />\n//         // ? <img src={Image} alt=\"Transaction Icon\" className=\" />\n//         : item.dataType === 'Private'\n//           ? '*****'\n//           : item.key === 'emoji'\n//             ? (\n//               <span className=\"feed__activity__address__amount__emoji\">\n//                 {typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value}\n//               </span>\n//             )\n//             : item.key === 'proof_github'\n//               ? verifiedGithub\n//               : item.key === 'proof_twitter'\n//                 ? verifiedTwitter\n//                 : typeof item.value === 'object'\n//                   ? `${item.value ? Object.keys(item.value)[0] : '-----'}`\n//                   : item.value}\n//     </p>\n//     <p className=\"feed__activity__address__time\">\n//       {timeSince(item.timeStamp * 1000)}\n//     </p>\n//   </div>\n// );\n\nFeedTileActivity.propTypes = {\n  item: PropTypes.object,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string\n};\nFeedTileActivity.defaultProps = {\n  item: {},\n  verifiedGithub: '',\n  verifiedTwitter: ''\n};\nexport var FeedTileInternal = function FeedTileInternal(_ref2) {\n  var item = _ref2.item,\n      currentAddress = _ref2.currentAddress;\n  return React.createElement(\"div\", {\n    className: \"feed__activity___data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, item.from === currentAddress ? React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Send,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Send\")) : React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Receive,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Receive\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__function\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1)), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" ETH\")), React.createElement(\"div\", {\n    className: \"feed__activity__metaData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)), React.createElement(\"img\", {\n    src: Internal,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })));\n};\nFeedTileInternal.propTypes = {\n  item: PropTypes.object\n};\nFeedTileInternal.defaultProps = {\n  item: {}\n};\nexport var FeedTileToken = function FeedTileToken(_ref3) {\n  var item = _ref3.item,\n      currentAddress = _ref3.currentAddress;\n  return React.createElement(\"div\", {\n    className: \"feed__activity___data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, item.from === currentAddress ? React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Send,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Send\")) : React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Receive,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Receive\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__function\",\n    title: item.tokenName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, item.tokenName ? item.tokenName : 'Token'), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" \").concat(item.tokenSymbol ? item.tokenSymbol : 'Tokens')), React.createElement(\"div\", {\n    className: \"feed__activity__metaData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)), React.createElement(\"img\", {\n    className: \"feed__activity__address__dataType\",\n    src: Tokens,\n    alt: \"Token Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  })));\n};\nFeedTileToken.propTypes = {\n  item: PropTypes.object\n};\nFeedTileToken.defaultProps = {\n  item: {}\n};\nexport var FeedTileTXS = function FeedTileTXS(_ref4) {\n  var item = _ref4.item,\n      currentAddress = _ref4.currentAddress;\n  return React.createElement(\"div\", {\n    className: \"feed__activity___data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, item.from === currentAddress ? React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Send,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Send\")) : React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Receive,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Receive\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__function\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"Ethereum\"), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" ETH\")), React.createElement(\"div\", {\n    className: \"feed__activity__metaData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)), React.createElement(\"img\", {\n    src: EthereumLine,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType--ethereum feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  })));\n};\nFeedTileTXS.propTypes = {\n  item: PropTypes.object\n};\nFeedTileTXS.defaultProps = {\n  item: {}\n};","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/FeedTile.jsx"],"names":["React","PropTypes","timeSince","FeedTileActivity","item","verifiedGithub","verifiedTwitter","op","Save","Delete","dataType","key","charAt","toUpperCase","slice","replace","trim","console","log","value","length","contentUrl","Object","keys","timeStamp","PrivateActivity","Globe","propTypes","object","string","defaultProps","FeedTileInternal","currentAddress","from","Send","Receive","type","Number","toString","substring","Internal","FeedTileToken","tokenName","tokenSymbol","Tokens","FeedTileTXS","EthereumLine"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { timeSince } from '../../utils/time';\nimport PrivateActivity from '../../assets/PrivateActivity.svg';\nimport Globe from '../../assets/Globe.svg';\nimport Save from '../../assets/Save.svg';\nimport Delete from '../../assets/Delete.svg';\n\nimport Internal from '../../assets/Internal.svg';\nimport EthereumLine from '../../assets/EthereumLine.svg';\nimport Send from '../../assets/Send.svg';\nimport Receive from '../../assets/Receive.svg';\nimport Tokens from '../../assets/Tokens.svg';\n\nimport '../styles/Feed.css';\n\nexport const FeedTileActivity = ({ item, verifiedGithub, verifiedTwitter }) => (\n  <div className=\"feed__activity___data\">\n    <div className=\"feed__activity__info\">\n      <img src={item.op === 'PUT' ? Save : Delete} alt=\"Transaction Icon\" />\n      <p>\n        {` You \n        ${item.op === 'PUT' ? 'added' : 'removed'}\n        ${item.dataType === 'Private'\n            ? 'private data'\n            : item.key === 'proof_github'\n              ? 'a Github username'\n              : item.key === 'proof_twitter'\n                ? 'a Twitter username'\n                : item.key && (item.key.charAt(0).toUpperCase() + item.key.slice(1)).replace(/([A-Z])/g, ' $1').trim()\n          }: `}\n      </p>\n      <p>\n        {console.log(item.key)}\n        {console.log(item.value)}\n        {(item.key === 'image' || item.key === 'coverPhoto')\n          ? (item.value && item.value.length > 0 && item.value[0].contentUrl) && <img src={`https://ipfs.infura.io/ipfs/${item.value[0].contentUrl['/']}`} className=\"feed__activity__image clearProfPic\" alt=\"profile\" />\n          : item.dataType === 'Private'\n            ? '*****'\n            : item.key === 'emoji'\n              ? (\n                <span className=\"feed__activity__address__amount__emoji\">\n                  {typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value}\n                </span>\n              )\n              : item.key === 'proof_github'\n                ? verifiedGithub\n                : item.key === 'proof_twitter'\n                  ? verifiedTwitter\n                  : typeof item.value === 'object'\n                    ? `${item.value ? Object.keys(item.value)[0] : '-----'}`\n                    : item.value}\n      </p>\n    </div>\n    <div className=\"feed__activity__metaData\">\n      <p className=\"feed__activity__address__time\">\n        {timeSince(item.timeStamp * 1000)}\n      </p>\n      {item.dataType === 'Private'\n        ? <img src={PrivateActivity} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType\" />\n        : <img src={Globe} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType\" />\n      }\n    </div>\n  </div>\n);\n// export const FeedTileActivity = ({ item, isEven, verifiedGithub, verifiedTwitter }) => (\n//   <div className={`feed__activity___data ${isEven ? 'darkFeed' : 'lightFeed'}`}>\n//     <div className=\"feed__activity__address__dataType\">\n//       {item.dataType === 'Private'\n//         ? <img src={PrivateActivity} alt=\"Transaction Icon\" className=\" />\n//         : <img src={Globe} alt=\"Transaction Icon\" className=\" />\n//       }\n//     </div>\n//     <div className=\"feed__activity__address__toFrom saveDelete\">\n//       <img src={item.op === 'PUT' ? Save : Delete} alt=\"Transaction Icon\" />\n//       <p>\n//         {item.op === 'PUT' ? 'Save' : 'Delete'}\n//       </p>\n//     </div>\n//     <p className=\"feed__activity__address__function\">\n//       {item.dataType === 'Private'\n//         ? 'Private'\n//         : item.key === 'proof_github'\n//           ? 'Github'\n//           : item.key === 'proof_twitter'\n//             ? 'Twitter'\n//             : item.key && (item.key.charAt(0).toUpperCase() + item.key.slice(1)).replace(/([A-Z])/g, ' $1').trim()\n//       }\n//     </p>\n//     <p className=\"feed__activity__address__amount\">\n//       {item.key === 'image' || item.key === 'coverPhoto'\n//         ? (item.value && item.value.length > 0 && item.value[0].contentUrl)\n//         && <img src={`https://ipfs.infura.io/ipfs/${item.value[0].contentUrl['/']}`} className=\"feed__activity__image clearProfPic\" alt=\"profile\" />\n//         // ? <img src={Image} alt=\"Transaction Icon\" className=\" />\n//         : item.dataType === 'Private'\n//           ? '*****'\n//           : item.key === 'emoji'\n//             ? (\n//               <span className=\"feed__activity__address__amount__emoji\">\n//                 {typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value}\n//               </span>\n//             )\n//             : item.key === 'proof_github'\n//               ? verifiedGithub\n//               : item.key === 'proof_twitter'\n//                 ? verifiedTwitter\n//                 : typeof item.value === 'object'\n//                   ? `${item.value ? Object.keys(item.value)[0] : '-----'}`\n//                   : item.value}\n//     </p>\n//     <p className=\"feed__activity__address__time\">\n//       {timeSince(item.timeStamp * 1000)}\n//     </p>\n//   </div>\n// );\n\nFeedTileActivity.propTypes = {\n  item: PropTypes.object,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n};\n\nFeedTileActivity.defaultProps = {\n  item: {},\n  verifiedGithub: '',\n  verifiedTwitter: '',\n};\n\nexport const FeedTileInternal = ({ item, currentAddress }) => (\n  <div className=\"feed__activity___data\">\n    {item.from === currentAddress\n      ? (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Send} alt=\"Transaction Icon\" />\n          <p>\n            Send\n          </p>\n        </div>\n      )\n      : (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Receive} alt=\"Transaction Icon\" />\n          <p>\n            Receive\n          </p>\n        </div>\n      )\n    }\n    <p className=\"feed__activity__address__function\">\n      {item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1)}\n    </p>\n    <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n      {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ETH`}\n    </p>\n\n    <div className=\"feed__activity__metaData\">\n      <p className=\"feed__activity__address__time\">\n        {timeSince(item.timeStamp * 1000)}\n      </p>\n      <img src={Internal} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType\" />\n    </div>\n  </div>\n);\n\nFeedTileInternal.propTypes = {\n  item: PropTypes.object,\n};\n\nFeedTileInternal.defaultProps = {\n  item: {},\n};\n\nexport const FeedTileToken = ({ item, currentAddress }) => (\n  <div className=\"feed__activity___data\">\n    {item.from === currentAddress\n      ? (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Send} alt=\"Transaction Icon\" />\n          <p>\n            Send\n          </p>\n        </div>\n      )\n      : (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Receive} alt=\"Transaction Icon\" />\n          <p>\n            Receive\n          </p>\n        </div>\n      )\n    }\n    <p className=\"feed__activity__address__function\" title={item.tokenName}>\n      {item.tokenName ? item.tokenName : 'Token'}\n    </p>\n    <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n      {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ${item.tokenSymbol ? item.tokenSymbol : 'Tokens'}`}\n    </p>\n\n    <div className=\"feed__activity__metaData\">\n      <p className=\"feed__activity__address__time\">\n        {timeSince(item.timeStamp * 1000)}\n      </p>\n      <img className=\"feed__activity__address__dataType\" src={Tokens} alt=\"Token Icon\" />\n    </div>\n  </div>\n);\n\nFeedTileToken.propTypes = {\n  item: PropTypes.object,\n};\n\nFeedTileToken.defaultProps = {\n  item: {},\n};\n\nexport const FeedTileTXS = ({ item, currentAddress }) => (\n  <div className=\"feed__activity___data\">\n    {item.from === currentAddress\n      ? (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Send} alt=\"Transaction Icon\" />\n          <p>\n            Send\n          </p>\n        </div>\n      )\n      : (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Receive} alt=\"Transaction Icon\" />\n          <p>\n            Receive\n          </p>\n        </div>\n      )\n    }\n    <p className=\"feed__activity__address__function\">\n      Ethereum\n    </p>\n    <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n      {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ETH`}\n    </p>\n    <div className=\"feed__activity__metaData\">\n      <p className=\"feed__activity__address__time\">\n        {timeSince(item.timeStamp * 1000)}\n      </p>\n      <img src={EthereumLine} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType--ethereum feed__activity__address__dataType\" />\n    </div>\n  </div>\n);\n\nFeedTileTXS.propTypes = {\n  item: PropTypes.object,\n};\n\nFeedTileTXS.defaultProps = {\n  item: {},\n};\n"]},"metadata":{},"sourceType":"module"}