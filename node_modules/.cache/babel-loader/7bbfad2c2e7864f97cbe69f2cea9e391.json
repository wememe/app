{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/FeedTile.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { timeSince } from '../../utils/time';\nimport PrivateActivity from \"../../assets/PrivateActivity.svg\";\nimport Globe from \"../../assets/Globe.svg\";\nimport Image from \"../../assets/Image.svg\";\nimport Save from \"../../assets/Save.svg\";\nimport Delete from \"../../assets/Delete.svg\";\nimport Internal from \"../../assets/Internal.svg\";\nimport EthereumLine from \"../../assets/EthereumLine.svg\";\nimport Send from \"../../assets/Send.svg\";\nimport Receive from \"../../assets/Receive.svg\";\nimport Tokens from \"../../assets/Tokens.svg\";\nimport '../styles/Feed.css';\nexport var FeedTileActivity = function FeedTileActivity(_ref) {\n  var item = _ref.item,\n      isEven = _ref.isEven,\n      verifiedGithub = _ref.verifiedGithub,\n      verifiedTwitter = _ref.verifiedTwitter;\n  return React.createElement(\"div\", {\n    className: \"feed__activity___data \".concat(isEven ? 'darkFeed' : 'lightFeed'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, item.dataType === 'Private' ? React.createElement(\"img\", {\n    src: PrivateActivity,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__amount__image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: Globe,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__amount__image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom saveDelete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.op === 'PUT' ? Save : Delete,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, item.op === 'PUT' ? 'Save' : 'Delete')), React.createElement(\"p\", {\n    className: \"feed__activity__address__function\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, item.dataType === 'Private' ? 'Private' : item.key === 'proof_github' ? 'Github' : item.key === 'proof_twitter' ? 'Twitter' : item.key && (item.key.charAt(0).toUpperCase() + item.key.slice(1)).replace(/([A-Z])/g, ' $1').trim()), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, item.key === 'image' || item.key === 'coverPhoto' ? item.value.image[0].contentUrl && React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(item.value.image[0].contentUrl['/']),\n    className: \"profile__user__picture clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) // ? <img src={Image} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n  : item.dataType === 'Private' ? '*****' : item.key === 'emoji' ? React.createElement(\"span\", {\n    className: \"feed__activity__address__amount__emoji\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value) : item.key === 'proof_github' ? verifiedGithub : item.key === 'proof_twitter' ? verifiedTwitter : typeof item.value === 'object' ? \"\".concat(item.value ? Object.keys(item.value)[0] : '-----') : item.value), React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)));\n};\nFeedTileActivity.propTypes = {\n  item: PropTypes.object,\n  isEven: PropTypes.bool,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string\n};\nFeedTileActivity.defaultProps = {\n  item: {},\n  isEven: false,\n  verifiedGithub: '',\n  verifiedTwitter: ''\n};\nexport var FeedTileInternal = function FeedTileInternal(_ref2) {\n  var item = _ref2.item,\n      isEven = _ref2.isEven,\n      currentAddress = _ref2.currentAddress;\n  return React.createElement(\"div\", {\n    className: \"feed__activity___data \".concat(isEven ? 'darkFeed' : 'lightFeed'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Internal,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), item.from === currentAddress ? React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Send,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Send\")) : React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Receive,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Receive\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__function\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1)), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" ETH\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)));\n};\nFeedTileInternal.propTypes = {\n  item: PropTypes.object,\n  isEven: PropTypes.bool\n};\nFeedTileInternal.defaultProps = {\n  item: {},\n  isEven: false\n};\nexport var FeedTileToken = function FeedTileToken(_ref3) {\n  var item = _ref3.item,\n      isEven = _ref3.isEven,\n      currentAddress = _ref3.currentAddress;\n  return React.createElement(\"div\", {\n    className: \"feed__activity___data \".concat(isEven ? 'darkFeed' : 'lightFeed'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Tokens,\n    alt: \"Token Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })), item.from === currentAddress ? React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Send,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Send\")) : React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Receive,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Receive\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__function\",\n    title: item.tokenName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, item.tokenName ? item.tokenName : 'Token'), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" \").concat(item.tokenSymbol ? item.tokenSymbol : 'Tokens')), React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)));\n};\nFeedTileToken.propTypes = {\n  item: PropTypes.object,\n  isEven: PropTypes.bool\n};\nFeedTileToken.defaultProps = {\n  item: {},\n  isEven: false\n};\nexport var FeedTileTXS = function FeedTileTXS(_ref4) {\n  var item = _ref4.item,\n      isEven = _ref4.isEven,\n      currentAddress = _ref4.currentAddress;\n  return React.createElement(\"div\", {\n    className: \"feed__activity___data \".concat(isEven ? 'darkFeed' : 'lightFeed'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: EthereumLine,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType--ethereum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })), item.from === currentAddress ? React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Send,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Send\")) : React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Receive,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Receive\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__function\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Ethereum\"), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" ETH\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)));\n};\nFeedTileTXS.propTypes = {\n  item: PropTypes.object,\n  isEven: PropTypes.bool\n};\nFeedTileTXS.defaultProps = {\n  item: {},\n  isEven: false\n};","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/FeedTile.jsx"],"names":["React","PropTypes","timeSince","FeedTileActivity","item","isEven","verifiedGithub","verifiedTwitter","dataType","PrivateActivity","Globe","op","Save","Delete","key","charAt","toUpperCase","slice","replace","trim","value","image","contentUrl","Object","keys","timeStamp","propTypes","object","bool","string","defaultProps","FeedTileInternal","currentAddress","Internal","from","Send","Receive","type","Number","toString","substring","FeedTileToken","Tokens","tokenName","tokenSymbol","FeedTileTXS","EthereumLine"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { timeSince } from '../../utils/time';\nimport PrivateActivity from '../../assets/PrivateActivity.svg';\nimport Globe from '../../assets/Globe.svg';\nimport Image from '../../assets/Image.svg';\nimport Save from '../../assets/Save.svg';\nimport Delete from '../../assets/Delete.svg';\n\nimport Internal from '../../assets/Internal.svg';\nimport EthereumLine from '../../assets/EthereumLine.svg';\nimport Send from '../../assets/Send.svg';\nimport Receive from '../../assets/Receive.svg';\nimport Tokens from '../../assets/Tokens.svg';\n\nimport '../styles/Feed.css';\n\nexport const FeedTileActivity = ({ item, isEven, verifiedGithub, verifiedTwitter }) => (\n  <div className={`feed__activity___data ${isEven ? 'darkFeed' : 'lightFeed'}`}>\n    <div className=\"feed__activity__address__dataType\">\n      {item.dataType === 'Private'\n        ? <img src={PrivateActivity} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n        : <img src={Globe} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n      }\n    </div>\n    <div className=\"feed__activity__address__toFrom saveDelete\">\n      <img src={item.op === 'PUT' ? Save : Delete} alt=\"Transaction Icon\" />\n      <p>\n        {item.op === 'PUT' ? 'Save' : 'Delete'}\n      </p>\n    </div>\n    <p className=\"feed__activity__address__function\">\n      {item.dataType === 'Private'\n        ? 'Private'\n        : item.key === 'proof_github'\n          ? 'Github'\n          : item.key === 'proof_twitter'\n            ? 'Twitter'\n            : item.key && (item.key.charAt(0).toUpperCase() + item.key.slice(1)).replace(/([A-Z])/g, ' $1').trim()\n      }\n    </p>\n    <p className=\"feed__activity__address__amount\">\n      {item.key === 'image' || item.key === 'coverPhoto'\n        ? item.value.image[0].contentUrl\n        && <img src={`https://ipfs.infura.io/ipfs/${item.value.image[0].contentUrl['/']}`} className=\"profile__user__picture clearProfPic\" alt=\"profile\" />\n        // ? <img src={Image} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n        : item.dataType === 'Private'\n          ? '*****'\n          : item.key === 'emoji'\n            ? (\n              <span className=\"feed__activity__address__amount__emoji\">\n                {typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value}\n              </span>\n            )\n            : item.key === 'proof_github'\n              ? verifiedGithub\n              : item.key === 'proof_twitter'\n                ? verifiedTwitter\n                : typeof item.value === 'object'\n                  ? `${item.value ? Object.keys(item.value)[0] : '-----'}`\n                  : item.value}\n    </p>\n    <p className=\"feed__activity__address__time\">\n      {timeSince(item.timeStamp * 1000)}\n    </p>\n  </div>\n);\n\nFeedTileActivity.propTypes = {\n  item: PropTypes.object,\n  isEven: PropTypes.bool,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n};\n\nFeedTileActivity.defaultProps = {\n  item: {},\n  isEven: false,\n  verifiedGithub: '',\n  verifiedTwitter: '',\n};\n\nexport const FeedTileInternal = ({ item, isEven, currentAddress }) => (\n  <div className={`feed__activity___data ${isEven ? 'darkFeed' : 'lightFeed'}`}>\n    <div className=\"feed__activity__address__dataType\">\n      <img src={Internal} alt=\"Transaction Icon\" />\n    </div>\n    {item.from === currentAddress\n      ? (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Send} alt=\"Transaction Icon\" />\n          <p>\n            Send\n          </p>\n        </div>\n      )\n      : (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Receive} alt=\"Transaction Icon\" />\n          <p>\n            Receive\n          </p>\n        </div>\n      )\n    }\n    <p className=\"feed__activity__address__function\">\n      {item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1)}\n    </p>\n    <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n      {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ETH`}\n    </p>\n    <p className=\"feed__activity__address__time\">\n      {timeSince(item.timeStamp * 1000)}\n    </p>\n  </div>\n);\n\nFeedTileInternal.propTypes = {\n  item: PropTypes.object,\n  isEven: PropTypes.bool,\n};\n\nFeedTileInternal.defaultProps = {\n  item: {},\n  isEven: false,\n};\n\nexport const FeedTileToken = ({ item, isEven, currentAddress }) => (\n  <div className={`feed__activity___data ${isEven ? 'darkFeed' : 'lightFeed'}`}>\n    <div className=\"feed__activity__address__dataType\">\n      <img src={Tokens} alt=\"Token Icon\" />\n    </div>\n    {item.from === currentAddress\n      ? (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Send} alt=\"Transaction Icon\" />\n          <p>\n            Send\n          </p>\n        </div>\n      )\n      : (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Receive} alt=\"Transaction Icon\" />\n          <p>\n            Receive\n          </p>\n        </div>\n      )\n    }\n    <p className=\"feed__activity__address__function\" title={item.tokenName}>\n      {item.tokenName ? item.tokenName : 'Token'}\n    </p>\n    <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n      {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ${item.tokenSymbol ? item.tokenSymbol : 'Tokens'}`}\n    </p>\n    <p className=\"feed__activity__address__time\">\n      {timeSince(item.timeStamp * 1000)}\n    </p>\n  </div>\n);\n\nFeedTileToken.propTypes = {\n  item: PropTypes.object,\n  isEven: PropTypes.bool,\n};\n\nFeedTileToken.defaultProps = {\n  item: {},\n  isEven: false,\n};\n\nexport const FeedTileTXS = ({ item, isEven, currentAddress }) => (\n  <div className={`feed__activity___data ${isEven ? 'darkFeed' : 'lightFeed'}`}>\n    <div className=\"feed__activity__address__dataType\">\n      <img src={EthereumLine} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType--ethereum\" />\n    </div>\n    {item.from === currentAddress\n      ? (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Send} alt=\"Transaction Icon\" />\n          <p>\n            Send\n          </p>\n        </div>\n      )\n      : (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Receive} alt=\"Transaction Icon\" />\n          <p>\n            Receive\n          </p>\n        </div>\n      )\n    }\n    <p className=\"feed__activity__address__function\">\n      Ethereum\n    </p>\n    <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n      {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ETH`}\n    </p>\n    <p className=\"feed__activity__address__time\">\n      {timeSince(item.timeStamp * 1000)}\n    </p>\n  </div>\n);\n\nFeedTileTXS.propTypes = {\n  item: PropTypes.object,\n  isEven: PropTypes.bool,\n};\n\nFeedTileTXS.defaultProps = {\n  item: {},\n  isEven: false,\n};\n"]},"metadata":{},"sourceType":"module"}