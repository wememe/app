{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/FeedTile.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { timeSince } from '../../utils/time';\nimport PrivateActivity from \"../../assets/PrivateActivity.svg\";\nimport Globe from \"../../assets/Globe.svg\";\nimport Image from \"../../assets/Image.svg\";\nimport Save from \"../../assets/Save.svg\";\nimport Delete from \"../../assets/Delete.svg\";\nimport Internal from \"../../assets/Internal.svg\";\nimport EthereumLine from \"../../assets/EthereumLine.svg\";\nimport Send from \"../../assets/Send.svg\";\nimport Receive from \"../../assets/Receive.svg\";\nimport Tokens from \"../../assets/Tokens.svg\";\nimport '../styles/Feed.css';\nexport var FeedTileActivity = function FeedTileActivity(_ref) {\n  var item = _ref.item,\n      verifiedGithub = _ref.verifiedGithub,\n      verifiedTwitter = _ref.verifiedTwitter;\n  return React.createElement(\"div\", {\n    className: \"feed__activity___data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, item.dataType === 'Private' ? React.createElement(\"img\", {\n    src: PrivateActivity,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__amount__image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: Globe,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__amount__image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom saveDelete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.op === 'PUT' ? Save : Delete,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, item.op === 'PUT' ? 'Save' : 'Delete')), React.createElement(\"p\", {\n    className: \"feed__activity__address__function\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, item.dataType === 'Private' ? 'Private' : item.key === 'proof_github' ? 'Github' : item.key === 'proof_twitter' ? 'Twitter' : item.key && (item.key.charAt(0).toUpperCase() + item.key.slice(1)).replace(/([A-Z])/g, ' $1').trim()), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, item.key === 'image' || item.key === 'coverPhoto' ? item.value && item.value.length > 0 && item.value[0].contentUrl && React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(item.value[0].contentUrl['/']),\n    className: \"feed__activity__image clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) // ? <img src={Image} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n  : item.dataType === 'Private' ? '*****' : item.key === 'emoji' ? React.createElement(\"span\", {\n    className: \"feed__activity__address__amount__emoji\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value) : item.key === 'proof_github' ? verifiedGithub : item.key === 'proof_twitter' ? verifiedTwitter : typeof item.value === 'object' ? \"\".concat(item.value ? Object.keys(item.value)[0] : '-----') : item.value), React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)));\n}; // export const FeedTileActivity = ({ item, isEven, verifiedGithub, verifiedTwitter }) => (\n//   <div className={`feed__activity___data ${isEven ? 'darkFeed' : 'lightFeed'}`}>\n//     <div className=\"feed__activity__address__dataType\">\n//       {item.dataType === 'Private'\n//         ? <img src={PrivateActivity} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n//         : <img src={Globe} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n//       }\n//     </div>\n//     <div className=\"feed__activity__address__toFrom saveDelete\">\n//       <img src={item.op === 'PUT' ? Save : Delete} alt=\"Transaction Icon\" />\n//       <p>\n//         {item.op === 'PUT' ? 'Save' : 'Delete'}\n//       </p>\n//     </div>\n//     <p className=\"feed__activity__address__function\">\n//       {item.dataType === 'Private'\n//         ? 'Private'\n//         : item.key === 'proof_github'\n//           ? 'Github'\n//           : item.key === 'proof_twitter'\n//             ? 'Twitter'\n//             : item.key && (item.key.charAt(0).toUpperCase() + item.key.slice(1)).replace(/([A-Z])/g, ' $1').trim()\n//       }\n//     </p>\n//     <p className=\"feed__activity__address__amount\">\n//       {item.key === 'image' || item.key === 'coverPhoto'\n//         ? (item.value && item.value.length > 0 && item.value[0].contentUrl)\n//         && <img src={`https://ipfs.infura.io/ipfs/${item.value[0].contentUrl['/']}`} className=\"feed__activity__image clearProfPic\" alt=\"profile\" />\n//         // ? <img src={Image} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n//         : item.dataType === 'Private'\n//           ? '*****'\n//           : item.key === 'emoji'\n//             ? (\n//               <span className=\"feed__activity__address__amount__emoji\">\n//                 {typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value}\n//               </span>\n//             )\n//             : item.key === 'proof_github'\n//               ? verifiedGithub\n//               : item.key === 'proof_twitter'\n//                 ? verifiedTwitter\n//                 : typeof item.value === 'object'\n//                   ? `${item.value ? Object.keys(item.value)[0] : '-----'}`\n//                   : item.value}\n//     </p>\n//     <p className=\"feed__activity__address__time\">\n//       {timeSince(item.timeStamp * 1000)}\n//     </p>\n//   </div>\n// );\n\nFeedTileActivity.propTypes = {\n  item: PropTypes.object,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string\n};\nFeedTileActivity.defaultProps = {\n  item: {},\n  verifiedGithub: '',\n  verifiedTwitter: ''\n};\nexport var FeedTileInternal = function FeedTileInternal(_ref2) {\n  var item = _ref2.item,\n      currentAddress = _ref2.currentAddress;\n  return React.createElement(\"div\", {\n    className: \"feed__activity___data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Internal,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), item.from === currentAddress ? React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Send,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Send\")) : React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Receive,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Receive\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__function\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1)), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" ETH\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)));\n};\nFeedTileInternal.propTypes = {\n  item: PropTypes.object\n};\nFeedTileInternal.defaultProps = {\n  item: {}\n};\nexport var FeedTileToken = function FeedTileToken(_ref3) {\n  var item = _ref3.item,\n      currentAddress = _ref3.currentAddress;\n  return React.createElement(\"div\", {\n    className: \"feed__activity___data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Tokens,\n    alt: \"Token Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })), item.from === currentAddress ? React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Send,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Send\")) : React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Receive,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Receive\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__function\",\n    title: item.tokenName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, item.tokenName ? item.tokenName : 'Token'), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" \").concat(item.tokenSymbol ? item.tokenSymbol : 'Tokens')), React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)));\n};\nFeedTileToken.propTypes = {\n  item: PropTypes.object\n};\nFeedTileToken.defaultProps = {\n  item: {}\n};\nexport var FeedTileTXS = function FeedTileTXS(_ref4) {\n  var item = _ref4.item,\n      currentAddress = _ref4.currentAddress;\n  return React.createElement(\"div\", {\n    className: \"feed__activity___data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: EthereumLine,\n    alt: \"Transaction Icon\",\n    className: \"feed__activity__address__dataType--ethereum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  })), item.from === currentAddress ? React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Send,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"Send\")) : React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Receive,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"Receive\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__function\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"Ethereum\"), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" ETH\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)));\n};\nFeedTileTXS.propTypes = {\n  item: PropTypes.object\n};\nFeedTileTXS.defaultProps = {\n  item: {}\n};","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/FeedTile.jsx"],"names":["React","PropTypes","timeSince","FeedTileActivity","item","verifiedGithub","verifiedTwitter","dataType","PrivateActivity","Globe","op","Save","Delete","key","charAt","toUpperCase","slice","replace","trim","value","length","contentUrl","Object","keys","timeStamp","propTypes","object","string","defaultProps","FeedTileInternal","currentAddress","Internal","from","Send","Receive","type","Number","toString","substring","FeedTileToken","Tokens","tokenName","tokenSymbol","FeedTileTXS","EthereumLine"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { timeSince } from '../../utils/time';\nimport PrivateActivity from '../../assets/PrivateActivity.svg';\nimport Globe from '../../assets/Globe.svg';\nimport Image from '../../assets/Image.svg';\nimport Save from '../../assets/Save.svg';\nimport Delete from '../../assets/Delete.svg';\n\nimport Internal from '../../assets/Internal.svg';\nimport EthereumLine from '../../assets/EthereumLine.svg';\nimport Send from '../../assets/Send.svg';\nimport Receive from '../../assets/Receive.svg';\nimport Tokens from '../../assets/Tokens.svg';\n\nimport '../styles/Feed.css';\n\nexport const FeedTileActivity = ({ item, verifiedGithub, verifiedTwitter }) => (\n  <div className=\"feed__activity___data\">\n    <div className=\"feed__activity__address__dataType\">\n      {item.dataType === 'Private'\n        ? <img src={PrivateActivity} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n        : <img src={Globe} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n      }\n    </div>\n    <div className=\"feed__activity__address__toFrom saveDelete\">\n      <img src={item.op === 'PUT' ? Save : Delete} alt=\"Transaction Icon\" />\n      <p>\n        {item.op === 'PUT' ? 'Save' : 'Delete'}\n      </p>\n    </div>\n    <p className=\"feed__activity__address__function\">\n      {item.dataType === 'Private'\n        ? 'Private'\n        : item.key === 'proof_github'\n          ? 'Github'\n          : item.key === 'proof_twitter'\n            ? 'Twitter'\n            : item.key && (item.key.charAt(0).toUpperCase() + item.key.slice(1)).replace(/([A-Z])/g, ' $1').trim()\n      }\n    </p>\n    <p className=\"feed__activity__address__amount\">\n      {item.key === 'image' || item.key === 'coverPhoto'\n        ? (item.value && item.value.length > 0 && item.value[0].contentUrl)\n        && <img src={`https://ipfs.infura.io/ipfs/${item.value[0].contentUrl['/']}`} className=\"feed__activity__image clearProfPic\" alt=\"profile\" />\n        // ? <img src={Image} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n        : item.dataType === 'Private'\n          ? '*****'\n          : item.key === 'emoji'\n            ? (\n              <span className=\"feed__activity__address__amount__emoji\">\n                {typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value}\n              </span>\n            )\n            : item.key === 'proof_github'\n              ? verifiedGithub\n              : item.key === 'proof_twitter'\n                ? verifiedTwitter\n                : typeof item.value === 'object'\n                  ? `${item.value ? Object.keys(item.value)[0] : '-----'}`\n                  : item.value}\n    </p>\n    <p className=\"feed__activity__address__time\">\n      {timeSince(item.timeStamp * 1000)}\n    </p>\n  </div>\n);\n// export const FeedTileActivity = ({ item, isEven, verifiedGithub, verifiedTwitter }) => (\n//   <div className={`feed__activity___data ${isEven ? 'darkFeed' : 'lightFeed'}`}>\n//     <div className=\"feed__activity__address__dataType\">\n//       {item.dataType === 'Private'\n//         ? <img src={PrivateActivity} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n//         : <img src={Globe} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n//       }\n//     </div>\n//     <div className=\"feed__activity__address__toFrom saveDelete\">\n//       <img src={item.op === 'PUT' ? Save : Delete} alt=\"Transaction Icon\" />\n//       <p>\n//         {item.op === 'PUT' ? 'Save' : 'Delete'}\n//       </p>\n//     </div>\n//     <p className=\"feed__activity__address__function\">\n//       {item.dataType === 'Private'\n//         ? 'Private'\n//         : item.key === 'proof_github'\n//           ? 'Github'\n//           : item.key === 'proof_twitter'\n//             ? 'Twitter'\n//             : item.key && (item.key.charAt(0).toUpperCase() + item.key.slice(1)).replace(/([A-Z])/g, ' $1').trim()\n//       }\n//     </p>\n//     <p className=\"feed__activity__address__amount\">\n//       {item.key === 'image' || item.key === 'coverPhoto'\n//         ? (item.value && item.value.length > 0 && item.value[0].contentUrl)\n//         && <img src={`https://ipfs.infura.io/ipfs/${item.value[0].contentUrl['/']}`} className=\"feed__activity__image clearProfPic\" alt=\"profile\" />\n//         // ? <img src={Image} alt=\"Transaction Icon\" className=\"feed__activity__address__amount__image\" />\n//         : item.dataType === 'Private'\n//           ? '*****'\n//           : item.key === 'emoji'\n//             ? (\n//               <span className=\"feed__activity__address__amount__emoji\">\n//                 {typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value}\n//               </span>\n//             )\n//             : item.key === 'proof_github'\n//               ? verifiedGithub\n//               : item.key === 'proof_twitter'\n//                 ? verifiedTwitter\n//                 : typeof item.value === 'object'\n//                   ? `${item.value ? Object.keys(item.value)[0] : '-----'}`\n//                   : item.value}\n//     </p>\n//     <p className=\"feed__activity__address__time\">\n//       {timeSince(item.timeStamp * 1000)}\n//     </p>\n//   </div>\n// );\n\nFeedTileActivity.propTypes = {\n  item: PropTypes.object,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n};\n\nFeedTileActivity.defaultProps = {\n  item: {},\n  verifiedGithub: '',\n  verifiedTwitter: '',\n};\n\nexport const FeedTileInternal = ({ item, currentAddress }) => (\n  <div className=\"feed__activity___data\">\n    <div className=\"feed__activity__address__dataType\">\n      <img src={Internal} alt=\"Transaction Icon\" />\n    </div>\n    {item.from === currentAddress\n      ? (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Send} alt=\"Transaction Icon\" />\n          <p>\n            Send\n          </p>\n        </div>\n      )\n      : (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Receive} alt=\"Transaction Icon\" />\n          <p>\n            Receive\n          </p>\n        </div>\n      )\n    }\n    <p className=\"feed__activity__address__function\">\n      {item.type && item.type.charAt(0).toUpperCase() + item.type.slice(1)}\n    </p>\n    <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n      {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ETH`}\n    </p>\n    <p className=\"feed__activity__address__time\">\n      {timeSince(item.timeStamp * 1000)}\n    </p>\n  </div>\n);\n\nFeedTileInternal.propTypes = {\n  item: PropTypes.object,\n};\n\nFeedTileInternal.defaultProps = {\n  item: {},\n};\n\nexport const FeedTileToken = ({ item, currentAddress }) => (\n  <div className=\"feed__activity___data\">\n    <div className=\"feed__activity__address__dataType\">\n      <img src={Tokens} alt=\"Token Icon\" />\n    </div>\n    {item.from === currentAddress\n      ? (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Send} alt=\"Transaction Icon\" />\n          <p>\n            Send\n          </p>\n        </div>\n      )\n      : (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Receive} alt=\"Transaction Icon\" />\n          <p>\n            Receive\n          </p>\n        </div>\n      )\n    }\n    <p className=\"feed__activity__address__function\" title={item.tokenName}>\n      {item.tokenName ? item.tokenName : 'Token'}\n    </p>\n    <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n      {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ${item.tokenSymbol ? item.tokenSymbol : 'Tokens'}`}\n    </p>\n    <p className=\"feed__activity__address__time\">\n      {timeSince(item.timeStamp * 1000)}\n    </p>\n  </div>\n);\n\nFeedTileToken.propTypes = {\n  item: PropTypes.object,\n};\n\nFeedTileToken.defaultProps = {\n  item: {},\n};\n\nexport const FeedTileTXS = ({ item, currentAddress }) => (\n  <div className=\"feed__activity___data\">\n    <div className=\"feed__activity__address__dataType\">\n      <img src={EthereumLine} alt=\"Transaction Icon\" className=\"feed__activity__address__dataType--ethereum\" />\n    </div>\n    {item.from === currentAddress\n      ? (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Send} alt=\"Transaction Icon\" />\n          <p>\n            Send\n          </p>\n        </div>\n      )\n      : (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Receive} alt=\"Transaction Icon\" />\n          <p>\n            Receive\n          </p>\n        </div>\n      )\n    }\n    <p className=\"feed__activity__address__function\">\n      Ethereum\n    </p>\n    <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n      {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ETH`}\n    </p>\n    <p className=\"feed__activity__address__time\">\n      {timeSince(item.timeStamp * 1000)}\n    </p>\n  </div>\n);\n\nFeedTileTXS.propTypes = {\n  item: PropTypes.object,\n};\n\nFeedTileTXS.defaultProps = {\n  item: {},\n};\n"]},"metadata":{},"sourceType":"module"}