{"ast":null,"code":"'use strict';\n\nvar pull = require('pull-stream');\n\nvar pushable = require('pull-pushable');\n\nvar pullPair = require('pull-pair');\n\nvar batch = require('pull-batch');\n\nmodule.exports = function (reduce, options) {\n  var pair = pullPair();\n  var source = pair.source;\n  var result = pushable();\n  pull(source, batch(Infinity), pull.asyncMap(reduce), pull.collect(function (err, roots) {\n    if (err) {\n      result.end(err);\n      return; // early\n    }\n\n    if (roots.length === 1) {\n      result.push(roots[0]);\n      result.end();\n    } else if (roots.length > 1) {\n      result.end(new Error('expected a maximum of 1 roots and got ' + roots.length));\n    } else {\n      result.end();\n    }\n  }));\n  return {\n    sink: pair.sink,\n    source: result\n  };\n};","map":null,"metadata":{},"sourceType":"script"}