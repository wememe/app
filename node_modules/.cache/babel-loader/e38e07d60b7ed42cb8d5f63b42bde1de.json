{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { store } from '../state/store';\nimport { accountsPromise } from '../state/actions';\nvar address;\nconsole.log(address);\nexport var getAddress = function getAddress() {\n  return (\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _window$web3$eth$acco, returnedAddress, _returnedAddress;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('get address started');\n\n              if (!(typeof window.web3 !== 'undefined')) {\n                _context.next = 15;\n                break;\n              }\n\n              console.log('get check eth');\n\n              if (!window.web3.eth.accounts[0]) {\n                _context.next = 8;\n                break;\n              }\n\n              _window$web3$eth$acco = _slicedToArray(window.web3.eth.accounts, 1);\n              address = _window$web3$eth$acco[0];\n              _context.next = 13;\n              break;\n\n            case 8:\n              _context.next = 10;\n              return accountsPromise;\n\n            case 10:\n              returnedAddress = _context.sent;\n              _returnedAddress = _slicedToArray(returnedAddress, 1);\n              address = _returnedAddress[0];\n\n            case 13:\n              _context.next = 16;\n              break;\n\n            case 15:\n              address = null;\n\n            case 16:\n              store.dispatch({\n                type: 'UPDATE_ADDRESS',\n                currentAddress: address\n              });\n              getAddress();\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }))\n  );\n};\nexport var pollNetworkAndAddress = function pollNetworkAndAddress() {\n  setTimeout(function () {\n    var prevAddress;\n    var currentAddress = typeof window.web3 !== 'undefined' ? window.web3.eth.accounts[0] : ''; // eslint-disable-line no-undef\n\n    console.log('updateThisAddress', currentAddress); // Logged out of MM while logged in to 3Box\n\n    if (currentAddress !== address && currentAddress === undefined && store.getState().threeBox.isLoggedIn) {\n      prevAddress = address;\n      store.dispatch({\n        type: 'HANDLE_LOGGEDOUT_MODAL',\n        loggedOutModal: true\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress: currentAddress\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Logs out of 3Box\n\n\n    if (currentAddress !== address && currentAddress === undefined && store.getState().threeBox.isLoggedIn) {\n      store.dispatch({\n        type: 'HANDLE_LOGGEDOUT_MODAL',\n        loggedOutModal: true\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress: currentAddress\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Switched address\n\n\n    if (currentAddress !== address && typeof currentAddress === 'string' && currentAddress !== prevAddress && address !== undefined && store.getState().threeBox.isLoggedIn) {\n      prevAddress = address;\n      store.dispatch({\n        type: 'HANDLE_SWITCHED_ADDRESS_MODAL',\n        switchedAddressModal: true,\n        prevAddress: prevAddress\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress: currentAddress\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Switched back to previous address\n\n\n    if (currentAddress !== address && typeof currentAddress === 'string' && typeof address === 'string' && store.getState().threeBox.isLoggedIn && currentAddress === prevAddress) {\n      store.dispatch({\n        type: 'HANDLE_SWITCHED_ADDRESS_MODAL',\n        switchedAddressModal: false,\n        prevAddress: ''\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress: currentAddress\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Logged in to MM\n\n\n    if (currentAddress !== address && typeof currentAddress === 'string' && address === undefined && !window.ethereum) {\n      store.dispatch({\n        type: 'HANDLE_WALLET_LOGIN_DETECTED_MODAL',\n        isSignedIntoWallet: true,\n        hasWallet: true\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress: currentAddress\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Logged out of MM while not signed in to 3Box\n\n\n    if (currentAddress !== address && currentAddress === undefined) {\n      store.dispatch({\n        type: 'HANDLE_WALLET_LOGIN_DETECTED_MODAL',\n        isSignedIntoWallet: false,\n        hasWallet: false\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress: currentAddress\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    address = currentAddress;\n    pollNetworkAndAddress();\n  }, 1000);\n};","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/utils/address.js"],"names":["store","accountsPromise","address","console","log","getAddress","window","web3","eth","accounts","returnedAddress","dispatch","type","currentAddress","pollNetworkAndAddress","setTimeout","prevAddress","undefined","getState","threeBox","isLoggedIn","loggedOutModal","localStorage","setItem","switchedAddressModal","ethereum","isSignedIntoWallet","hasWallet"],"mappings":"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","sourcesContent":["import {\n  store,\n} from '../state/store';\nimport {\n  accountsPromise,\n} from '../state/actions';\n\nlet address;\n\nconsole.log(address);\n\nexport const getAddress = () => async () => {\n  console.log('get address started');\n  if (typeof window.web3 !== 'undefined') {\n    console.log('get check eth');\n    if (window.web3.eth.accounts[0]) {\n      [address] = window.web3.eth.accounts;\n    } else {\n      const returnedAddress = await accountsPromise;\n      [address] = returnedAddress;\n    }\n  } else {\n    address = null;\n  }\n  store.dispatch({\n    type: 'UPDATE_ADDRESS',\n    currentAddress: address,\n  });\n  getAddress();\n};\n\nexport const pollNetworkAndAddress = () => {\n  setTimeout(() => {\n    let prevAddress;\n    const currentAddress = typeof window.web3 !== 'undefined' ? window.web3.eth.accounts[0] : ''; // eslint-disable-line no-undef\n    console.log('updateThisAddress', currentAddress);\n\n    // Logged out of MM while logged in to 3Box\n    if (currentAddress !== address &&\n      currentAddress === undefined &&\n      store.getState().threeBox.isLoggedIn) {\n      prevAddress = address;\n      store.dispatch({\n        type: 'HANDLE_LOGGEDOUT_MODAL',\n        loggedOutModal: true,\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Logs out of 3Box\n    if (currentAddress !== address &&\n      currentAddress === undefined &&\n      store.getState().threeBox.isLoggedIn) {\n      store.dispatch({\n        type: 'HANDLE_LOGGEDOUT_MODAL',\n        loggedOutModal: true,\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Switched address\n    if (currentAddress !== address &&\n      typeof currentAddress === 'string' &&\n      currentAddress !== prevAddress &&\n      address !== undefined &&\n      store.getState().threeBox.isLoggedIn) {\n      prevAddress = address;\n      store.dispatch({\n        type: 'HANDLE_SWITCHED_ADDRESS_MODAL',\n        switchedAddressModal: true,\n        prevAddress,\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Switched back to previous address\n    if (currentAddress !== address &&\n      typeof currentAddress === 'string' &&\n      typeof address === 'string' &&\n      store.getState().threeBox.isLoggedIn &&\n      currentAddress === prevAddress\n    ) {\n      store.dispatch({\n        type: 'HANDLE_SWITCHED_ADDRESS_MODAL',\n        switchedAddressModal: false,\n        prevAddress: '',\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Logged in to MM\n    if (currentAddress !== address &&\n      typeof currentAddress === 'string' &&\n      address === undefined &&\n      !window.ethereum) {\n      store.dispatch({\n        type: 'HANDLE_WALLET_LOGIN_DETECTED_MODAL',\n        isSignedIntoWallet: true,\n        hasWallet: true,\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Logged out of MM while not signed in to 3Box\n    if (currentAddress !== address &&\n      currentAddress === undefined) {\n      store.dispatch({\n        type: 'HANDLE_WALLET_LOGIN_DETECTED_MODAL',\n        isSignedIntoWallet: false,\n        hasWallet: false,\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    address = currentAddress;\n    pollNetworkAndAddress();\n  }, 1000);\n};"]},"metadata":{},"sourceType":"module"}