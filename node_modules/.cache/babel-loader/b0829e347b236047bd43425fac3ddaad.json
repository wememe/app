{"ast":null,"code":"'use strict';\n\nvar defineProperty = require('./properties').defineProperty;\n\nvar codes = {};\n[// Unknown Error\n'UNKNOWN_ERROR', // Not implemented\n'NOT_IMPLEMENTED', // Missing new operator to an object\n//  - name: The name of the class\n'MISSING_NEW', // Call exception\n'CALL_EXCEPTION', // Response from a server was invalid\n//   - response: The body of the response\n//'BAD_RESPONSE',\n// Invalid argument (e.g. type) to a function:\n//   - arg: The argument name that was invalid\n//   - value: The value of the argument\n//   - type: The type of the argument\n//   - expected: What was expected\n'INVALID_ARGUMENT', // Missing argument to a function:\n//   - arg: The argument name that is required\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\n'MISSING_ARGUMENT', // Too many arguments\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\n'UNEXPECTED_ARGUMENT', // Unsupported operation\n//   - operation\n'UNSUPPORTED_OPERATION'].forEach(function (code) {\n  defineProperty(codes, code, code);\n});\ndefineProperty(codes, 'throwError', function (message, code, params) {\n  if (!code) {\n    code = codes.UNKNOWN_ERROR;\n  }\n\n  if (!params) {\n    params = {};\n  }\n\n  var messageDetails = [];\n  Object.keys(params).forEach(function (key) {\n    try {\n      messageDetails.push(key + '=' + JSON.stringify(params[key]));\n    } catch (error) {\n      messageDetails.push(key + '=' + JSON.stringify(params[key].toString()));\n    }\n  });\n  var reason = message;\n\n  if (messageDetails.length) {\n    message += ' (' + messageDetails.join(', ') + ')';\n  }\n\n  var error = new Error(message);\n  error.reason = reason;\n  error.code = code;\n  Object.keys(params).forEach(function (key) {\n    error[key] = params[key];\n  });\n  throw error;\n});\ndefineProperty(codes, 'checkNew', function (self, kind) {\n  if (!(self instanceof kind)) {\n    codes.throwError('missing new', codes.MISSING_NEW, {\n      name: kind.name\n    });\n  }\n});\nmodule.exports = codes;","map":null,"metadata":{},"sourceType":"script"}