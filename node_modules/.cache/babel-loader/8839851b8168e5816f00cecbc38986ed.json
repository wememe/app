{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/MyProfile/ActivityHeader.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport networkArray from '../../../utils/networkArray';\nimport '../../styles/Feed.css';\nimport '../../../views/styles/Profile.css';\nimport '../../styles/NetworkArray.css';\n\nvar Activity = function Activity(_ref) {\n  var name = _ref.name,\n      image = _ref.image,\n      feedAddress = _ref.feedAddress;\n  return React.createElement(\"div\", {\n    className: \"feed__activity__context\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, Object.keys(feedAddress)[0] === 'threeBox' && (image.length > 0 && image[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(image[0].contentUrl['/']),\n    className: \"feed__activity__user clear\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(\"h4\", {\n    className: \"feed__activity__user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"3B\")), Object.keys(feedAddress)[0] !== 'threeBox' && React.createElement(\"div\", {\n    className: \"feed__activity__context__network \".concat(networkArray[Math.floor(Math.random() * networkArray.length)]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"0x\"), React.createElement(\"div\", {\n    className: \"feed__activity__address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, Object.keys(feedAddress)[0] === 'threeBox' ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    className: \"feed__activity__address__type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"3Box Profile\")) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, feedAddress.metaData && feedAddress.metaData.name && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"feed__activity__counterParty\",\n    href: \"https://3box.io/\".concat(Object.keys(feedAddress)[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, feedAddress.metaData.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"\".concat(Object.keys(feedAddress)[0].substring(0, 12), \"...\"))), React.createElement(\"p\", {\n    className: \"feed__activity__address__type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Address\")), feedAddress.metaData && feedAddress.metaData.contractDetails && feedAddress.metaData.contractDetails.name && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"feed__activity__counterParty\",\n    href: \"https://etherscan.io/tx/\".concat(Object.keys(feedAddress)[0]),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, feedAddress.metaData.contractDetails.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"\".concat(Object.keys(feedAddress)[0].substring(0, 12), \"...\"))), React.createElement(\"p\", {\n    className: \"feed__activity__address__type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Contract\")), (!feedAddress.metaData || !feedAddress.metaData.contractDetails && !feedAddress.metaData.name) && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://ethstats.io/account/\".concat(Object.keys(feedAddress)[0]),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, Object.keys(feedAddress)[0])), React.createElement(\"p\", {\n    className: \"feed__activity__address__type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Address\")))));\n};\n\nActivity.propTypes = {\n  feedAddress: PropTypes.object,\n  name: PropTypes.string,\n  image: PropTypes.array\n};\nActivity.defaultProps = {\n  feedAddress: {},\n  image: [],\n  name: ''\n};\n\nvar mapState = function mapState(state) {\n  return {\n    name: state.threeBox.name,\n    image: state.threeBox.image\n  };\n};\n\nexport default connect(mapState)(Activity);","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/MyProfile/ActivityHeader.jsx"],"names":["React","PropTypes","connect","networkArray","Activity","name","image","feedAddress","Object","keys","length","contentUrl","Math","floor","random","metaData","substring","contractDetails","propTypes","object","string","array","defaultProps","mapState","state","threeBox"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport networkArray from '../../../utils/networkArray';\nimport '../../styles/Feed.css';\nimport '../../../views/styles/Profile.css';\nimport '../../styles/NetworkArray.css';\n\nconst Activity = ({ name, image, feedAddress }) => (\n  <div className=\"feed__activity__context\">\n    {(Object.keys(feedAddress)[0] === 'threeBox')\n      && (image.length > 0 && image[0].contentUrl\n        ? (\n          <img\n            src={`https://ipfs.infura.io/ipfs/${image[0].contentUrl['/']}`}\n            className=\"feed__activity__user clear\"\n            alt=\"profile\"\n          />)\n        : <h4 className=\"feed__activity__user\">3B</h4>)\n    }\n    {Object.keys(feedAddress)[0] !== 'threeBox'\n      && (\n        <div className={`feed__activity__context__network ${networkArray[Math.floor(Math.random() * networkArray.length)]}`}>\n          0x\n        </div>)\n    }\n    <div className=\"feed__activity__address\">\n      {Object.keys(feedAddress)[0] === 'threeBox'\n        ? (\n          <div>\n            <h4>\n              {name}\n            </h4>\n            <p className=\"feed__activity__address__type\">\n              3Box Profile\n            </p>\n          </div>\n        )\n        : (\n          <React.Fragment>\n            {(feedAddress.metaData && feedAddress.metaData.name)\n              && (\n                <div>\n                  <a className=\"feed__activity__counterParty\" href={`https://3box.io/${Object.keys(feedAddress)[0]}`}>\n                    <h4>\n                      {feedAddress.metaData.name}\n                    </h4>\n                    <p>{`${Object.keys(feedAddress)[0].substring(0, 12)}...`}</p>\n                  </a>\n                  <p className=\"feed__activity__address__type\">\n                    Address\n                  </p>\n                </div>\n              )}\n            {(feedAddress.metaData && feedAddress.metaData.contractDetails && feedAddress.metaData.contractDetails.name)\n              && (\n                <div>\n                  <a className=\"feed__activity__counterParty\" href={`https://etherscan.io/tx/${Object.keys(feedAddress)[0]}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <h4>\n                      {feedAddress.metaData.contractDetails.name}\n                    </h4>\n                    <p>{`${Object.keys(feedAddress)[0].substring(0, 12)}...`}</p>\n                  </a>\n                  <p className=\"feed__activity__address__type\">\n                    Contract\n                  </p>\n                </div>\n              )}\n            {(!feedAddress.metaData || (!feedAddress.metaData.contractDetails && !feedAddress.metaData.name))\n              && (\n                <div>\n                  <a href={`https://ethstats.io/account/${Object.keys(feedAddress)[0]}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <h4>\n                      {Object.keys(feedAddress)[0]}\n                    </h4>\n                  </a>\n                  <p className=\"feed__activity__address__type\">\n                    Address\n                  </p>\n                </div>\n              )}\n          </React.Fragment>\n        )}\n    </div>\n  </div>\n);\n\nActivity.propTypes = {\n  feedAddress: PropTypes.object,\n  name: PropTypes.string,\n  image: PropTypes.array,\n};\n\nActivity.defaultProps = {\n  feedAddress: {},\n  image: [],\n  name: '',\n};\n\nconst mapState = state => ({\n  name: state.threeBox.name,\n  image: state.threeBox.image,\n});\n\nexport default connect(mapState)(Activity);\n"]},"metadata":{},"sourceType":"module"}