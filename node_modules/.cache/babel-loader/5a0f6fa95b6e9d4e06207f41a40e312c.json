{"ast":null,"code":"'use strict';\n\nvar Joi = require('joi').extend(require('joi-multiaddr'));\n\nvar schema = Joi.object().keys({\n  repo: Joi.alternatives().try(Joi.object(), // TODO: schema for IPFS repo\n  Joi.string()).allow(null),\n  repoOwner: Joi.boolean().default(true),\n  preload: Joi.object().keys({\n    enabled: Joi.boolean().default(true),\n    addresses: Joi.array().items(Joi.multiaddr().options({\n      convert: false\n    }))\n  }).allow(null),\n  init: Joi.alternatives().try(Joi.boolean(), Joi.object().keys({\n    bits: Joi.number().integer()\n  })).allow(null),\n  start: Joi.boolean(),\n  local: Joi.boolean(),\n  pass: Joi.string().allow(''),\n  relay: Joi.object().keys({\n    enabled: Joi.boolean(),\n    hop: Joi.object().keys({\n      enabled: Joi.boolean(),\n      active: Joi.boolean()\n    }).allow(null)\n  }).allow(null),\n  EXPERIMENTAL: Joi.object().keys({\n    pubsub: Joi.boolean(),\n    sharding: Joi.boolean(),\n    dht: Joi.boolean()\n  }).allow(null),\n  connectionManager: Joi.object().allow(null),\n  config: Joi.object().keys({\n    Addresses: Joi.object().keys({\n      Swarm: Joi.array().items(Joi.multiaddr().options({\n        convert: false\n      })),\n      API: Joi.multiaddr().options({\n        convert: false\n      }),\n      Gateway: Joi.multiaddr().options({\n        convert: false\n      })\n    }).allow(null),\n    Discovery: Joi.object().keys({\n      MDNS: Joi.object().keys({\n        Enabled: Joi.boolean(),\n        Interval: Joi.number().integer()\n      }).allow(null),\n      webRTCStar: Joi.object().keys({\n        Enabled: Joi.boolean()\n      }).allow(null)\n    }).allow(null),\n    Bootstrap: Joi.array().items(Joi.multiaddr().IPFS().options({\n      convert: false\n    }))\n  }).allow(null),\n  libp2p: Joi.alternatives().try(Joi.func(), Joi.object().keys({\n    modules: Joi.object().allow(null) // TODO: schemas for libp2p modules?\n\n  })).allow(null)\n}).options({\n  allowUnknown: true\n});\n\nmodule.exports.validate = function (config) {\n  return Joi.attempt(config, schema);\n};","map":null,"metadata":{},"sourceType":"script"}