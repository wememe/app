{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kenzo/Desktop/app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/kenzo/Desktop/app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/kenzo/Desktop/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { store } from '../state/store';\nimport { accountsPromise } from '../state/actions';\nvar address;\nexport var initialAddress =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var _window$web3$eth$acco, returnedAddress, _returnedAddress;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof window.web3 !== 'undefined')) {\n              _context.next = 13;\n              break;\n            }\n\n            if (!window.web3.eth.accounts[0]) {\n              _context.next = 6;\n              break;\n            }\n\n            _window$web3$eth$acco = _slicedToArray(window.web3.eth.accounts, 1);\n            address = _window$web3$eth$acco[0];\n            _context.next = 11;\n            break;\n\n          case 6:\n            _context.next = 8;\n            return accountsPromise;\n\n          case 8:\n            returnedAddress = _context.sent;\n            _returnedAddress = _slicedToArray(returnedAddress, 1);\n            address = _returnedAddress[0];\n\n          case 11:\n            _context.next = 14;\n            break;\n\n          case 13:\n            address = null;\n\n          case 14:\n            store.dispatch({\n              type: 'UPDATE_ADDRESS',\n              currentAddress: address\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function initialAddress() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var pollNetworkAndAddress = function pollNetworkAndAddress() {\n  setTimeout(function () {\n    var prevAddress;\n    var currentAddress = typeof window.web3 !== 'undefined' ? window.web3.eth.accounts[0] : ''; // eslint-disable-line no-undef\n    // Logged out of MM while logged in to 3Box\n\n    if (currentAddress !== address && currentAddress === undefined && store.getState().threeBox.isLoggedIn) {\n      prevAddress = address;\n      store.dispatch({\n        type: 'HANDLE_LOGGEDOUT_MODAL',\n        loggedOutModal: true\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress: currentAddress\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Logs out of 3Box\n\n\n    if (currentAddress !== address && currentAddress === undefined && store.getState().threeBox.isLoggedIn) {\n      store.dispatch({\n        type: 'HANDLE_LOGGEDOUT_MODAL',\n        loggedOutModal: true\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress: currentAddress\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Switched address\n\n\n    if (currentAddress !== address && typeof currentAddress === 'string' && currentAddress !== prevAddress && address !== undefined && store.getState().threeBox.isLoggedIn) {\n      prevAddress = address;\n      store.dispatch({\n        type: 'HANDLE_SWITCHED_ADDRESS_MODAL',\n        switchedAddressModal: true,\n        prevAddress: prevAddress\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress: currentAddress\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Switched back to previous address\n\n\n    if (currentAddress !== address && typeof currentAddress === 'string' && typeof address === 'string' && store.getState().threeBox.isLoggedIn && currentAddress === prevAddress) {\n      store.dispatch({\n        type: 'HANDLE_SWITCHED_ADDRESS_MODAL',\n        switchedAddressModal: false,\n        prevAddress: ''\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress: currentAddress\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Logged in to MM\n\n\n    if (currentAddress !== address && typeof currentAddress === 'string' && address === undefined && !window.ethereum) {\n      store.dispatch({\n        type: 'HANDLE_WALLET_LOGIN_DETECTED_MODAL',\n        isSignedIntoWallet: true,\n        hasWallet: true\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress: currentAddress\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    } // Logged out of MM while not signed in to 3Box\n\n\n    if (currentAddress !== address && currentAddress === undefined) {\n      store.dispatch({\n        type: 'HANDLE_WALLET_LOGIN_DETECTED_MODAL',\n        isSignedIntoWallet: false,\n        hasWallet: false\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress: currentAddress\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    address = currentAddress;\n    pollNetworkAndAddress();\n  }, 1000);\n};","map":{"version":3,"sources":["/Users/kenzo/Desktop/app/src/utils/address.js"],"names":["store","accountsPromise","address","initialAddress","window","web3","eth","accounts","returnedAddress","dispatch","type","currentAddress","pollNetworkAndAddress","setTimeout","prevAddress","undefined","getState","threeBox","isLoggedIn","loggedOutModal","localStorage","setItem","switchedAddressModal","ethereum","isSignedIntoWallet","hasWallet"],"mappings":";;;AAAA,SACEA,KADF,QAEO,gBAFP;AAGA,SACEC,eADF,QAEO,kBAFP;AAIA,IAAIC,OAAJ;AAEA,OAAO,IAAMC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBACxB,OAAOC,MAAM,CAACC,IAAd,KAAuB,WADC;AAAA;AAAA;AAAA;;AAAA,iBAEtBD,MAAM,CAACC,IAAP,CAAYC,GAAZ,CAAgBC,QAAhB,CAAyB,CAAzB,CAFsB;AAAA;AAAA;AAAA;;AAAA,mDAGZH,MAAM,CAACC,IAAP,CAAYC,GAAZ,CAAgBC,QAHJ;AAGvBL,YAAAA,OAHuB;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAKMD,eALN;;AAAA;AAKlBO,YAAAA,eALkB;AAAA,8CAMZA,eANY;AAMvBN,YAAAA,OANuB;;AAAA;AAAA;AAAA;;AAAA;AAS1BA,YAAAA,OAAO,GAAG,IAAV;;AAT0B;AAW5BF,YAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,cAAAA,IAAI,EAAE,gBADO;AAEbC,cAAAA,cAAc,EAAET;AAFH,aAAf;;AAX4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdC,cAAc;AAAA;AAAA;AAAA,GAApB;AAiBP,OAAO,IAAMS,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AACzCC,EAAAA,UAAU,CAAC,YAAM;AACf,QAAIC,WAAJ;AACA,QAAMH,cAAc,GAAG,OAAOP,MAAM,CAACC,IAAd,KAAuB,WAAvB,GAAqCD,MAAM,CAACC,IAAP,CAAYC,GAAZ,CAAgBC,QAAhB,CAAyB,CAAzB,CAArC,GAAmE,EAA1F,CAFe,CAE+E;AAE9F;;AACA,QAAII,cAAc,KAAKT,OAAnB,IACFS,cAAc,KAAKI,SADjB,IAEFf,KAAK,CAACgB,QAAN,GAAiBC,QAAjB,CAA0BC,UAF5B,EAEwC;AACtCJ,MAAAA,WAAW,GAAGZ,OAAd;AACAF,MAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,wBADO;AAEbS,QAAAA,cAAc,EAAE;AAFH,OAAf;AAIAnB,MAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,gBADO;AAEbC,QAAAA,cAAc,EAAdA;AAFa,OAAf;AAIAP,MAAAA,MAAM,CAACgB,YAAP,CAAoBC,OAApB,CAA4B,gBAA5B,EAA8CV,cAA9C;AACD,KAlBc,CAoBf;;;AACA,QAAIA,cAAc,KAAKT,OAAnB,IACFS,cAAc,KAAKI,SADjB,IAEFf,KAAK,CAACgB,QAAN,GAAiBC,QAAjB,CAA0BC,UAF5B,EAEwC;AACtClB,MAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,wBADO;AAEbS,QAAAA,cAAc,EAAE;AAFH,OAAf;AAIAnB,MAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,gBADO;AAEbC,QAAAA,cAAc,EAAdA;AAFa,OAAf;AAIAP,MAAAA,MAAM,CAACgB,YAAP,CAAoBC,OAApB,CAA4B,gBAA5B,EAA8CV,cAA9C;AACD,KAjCc,CAmCf;;;AACA,QAAIA,cAAc,KAAKT,OAAnB,IACF,OAAOS,cAAP,KAA0B,QADxB,IAEFA,cAAc,KAAKG,WAFjB,IAGFZ,OAAO,KAAKa,SAHV,IAIFf,KAAK,CAACgB,QAAN,GAAiBC,QAAjB,CAA0BC,UAJ5B,EAIwC;AACtCJ,MAAAA,WAAW,GAAGZ,OAAd;AACAF,MAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,+BADO;AAEbY,QAAAA,oBAAoB,EAAE,IAFT;AAGbR,QAAAA,WAAW,EAAXA;AAHa,OAAf;AAKAd,MAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,gBADO;AAEbC,QAAAA,cAAc,EAAdA;AAFa,OAAf;AAIAP,MAAAA,MAAM,CAACgB,YAAP,CAAoBC,OAApB,CAA4B,gBAA5B,EAA8CV,cAA9C;AACD,KApDc,CAsDf;;;AACA,QAAIA,cAAc,KAAKT,OAAnB,IACF,OAAOS,cAAP,KAA0B,QADxB,IAEF,OAAOT,OAAP,KAAmB,QAFjB,IAGFF,KAAK,CAACgB,QAAN,GAAiBC,QAAjB,CAA0BC,UAHxB,IAIFP,cAAc,KAAKG,WAJrB,EAKE;AACAd,MAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,+BADO;AAEbY,QAAAA,oBAAoB,EAAE,KAFT;AAGbR,QAAAA,WAAW,EAAE;AAHA,OAAf;AAKAd,MAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,gBADO;AAEbC,QAAAA,cAAc,EAAdA;AAFa,OAAf;AAIAP,MAAAA,MAAM,CAACgB,YAAP,CAAoBC,OAApB,CAA4B,gBAA5B,EAA8CV,cAA9C;AACD,KAvEc,CAyEf;;;AACA,QAAIA,cAAc,KAAKT,OAAnB,IACF,OAAOS,cAAP,KAA0B,QADxB,IAEFT,OAAO,KAAKa,SAFV,IAGF,CAACX,MAAM,CAACmB,QAHV,EAGoB;AAClBvB,MAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,oCADO;AAEbc,QAAAA,kBAAkB,EAAE,IAFP;AAGbC,QAAAA,SAAS,EAAE;AAHE,OAAf;AAKAzB,MAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,gBADO;AAEbC,QAAAA,cAAc,EAAdA;AAFa,OAAf;AAIAP,MAAAA,MAAM,CAACgB,YAAP,CAAoBC,OAApB,CAA4B,gBAA5B,EAA8CV,cAA9C;AACD,KAxFc,CA0Ff;;;AACA,QAAIA,cAAc,KAAKT,OAAnB,IACFS,cAAc,KAAKI,SADrB,EACgC;AAC9Bf,MAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,oCADO;AAEbc,QAAAA,kBAAkB,EAAE,KAFP;AAGbC,QAAAA,SAAS,EAAE;AAHE,OAAf;AAKAzB,MAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,gBADO;AAEbC,QAAAA,cAAc,EAAdA;AAFa,OAAf;AAIAP,MAAAA,MAAM,CAACgB,YAAP,CAAoBC,OAApB,CAA4B,gBAA5B,EAA8CV,cAA9C;AACD;;AAEDT,IAAAA,OAAO,GAAGS,cAAV;AACAC,IAAAA,qBAAqB;AACtB,GA3GS,EA2GP,IA3GO,CAAV;AA4GD,CA7GM","sourcesContent":["import {\n  store,\n} from '../state/store';\nimport {\n  accountsPromise,\n} from '../state/actions';\n\nlet address;\n\nexport const initialAddress = async () => {\n  if (typeof window.web3 !== 'undefined') {\n    if (window.web3.eth.accounts[0]) {\n      [address] = window.web3.eth.accounts;\n    } else {\n      const returnedAddress = await accountsPromise;\n      [address] = returnedAddress;\n    }\n  } else {\n    address = null;\n  }\n  store.dispatch({\n    type: 'UPDATE_ADDRESS',\n    currentAddress: address,\n  });\n};\n\nexport const pollNetworkAndAddress = () => {\n  setTimeout(() => {\n    let prevAddress;\n    const currentAddress = typeof window.web3 !== 'undefined' ? window.web3.eth.accounts[0] : ''; // eslint-disable-line no-undef\n\n    // Logged out of MM while logged in to 3Box\n    if (currentAddress !== address &&\n      currentAddress === undefined &&\n      store.getState().threeBox.isLoggedIn) {\n      prevAddress = address;\n      store.dispatch({\n        type: 'HANDLE_LOGGEDOUT_MODAL',\n        loggedOutModal: true,\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Logs out of 3Box\n    if (currentAddress !== address &&\n      currentAddress === undefined &&\n      store.getState().threeBox.isLoggedIn) {\n      store.dispatch({\n        type: 'HANDLE_LOGGEDOUT_MODAL',\n        loggedOutModal: true,\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Switched address\n    if (currentAddress !== address &&\n      typeof currentAddress === 'string' &&\n      currentAddress !== prevAddress &&\n      address !== undefined &&\n      store.getState().threeBox.isLoggedIn) {\n      prevAddress = address;\n      store.dispatch({\n        type: 'HANDLE_SWITCHED_ADDRESS_MODAL',\n        switchedAddressModal: true,\n        prevAddress,\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Switched back to previous address\n    if (currentAddress !== address &&\n      typeof currentAddress === 'string' &&\n      typeof address === 'string' &&\n      store.getState().threeBox.isLoggedIn &&\n      currentAddress === prevAddress\n    ) {\n      store.dispatch({\n        type: 'HANDLE_SWITCHED_ADDRESS_MODAL',\n        switchedAddressModal: false,\n        prevAddress: '',\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Logged in to MM\n    if (currentAddress !== address &&\n      typeof currentAddress === 'string' &&\n      address === undefined &&\n      !window.ethereum) {\n      store.dispatch({\n        type: 'HANDLE_WALLET_LOGIN_DETECTED_MODAL',\n        isSignedIntoWallet: true,\n        hasWallet: true,\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    // Logged out of MM while not signed in to 3Box\n    if (currentAddress !== address &&\n      currentAddress === undefined) {\n      store.dispatch({\n        type: 'HANDLE_WALLET_LOGIN_DETECTED_MODAL',\n        isSignedIntoWallet: false,\n        hasWallet: false,\n      });\n      store.dispatch({\n        type: 'UPDATE_ADDRESS',\n        currentAddress,\n      });\n      window.localStorage.setItem('userEthAddress', currentAddress);\n    }\n\n    address = currentAddress;\n    pollNetworkAndAddress();\n  }, 1000);\n};"]},"metadata":{},"sourceType":"module"}