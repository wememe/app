{"ast":null,"code":"'use strict';\n\nvar waterfall = require('async/waterfall');\n\nvar map = require('async/map');\n\nvar UnixFs = require('ipfs-unixfs');\n\nvar _require = require('./utils'),\n    traverseTo = _require.traverseTo,\n    loadNode = _require.loadNode,\n    formatCid = _require.formatCid,\n    FILE_SEPARATOR = _require.FILE_SEPARATOR,\n    FILE_TYPES = _require.FILE_TYPES;\n\nvar defaultOptions = {\n  long: false,\n  cidBase: 'base58btc',\n  unsorted: false\n};\n\nmodule.exports = function (ipfs) {\n  return function mfsLs(path, options, callback) {\n    if (typeof path === 'function') {\n      callback = path;\n      path = FILE_SEPARATOR;\n      options = {};\n    }\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    options = Object.assign({}, defaultOptions, options);\n    options.long = options.l || options.long;\n    waterfall([function (cb) {\n      return traverseTo(ipfs, path, {}, cb);\n    }, function (result, cb) {\n      var meta = UnixFs.unmarshal(result.node.data);\n\n      if (meta.type === 'directory') {\n        map(result.node.links, function (link, next) {\n          waterfall([function (done) {\n            return loadNode(ipfs, link, done);\n          }, function (node, done) {\n            var meta = UnixFs.unmarshal(node.data);\n            done(null, {\n              name: link.name,\n              type: meta.type,\n              hash: formatCid(node.multihash, options.cidBase),\n              size: meta.fileSize() || 0\n            });\n          }], next);\n        }, cb);\n      } else {\n        cb(null, [{\n          name: result.name,\n          type: meta.type,\n          hash: formatCid(result.node.multihash, options.cidBase),\n          size: meta.fileSize() || 0\n        }]);\n      }\n    }, // https://github.com/ipfs/go-ipfs/issues/5181\n    function (files, cb) {\n      if (options.unsorted) {\n        return cb(null, files);\n      }\n\n      return cb(null, files.sort(function (a, b) {\n        return b.name.localeCompare(a.name);\n      }));\n    }, // https://github.com/ipfs/go-ipfs/issues/5026\n    function (files, cb) {\n      return cb(null, files.map(function (file) {\n        if (FILE_TYPES.hasOwnProperty(file.type)) {\n          file.type = FILE_TYPES[file.type];\n        }\n\n        if (!options.long) {\n          file.type = 0;\n          file.size = 0;\n          file.hash = '';\n        }\n\n        return file;\n      }));\n    }], callback);\n  };\n};","map":null,"metadata":{},"sourceType":"script"}