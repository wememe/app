{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar AccessController =\n/*#__PURE__*/\nfunction () {\n  function AccessController() {\n    _classCallCheck(this, AccessController);\n\n    this._access = {\n      admin: [],\n      write: [],\n      read: [] // Not used atm\n\n    };\n  }\n  /* Overridable functions */\n\n\n  _createClass(AccessController, [{\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(address) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function load(_x) {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  }, {\n    key: \"save\",\n    value: function () {\n      var _save = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n    /* Properties */\n\n  }, {\n    key: \"add\",\n\n    /* Public Methods */\n    value: function add(access, key) {\n      // if(!Object.keys(this._access).includes(access))\n      //   throw new Error(`unknown access level: ${access}`)\n      // if (!this._access[access].includes(key))\n      //   this._access[access].push(key)\n      // TODO: uniques only\n      switch (access) {\n        case 'admin':\n          this._access.admin.push(key);\n\n          break;\n\n        case 'write':\n          this._access.write.push(key);\n\n          break;\n\n        case 'read':\n          this._access.read.push(key);\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(access, key) {\n      var without = function without(arr, e) {\n        var reducer = function reducer(res, val) {\n          if (val !== key) res.push(val);\n          return res;\n        };\n\n        return arr.reduce(reducer, []);\n      }; // if(!Object.keys(this._access).includes(access))\n      //   throw new Error(`unknown access level: ${access}`)\n      // if (this._access[access].includes(key))\n      //   this._access[access] = without(this._access[access], key)\n\n\n      switch (access) {\n        case 'admin':\n          this._access.admin = without(this._access.admin, key);\n          break;\n\n        case 'write':\n          this._access.write = without(this._access.write, key);\n          break;\n\n        case 'read':\n          this._access.read = without(this._access.read, key);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"admin\",\n    get: function get() {\n      return this._access.admin;\n    }\n  }, {\n    key: \"write\",\n    get: function get() {\n      // Both admins and write keys can write\n      return this._access.write.concat(this._access.admin);\n    } // Not used atm\n\n  }, {\n    key: \"read\",\n    get: function get() {\n      return this._access.read;\n    }\n  }]);\n\n  return AccessController;\n}();\n\nmodule.exports = AccessController;","map":null,"metadata":{},"sourceType":"script"}