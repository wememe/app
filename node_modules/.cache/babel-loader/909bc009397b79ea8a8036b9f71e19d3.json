{"ast":null,"code":"import _defineProperty from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport contractMap from 'eth-contract-metadata';\nimport { toChecksumAddress } from 'ethereumjs-util';\nimport abiDecoder from 'abi-decoder';\nimport { store } from './store';\nimport * as routes from '../utils/routes';\nimport history from '../history';\n\nvar stripEndQuotes = function stripEndQuotes(s) {\n  var t = s.length;\n  if (s.charAt(0) === '\"') s = s.substring(1, t--);\n  if (s.charAt(--t) === '\"') s = s.substring(0, t);\n  return s;\n};\n\nexport var checkWeb3Wallet = function checkWeb3Wallet() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var cp, isToshi, isCipher, isMetaMask, currentWallet;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cp = typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null; // eslint-disable-line no-undef\n\n                if (cp) {\n                  isToshi = !!cp.isToshi;\n                  isCipher = !!cp.isCipher;\n                  isMetaMask = !!cp.isMetaMask;\n\n                  if (isToshi) {\n                    currentWallet = 'isToshi';\n                  } else if (isCipher) {\n                    currentWallet = 'isCipher';\n                  } else if (isMetaMask) {\n                    currentWallet = 'isMetaMask';\n                  }\n                }\n\n                dispatch({\n                  type: 'CHECK_WALLET',\n                  hasWallet: typeof window.web3 !== 'undefined',\n                  // eslint-disable-line no-undef\n                  showDownloadBanner: typeof window.web3 === 'undefined',\n                  // eslint-disable-line no-undef\n                  mobileWalletRequiredModal: typeof window.web3 === 'undefined',\n                  // eslint-disable-line no-undef\n                  currentWallet: currentWallet\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var accountsPromise = new Promise(function (resolve, reject) {\n  try {\n    if (window.web3) {\n      window.web3.eth.getAccounts(function (e, accountsFound) {\n        // eslint-disable-line no-undef\n        if (e != null) {\n          reject(e);\n        } else {\n          resolve(accountsFound);\n        }\n      });\n    } else {\n      console.error('You must have web3 to continue');\n    }\n  } catch (err) {\n    console.error(err);\n  }\n}); // inject for breaking change\n\nexport var requestAccess = function requestAccess(directLogin) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                _context2.prev = 1;\n                window.web3 = new Web3(ethereum); // eslint-disable-line no-undef\n\n                dispatch({\n                  type: 'HANDLE_ACCESS_MODAL',\n                  allowAccessModal: true,\n                  directLogin: directLogin\n                });\n                _context2.next = 6;\n                return window.ethereum.enable();\n\n              case 6:\n                accounts = _context2.sent;\n\n                if (accounts) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                _context2.next = 10;\n                return accountsPromise;\n\n              case 10:\n                _context2.t0 = _context2.sent;\n                _context2.next = 14;\n                break;\n\n              case 13:\n                _context2.t0 = accounts;\n\n              case 14:\n                accounts = _context2.t0;\n                window.localStorage.setItem('userEthAddress', accounts[0]);\n                dispatch({\n                  type: 'UPDATE_ADDRESSES',\n                  isSignedIntoWallet: accounts.length > 0 || store.getState().threeBox.currentWallet === 'isToshi',\n                  isLoggedIn: accounts && Box.isLoggedIn(accounts[0]),\n                  // eslint-disable-line no-undef\n                  accountAddress: accounts[0],\n                  allowAccessModal: false,\n                  currentAddress: accounts[0]\n                });\n                _context2.next = 24;\n                break;\n\n              case 19:\n                _context2.prev = 19;\n                _context2.t1 = _context2[\"catch\"](1);\n                console.error(_context2.t1);\n                history.push(routes.LANDING);\n                dispatch({\n                  type: 'HANDLE_DENIED_ACCESS_MODAL',\n                  accessDeniedModal: true,\n                  allowAccessModal: false,\n                  isSignedIntoWallet: accounts.length > 0 || store.getState().threeBox.currentWallet === 'isToshi'\n                });\n\n              case 24:\n                _context2.next = 27;\n                break;\n\n              case 26:\n                if (window.web3) {\n                  // eslint-disable-line no-undef\n                  window.web3 = new Web3(web3.currentProvider); // eslint-disable-line no-undef\n\n                  accounts = window.web3.eth.accounts; // eslint-disable-line no-undef\n\n                  window.localStorage.setItem('userEthAddress', accounts[0]);\n                  dispatch({\n                    type: 'UPDATE_ADDRESSES',\n                    isSignedIntoWallet: accounts.length > 0 || store.getState().threeBox.currentWallet === 'isToshi',\n                    isLoggedIn: accounts && Box.isLoggedIn(accounts[0]),\n                    // eslint-disable-line no-undef\n                    currentAddress: accounts[0]\n                  });\n                } else {\n                  console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 19]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}; // if has web3 wallet\n\nexport var checkNetwork = function checkNetwork() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var checkNetworkFunc, currentNetwork, prevPrevNetwork, prevNetwork, shouldShowSwitchNetwork;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                checkNetworkFunc = new Promise(function (resolve) {\n                  window.web3.version.getNetwork(function (err, netId) {\n                    // eslint-disable-line no-undef\n                    switch (netId) {\n                      case '1':\n                        resolve('Main');\n                        break;\n\n                      case '2':\n                        resolve('Morder');\n                        break;\n\n                      case '3':\n                        resolve('Ropsten');\n                        break;\n\n                      case '4':\n                        resolve('Rinkeby');\n                        break;\n\n                      case '42':\n                        resolve('Kovan');\n                        break;\n\n                      default:\n                        resolve('Unknown');\n                    }\n                  });\n                }); // // check network, compatible with old & new v of MetaMask\n\n                if (!window.web3.eth.net) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 4;\n                return window.web3.eth.net.getNetworkType() // eslint-disable-line no-undef\n                .then(function (network) {\n                  currentNetwork = network;\n                });\n\n              case 4:\n                _context3.next = 8;\n                break;\n\n              case 6:\n                _context3.next = 8;\n                return checkNetworkFunc.then(function (network) {\n                  currentNetwork = network;\n                });\n\n              case 8:\n                prevPrevNetwork = window.localStorage.getItem('prevNetwork'); // eslint-disable-line no-undef\n\n                prevNetwork = window.localStorage.getItem('currentNetwork'); // eslint-disable-line no-undef\n\n                shouldShowSwitchNetwork = window.localStorage.getItem('shouldShowSwitchNetwork'); // eslint-disable-line no-undef\n\n                window.localStorage.setItem('prevPrevNetwork', prevPrevNetwork); // eslint-disable-line no-undef\n\n                window.localStorage.setItem('prevNetwork', prevNetwork); // eslint-disable-line no-undef\n\n                window.localStorage.setItem('currentNetwork', currentNetwork); // eslint-disable-line no-undef\n\n                if (prevNetwork && prevNetwork !== currentNetwork && store.getState().threeBox.isLoggedIn && shouldShowSwitchNetwork === 'true') {\n                  window.localStorage.setItem('shouldShowSwitchNetwork', false); // eslint-disable-line no-undef\n\n                  dispatch({\n                    type: 'DIFFERENT_NETWORK',\n                    showDifferentNetworkModal: true,\n                    currentNetwork: currentNetwork,\n                    prevNetwork: prevNetwork,\n                    prevPrevNetwork: prevPrevNetwork\n                  });\n                } else {\n                  window.localStorage.setItem('shouldShowSwitchNetwork', true); // eslint-disable-line no-undef\n\n                  dispatch({\n                    type: 'UPDATE_NETWORK',\n                    currentNetwork: currentNetwork,\n                    prevNetwork: prevNetwork,\n                    prevPrevNetwork: prevPrevNetwork\n                  });\n                }\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getBox = function getBox(fromSignIn) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var consentGiven, opts, box, memberSince;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                dispatch({\n                  type: 'HANDLE_CONSENT_MODAL',\n                  provideConsent: true\n                });\n\n                consentGiven = function consentGiven() {\n                  if (fromSignIn) history.push(\"/\".concat(store.getState().threeBox.currentAddress || store.getState().threeBox.accountAddress, \"/\").concat(routes.ACTIVITY));\n                  dispatch({\n                    type: 'LOADING_3BOX'\n                  });\n                  dispatch({\n                    type: 'LOADING_ACTIVITY'\n                  });\n                }; // onSyncDone only happens on first openBox so only run\n                // this when a user hasn't signed out and signed back in again\n\n\n                if (!store.getState().threeBox.hasSignedOut) {\n                  // initialize onSyncDone process\n                  dispatch({\n                    type: 'APP_SYNC',\n                    onSyncFinished: false,\n                    isSyncing: false\n                  });\n                }\n\n                opts = {\n                  consentCallback: consentGiven\n                };\n                _context4.prev = 4;\n                _context4.next = 7;\n                return Box // eslint-disable-line no-undef\n                .openBox(store.getState().threeBox.accountAddress || store.getState().threeBox.currentAddress, window.web3.currentProvider, // eslint-disable-line no-undef\n                opts);\n\n              case 7:\n                box = _context4.sent;\n                dispatch({\n                  type: 'UPDATE_THREEBOX',\n                  ifFetchingThreeBox: false,\n                  isLoggedIn: true,\n                  box: box\n                }); // onSyncDone only happens on first openBox so only run\n                // this when a user hasn't signed out and signed back in again\n\n                if (!store.getState().threeBox.hasSignedOut) {\n                  // start onSyncDone loading animation\n                  dispatch({\n                    type: 'APP_SYNC',\n                    onSyncFinished: false,\n                    isSyncing: true\n                  });\n                }\n\n                _context4.next = 12;\n                return store.getState().threeBox.box.public.get('memberSince');\n\n              case 12:\n                memberSince = _context4.sent;\n                box.onSyncDone(function () {\n                  var publicActivity = store.getState().threeBox.box.public.log;\n                  var privateActivity = store.getState().threeBox.box.private.log;\n\n                  if (!privateActivity.length && !publicActivity.length) {\n                    dispatch({\n                      type: 'HANDLE_ONBOARDING_MODAL',\n                      onBoardingModal: true\n                    });\n                    var date = Date.now();\n                    var dateJoined = new Date(date);\n                    var memberSinceDate = \"\".concat(dateJoined.getMonth() + 1, \"/\").concat(dateJoined.getDate(), \"/\").concat(dateJoined.getFullYear());\n                    store.getState().threeBox.box.public.set('memberSince', dateJoined);\n                    dispatch({\n                      type: 'GET_PUBLIC_MEMBERSINCE',\n                      memberSince: memberSinceDate\n                    });\n                    history.push(\"/\".concat(store.getState().threeBox.currentAddress, \"/\").concat(routes.EDIT));\n                  } else if (!memberSince && (privateActivity.length || publicActivity.length)) {\n                    store.getState().threeBox.box.public.set('memberSince', 'Alpha');\n                  }\n\n                  dispatch({\n                    type: 'UPDATE_THREEBOX',\n                    ifFetchingThreeBox: false,\n                    isLoggedIn: true,\n                    box: box\n                  }); // call data with new box object from onSyncDone\n\n                  dispatch({\n                    type: 'APP_SYNC',\n                    onSyncFinished: true,\n                    isSyncing: true\n                  });\n                });\n                _context4.next = 19;\n                break;\n\n              case 16:\n                _context4.prev = 16;\n                _context4.t0 = _context4[\"catch\"](4);\n                dispatch({\n                  type: 'FAILED_LOADING_3BOX',\n                  errorMessage: _context4.t0,\n                  showErrorModal: true,\n                  provideConsent: false\n                });\n\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[4, 16]]);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getActivity = function getActivity(publicProfileAddress) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        var activity, feed, publicActivity, privateActivity, feedByAddress, imageElFor, checkedAddresses;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                dispatch({\n                  type: 'LOADING_ACTIVITY'\n                });\n\n                if (!publicProfileAddress) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                _context6.next = 5;\n                return ThreeBoxActivity.get(publicProfileAddress);\n\n              case 5:\n                activity = _context6.sent;\n                _context6.next = 11;\n                break;\n\n              case 8:\n                _context6.next = 10;\n                return ThreeBoxActivity.get(store.getState().threeBox.currentAddress);\n\n              case 10:\n                activity = _context6.sent;\n\n              case 11:\n                // add datatype\n                activity.internal = activity.internal.map(function (object) {\n                  return Object.assign({\n                    dataType: 'Internal'\n                  }, object);\n                });\n                activity.txs = activity.txs.map(function (object) {\n                  return Object.assign({\n                    dataType: 'Txs'\n                  }, object);\n                });\n                activity.token = activity.token.map(function (object) {\n                  return Object.assign({\n                    dataType: 'Token'\n                  }, object);\n                });\n\n                if (!publicProfileAddress) {\n                  _context6.next = 18;\n                  break;\n                }\n\n                feed = activity.internal.concat(activity.txs).concat(activity.token);\n                _context6.next = 27;\n                break;\n\n              case 18:\n                _context6.next = 20;\n                return store.getState().threeBox.box.public.log;\n\n              case 20:\n                publicActivity = _context6.sent;\n                _context6.next = 23;\n                return store.getState().threeBox.box.private.log;\n\n              case 23:\n                privateActivity = _context6.sent;\n                publicActivity = publicActivity.map(function (object) {\n                  object.timeStamp = object.timeStamp && object.timeStamp.toString().substring(0, 10);\n                  return Object.assign({\n                    dataType: 'Public'\n                  }, object);\n                });\n                privateActivity = privateActivity.map(function (object) {\n                  object.timeStamp = object.timeStamp && object.timeStamp.toString().substring(0, 10);\n                  return Object.assign({\n                    dataType: 'Private'\n                  }, object);\n                });\n                feed = activity.internal.concat(activity.txs).concat(activity.token).concat(publicActivity).concat(privateActivity);\n\n              case 27:\n                // if timestamp is undefined, give it the timestamp of the previous entry\n                feed.map(function (item, i) {\n                  var feedItem = item;\n\n                  if (!feedItem.timeStamp) {\n                    var deletedTime = parseInt(feed[i - 1].timeStamp, 10) + 1;\n                    feedItem.timeStamp = deletedTime.toString();\n                  }\n\n                  return feedItem;\n                });\n                feed.sort(function (a, b) {\n                  return b.timeStamp - a.timeStamp;\n                }); // order feed chronologically and by currentAddress\n\n                feedByAddress = [];\n                feed.forEach(function (item) {\n                  var othersAddress;\n\n                  if (publicProfileAddress) {\n                    othersAddress = item.from.toLowerCase() === store.getState().threeBox.publicProfileAddress.toLowerCase() ? item.to : item.from;\n                  } else {\n                    othersAddress = (item.from && item.from.toLowerCase()) === store.getState().threeBox.currentAddress.toLowerCase() ? item.to : item.from;\n                  }\n\n                  if (feedByAddress.length > 0 && Object.keys(feedByAddress[feedByAddress.length - 1])[0] === othersAddress) {\n                    feedByAddress[feedByAddress.length - 1][othersAddress].push(item);\n                  } else if (feedByAddress.length > 0 && Object.keys(feedByAddress[feedByAddress.length - 1])[0] === 'threeBox' && (item.dataType === 'Public' || item.dataType === 'Private')) {\n                    feedByAddress[feedByAddress.length - 1].threeBox.push(item);\n                  } else if (item.dataType === 'Public' || item.dataType === 'Private') {\n                    feedByAddress.push({\n                      threeBox: [item]\n                    });\n                  } else {\n                    feedByAddress.push(_defineProperty({}, othersAddress, [item]));\n                  }\n                });\n\n                imageElFor = function imageElFor(address) {\n                  var contractMetaData = contractMap[toChecksumAddress(address)];\n\n                  if (!contractMetaData || !('logo' in contractMetaData)) {\n                    return false;\n                  } // this isnt necessary\n\n\n                  var fileName = contractMetaData.logo;\n                  var path = \"/contractIcons/\".concat(fileName);\n                  var contractImg = document.createElement('img');\n                  contractImg.src = path;\n                  contractImg.style.width = '100%';\n                  return [contractImg, contractMetaData];\n                };\n\n                checkedAddresses = {};\n                feedByAddress.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref6 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee5(txGroup, i) {\n                    var otherAddress, metaData, contractData, code, graphqlQueryObject, contractArray, name, image;\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            otherAddress = Object.keys(txGroup)[0];\n                            metaData = {};\n                            console.log(txGroup); // txGroup.map((lineItem, index) => abiDecoder.decodeMethod(txGroup[otherAddress][index].input));\n\n                            code = web3.eth.getCode(otherAddress, function (err, transactionHash) {\n                              // eslint-disable-line no-undef\n                              if (!err) {\n                                console.log(transactionHash);\n                              }\n                            });\n\n                            if (code !== '0x') {\n                              // then address is contract\n                              console.log(code);\n                              fetch(\"https://api.etherscan.io/api?module=contract&action=getabi&address=\".concat(otherAddress, \"&apikey=3VTI9D585DCX4RD4QSP3MYWKACCIVZID23\")).then(function (response) {\n                                if (response.status !== 200) {\n                                  console.log(\"Looks like there was a problem. Status Code: \".concat(response.status));\n                                  return;\n                                } // Examine the text in the response\n\n\n                                response.json().then(function (data) {\n                                  contractData = data.result;\n                                  console.log(typeof contractData);\n                                  console.log(data); // console.log(typeof stripEndQuotes(data.result));\n                                  // abiDecoder.addABI(stripEndQuotes(data.result));\n                                });\n                              }).catch(function (err) {\n                                console.log('Fetch Error :-S', err);\n                              });\n                            }\n\n                            if (checkedAddresses[otherAddress]) {\n                              _context5.next = 23;\n                              break;\n                            }\n\n                            _context5.prev = 6;\n                            graphqlQueryObject = \"\\n          {\\n            profile(id: \\\"\".concat(otherAddress, \"\\\") {\\n              name\\n              image\\n            }\\n          }\\n          \");\n                            _context5.next = 10;\n                            return Box.profileGraphQL(graphqlQueryObject);\n\n                          case 10:\n                            metaData = _context5.sent;\n                            _context5.next = 16;\n                            break;\n\n                          case 13:\n                            _context5.prev = 13;\n                            _context5.t0 = _context5[\"catch\"](6);\n                            console.log(_context5.t0);\n\n                          case 16:\n                            contractArray = imageElFor(otherAddress);\n                            name = metaData.profile && metaData.profile.name;\n                            image = metaData.profile && metaData.profile.image;\n                            checkedAddresses[otherAddress] = {\n                              name: name,\n                              image: image,\n                              contractImg: contractArray[0],\n                              contractDetails: contractArray[1],\n                              contractData: contractData\n                            };\n                            feedByAddress[i].metaData = {\n                              name: name,\n                              image: image,\n                              contractImg: contractArray[0],\n                              contractDetails: contractArray[1],\n                              contractData: contractData\n                            };\n                            _context5.next = 25;\n                            break;\n\n                          case 23:\n                            metaData = checkedAddresses[otherAddress];\n                            feedByAddress[i].metaData = metaData;\n\n                          case 25:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5, this, [[6, 13]]);\n                  }));\n\n                  return function (_x6, _x7) {\n                    return _ref6.apply(this, arguments);\n                  };\n                }()); // feedByAddress.map(txGroup)\n\n                if (publicProfileAddress) {\n                  dispatch({\n                    type: 'GET_PUBLIC_PROFILE_ACTIVITY',\n                    publicProfileActivity: feedByAddress,\n                    ifFetchingActivity: false\n                  });\n                } else {\n                  dispatch({\n                    type: 'UPDATE_ACTIVITY',\n                    feedByAddress: feedByAddress,\n                    ifFetchingActivity: false,\n                    isLoggedIn: true\n                  });\n                }\n\n                _context6.next = 40;\n                break;\n\n              case 37:\n                _context6.prev = 37;\n                _context6.t0 = _context6[\"catch\"](0);\n                dispatch({\n                  type: 'FAILED_LOADING_ACTIVITY',\n                  feedByAddress: [],\n                  ifFetchingActivity: false,\n                  errorMessage: _context6.t0,\n                  showErrorModal: true,\n                  provideConsent: false\n                });\n\n              case 40:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 37]]);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getProfile = function getProfile(profileAddress) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(dispatch) {\n        var publicProfile, publicVerifiedAccounts;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                dispatch({\n                  type: 'LOADING_PUBLIC_PROFILE',\n                  isLoadingPublicProfile: true\n                });\n                _context7.next = 4;\n                return Box.getProfile(profileAddress);\n\n              case 4:\n                publicProfile = _context7.sent;\n\n                if (!(Object.entries(publicProfile).length > 0)) {\n                  _context7.next = 11;\n                  break;\n                }\n\n                _context7.next = 8;\n                return Box.getVerifiedAccounts(publicProfile);\n\n              case 8:\n                _context7.t0 = _context7.sent;\n                _context7.next = 12;\n                break;\n\n              case 11:\n                _context7.t0 = {\n                  // eslint-disable-line no-undef\n                  github: null,\n                  twitter: null\n                };\n\n              case 12:\n                publicVerifiedAccounts = _context7.t0;\n                dispatch({\n                  type: 'GET_PUBLIC_PROFILE',\n                  publicGithub: publicVerifiedAccounts.github && publicVerifiedAccounts.github.username,\n                  publicTwitter: publicVerifiedAccounts.twitter && publicVerifiedAccounts.twitter.username,\n                  publicDescription: publicProfile.description,\n                  publicLocation: publicProfile.location,\n                  publicWebsite: publicProfile.website,\n                  publicMemberSince: publicProfile.memberSince,\n                  publicJob: publicProfile.job,\n                  publicSchool: publicProfile.school,\n                  publicDegree: publicProfile.degree,\n                  publicMajor: publicProfile.major,\n                  publicYear: publicProfile.year,\n                  publicEmployer: publicProfile.employer,\n                  publicCoverPhoto: publicProfile.coverPhoto,\n                  publicImage: publicProfile.image,\n                  publicName: publicProfile.name,\n                  publicEmoji: publicProfile.emoji,\n                  publicStatus: publicProfile.status\n                });\n                dispatch({\n                  type: 'LOADING_PUBLIC_PROFILE',\n                  isLoadingPublicProfile: false\n                });\n                _context7.next = 20;\n                break;\n\n              case 17:\n                _context7.prev = 17;\n                _context7.t1 = _context7[\"catch\"](0);\n                console.error(_context7.t1);\n\n              case 20:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 17]]);\n      }));\n\n      return function (_x8) {\n        return _ref7.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getProfileData = function getProfileData(type, key) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref8 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(dispatch) {\n        var keyUppercase, keyToAdd, typeUppercase;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                keyUppercase = key.toUpperCase();\n                _context8.next = 4;\n                return store.getState().threeBox.box[type].get(key);\n\n              case 4:\n                keyToAdd = _context8.sent;\n                typeUppercase = type.toUpperCase();\n                dispatch(_defineProperty({\n                  type: \"GET_\".concat(typeUppercase, \"_\").concat(keyUppercase)\n                }, key, keyToAdd));\n                _context8.next = 12;\n                break;\n\n              case 9:\n                _context8.prev = 9;\n                _context8.t0 = _context8[\"catch\"](0);\n                console.error(_context8.t0);\n\n              case 12:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[0, 9]]);\n      }));\n\n      return function (_x9) {\n        return _ref8.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getPublicDID = function getPublicDID() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref9 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(dispatch) {\n        var did;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                _context9.next = 3;\n                return store.getState().threeBox.box.verified.DID();\n\n              case 3:\n                did = _context9.sent;\n                dispatch({\n                  type: 'GET_PUBLIC_DID',\n                  did: did\n                });\n                _context9.next = 10;\n                break;\n\n              case 7:\n                _context9.prev = 7;\n                _context9.t0 = _context9[\"catch\"](0);\n                console.error(_context9.t0);\n\n              case 10:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[0, 7]]);\n      }));\n\n      return function (_x10) {\n        return _ref9.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getPublicMemberSince = function getPublicMemberSince() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref10 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(dispatch) {\n        var date, memberSince, memberSinceDate;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return store.getState().threeBox.box.public.get('memberSince');\n\n              case 2:\n                date = _context10.sent;\n\n                if (date === 'Alpha') {\n                  memberSinceDate = date;\n                } else if (date) {\n                  memberSince = new Date(date);\n                  memberSinceDate = \"\".concat(memberSince.getMonth() + 1, \"/\").concat(memberSince.getDate(), \"/\").concat(memberSince.getFullYear());\n                }\n\n                dispatch({\n                  type: 'GET_PUBLIC_MEMBERSINCE',\n                  memberSince: memberSinceDate\n                });\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      return function (_x11) {\n        return _ref10.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getVerifiedPublicGithub = function getVerifiedPublicGithub() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref11 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11(dispatch) {\n        var verifiedGithub;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.prev = 0;\n                _context11.next = 3;\n                return store.getState().threeBox.box.verified.github();\n\n              case 3:\n                verifiedGithub = _context11.sent;\n                dispatch({\n                  type: 'GET_VERIFIED_PUBLIC_GITHUB',\n                  verifiedGithub: verifiedGithub.username\n                });\n                _context11.next = 10;\n                break;\n\n              case 7:\n                _context11.prev = 7;\n                _context11.t0 = _context11[\"catch\"](0);\n                console.error(_context11.t0);\n\n              case 10:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[0, 7]]);\n      }));\n\n      return function (_x12) {\n        return _ref11.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getVerifiedPublicTwitter = function getVerifiedPublicTwitter() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref12 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(dispatch) {\n        var verifiedTwitter;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.prev = 0;\n                _context12.next = 3;\n                return store.getState().threeBox.box.verified.twitter();\n\n              case 3:\n                verifiedTwitter = _context12.sent;\n                dispatch({\n                  type: 'GET_VERIFIED_PUBLIC_TWITTER',\n                  verifiedTwitter: verifiedTwitter.username\n                });\n                _context12.next = 10;\n                break;\n\n              case 7:\n                _context12.prev = 7;\n                _context12.t0 = _context12[\"catch\"](0);\n                console.error(_context12.t0);\n\n              case 10:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[0, 7]]);\n      }));\n\n      return function (_x13) {\n        return _ref12.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var handleSignOut = function handleSignOut() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref13 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                if (store.getState().threeBox.isLoggedIn) {\n                  if (store.getState().threeBox.box) store.getState().threeBox.box.logout();\n                  dispatch({\n                    type: 'HANDLE_SIGNOUT',\n                    isLoggedIn: false\n                  });\n                }\n\n                history.push(routes.LANDING);\n\n              case 2:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      return function (_x14) {\n        return _ref13.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var copyToClipBoard = function copyToClipBoard(type, message) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref14 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee14(dispatch) {\n        var textArea;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                try {\n                  textArea = document.createElement('textarea');\n\n                  if (type === 'did') {\n                    textArea.value = message;\n                  } else if (type === 'profile') {\n                    textArea.value = \"https://www.3box.io/\".concat(store.getState().threeBox.currentAddress);\n                  }\n\n                  document.body.appendChild(textArea);\n                  textArea.focus({\n                    preventScroll: true\n                  });\n                  textArea.select();\n                  document.execCommand('copy');\n                  setTimeout(function () {\n                    dispatch({\n                      type: 'COPY_SUCCESSFUL',\n                      copySuccessful: true\n                    });\n                  }, 1);\n                  setTimeout(function () {\n                    dispatch({\n                      type: 'COPY_SUCCESSFUL',\n                      copySuccessful: false\n                    });\n                  }, 2000);\n                  document.body.removeChild(textArea);\n                } catch (err) {\n                  console.error('Unable to copy', err);\n                }\n\n              case 1:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      return function (_x15) {\n        return _ref14.apply(this, arguments);\n      };\n    }()\n  );\n}; // feed.forEach((item) => {\n//   const othersAddress = item.from === store.getState().threeBox.currentAddress ? item.to : item.from;\n//   if (feedByAddress.length > 0 &&\n//     Object.keys(feedByAddress[feedByAddress.length - 1])[0] === othersAddress) {\n//     feedByAddress[feedByAddress.length - 1][othersAddress].push(item);\n//   } else if (feedByAddress.length > 0 && Object.keys(feedByAddress[feedByAddress.length - 1])[0] === 'threeBox' && (item.dataType === 'Public' || item.dataType === 'Private')) {\n//     feedByAddress[feedByAddress.length - 1].threeBox.push(item);\n//   } else if (item.dataType === 'Public' || item.dataType === 'Private') {\n//     feedByAddress.push({\n//       threeBox: [item],\n//     });\n//   } else {\n//     feedByAddress.push({\n//       [othersAddress]: [item],\n//     });\n//   }\n// });","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/state/actions.js"],"names":["contractMap","toChecksumAddress","abiDecoder","store","routes","history","stripEndQuotes","s","t","length","charAt","substring","checkWeb3Wallet","dispatch","cp","window","web3","currentProvider","isToshi","isCipher","isMetaMask","currentWallet","type","hasWallet","showDownloadBanner","mobileWalletRequiredModal","accountsPromise","Promise","resolve","reject","eth","getAccounts","e","accountsFound","console","error","err","requestAccess","directLogin","ethereum","Web3","allowAccessModal","enable","accounts","localStorage","setItem","isSignedIntoWallet","getState","threeBox","isLoggedIn","Box","accountAddress","currentAddress","push","LANDING","accessDeniedModal","log","checkNetwork","checkNetworkFunc","version","getNetwork","netId","net","getNetworkType","then","network","currentNetwork","prevPrevNetwork","getItem","prevNetwork","shouldShowSwitchNetwork","showDifferentNetworkModal","getBox","fromSignIn","provideConsent","consentGiven","ACTIVITY","hasSignedOut","onSyncFinished","isSyncing","opts","consentCallback","openBox","box","ifFetchingThreeBox","public","get","memberSince","onSyncDone","publicActivity","privateActivity","private","onBoardingModal","date","Date","now","dateJoined","memberSinceDate","getMonth","getDate","getFullYear","set","EDIT","errorMessage","showErrorModal","getActivity","publicProfileAddress","ThreeBoxActivity","activity","internal","map","object","Object","assign","dataType","txs","token","feed","concat","timeStamp","toString","item","i","feedItem","deletedTime","parseInt","sort","a","b","feedByAddress","forEach","othersAddress","from","toLowerCase","to","keys","imageElFor","address","contractMetaData","fileName","logo","path","contractImg","document","createElement","src","style","width","checkedAddresses","txGroup","otherAddress","metaData","code","getCode","transactionHash","fetch","response","status","json","data","contractData","result","catch","graphqlQueryObject","profileGraphQL","contractArray","name","profile","image","contractDetails","publicProfileActivity","ifFetchingActivity","getProfile","profileAddress","isLoadingPublicProfile","publicProfile","entries","getVerifiedAccounts","github","twitter","publicVerifiedAccounts","publicGithub","username","publicTwitter","publicDescription","description","publicLocation","location","publicWebsite","website","publicMemberSince","publicJob","job","publicSchool","school","publicDegree","degree","publicMajor","major","publicYear","year","publicEmployer","employer","publicCoverPhoto","coverPhoto","publicImage","publicName","publicEmoji","emoji","publicStatus","getProfileData","key","keyUppercase","toUpperCase","keyToAdd","typeUppercase","getPublicDID","verified","DID","did","getPublicMemberSince","getVerifiedPublicGithub","verifiedGithub","getVerifiedPublicTwitter","verifiedTwitter","handleSignOut","logout","copyToClipBoard","message","textArea","value","body","appendChild","focus","preventScroll","select","execCommand","setTimeout","copySuccessful","removeChild"],"mappings":"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","sourcesContent":["import contractMap from 'eth-contract-metadata';\nimport {\n  toChecksumAddress,\n} from 'ethereumjs-util';\nimport abiDecoder from 'abi-decoder';\n\nimport {\n  store,\n} from './store';\nimport * as routes from '../utils/routes';\nimport history from '../history';\n\nconst stripEndQuotes = (s) => {\n  let t = s.length;\n  if (s.charAt(0) === '\"') s = s.substring(1, t--);\n  if (s.charAt(--t) === '\"') s = s.substring(0, t);\n  return s;\n};\n\nexport const checkWeb3Wallet = () => async (dispatch) => {\n  const cp = typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null; // eslint-disable-line no-undef\n\n  let isToshi;\n  let isCipher;\n  let isMetaMask;\n  let currentWallet;\n\n  if (cp) {\n    isToshi = !!cp.isToshi;\n    isCipher = !!cp.isCipher;\n    isMetaMask = !!cp.isMetaMask;\n\n    if (isToshi) {\n      currentWallet = 'isToshi';\n    } else if (isCipher) {\n      currentWallet = 'isCipher';\n    } else if (isMetaMask) {\n      currentWallet = 'isMetaMask';\n    }\n  }\n\n  dispatch({\n    type: 'CHECK_WALLET',\n    hasWallet: typeof window.web3 !== 'undefined', // eslint-disable-line no-undef\n    showDownloadBanner: typeof window.web3 === 'undefined', // eslint-disable-line no-undef\n    mobileWalletRequiredModal: typeof window.web3 === 'undefined', // eslint-disable-line no-undef\n    currentWallet,\n  });\n};\n\nexport const accountsPromise = new Promise((resolve, reject) => {\n  try {\n    if (window.web3) {\n      window.web3.eth.getAccounts((e, accountsFound) => { // eslint-disable-line no-undef\n        if (e != null) {\n          reject(e);\n        } else {\n          resolve(accountsFound);\n        }\n      });\n    } else {\n      console.error('You must have web3 to continue');\n    }\n  } catch (err) {\n    console.error(err);\n  }\n});\n\n// inject for breaking change\nexport const requestAccess = directLogin => async (dispatch) => {\n  let accounts;\n\n  if (window.ethereum) { // eslint-disable-line no-undef\n    try {\n      window.web3 = new Web3(ethereum); // eslint-disable-line no-undef\n      dispatch({\n        type: 'HANDLE_ACCESS_MODAL',\n        allowAccessModal: true,\n        directLogin,\n      });\n\n      accounts = await window.ethereum.enable(); // eslint-disable-line no-undef\n      accounts = !accounts ? await accountsPromise : accounts;\n      window.localStorage.setItem('userEthAddress', accounts[0]);\n\n      dispatch({\n        type: 'UPDATE_ADDRESSES',\n        isSignedIntoWallet: accounts.length > 0 || store.getState().threeBox.currentWallet === 'isToshi',\n        isLoggedIn: accounts && Box.isLoggedIn(accounts[0]), // eslint-disable-line no-undef\n        accountAddress: accounts[0],\n        allowAccessModal: false,\n        currentAddress: accounts[0],\n      });\n    } catch (error) {\n      console.error(error);\n      history.push(routes.LANDING);\n      dispatch({\n        type: 'HANDLE_DENIED_ACCESS_MODAL',\n        accessDeniedModal: true,\n        allowAccessModal: false,\n        isSignedIntoWallet: accounts.length > 0 || store.getState().threeBox.currentWallet === 'isToshi',\n      });\n    }\n  } else if (window.web3) { // eslint-disable-line no-undef\n    window.web3 = new Web3(web3.currentProvider); // eslint-disable-line no-undef\n\n    accounts = window.web3.eth.accounts; // eslint-disable-line no-undef\n    window.localStorage.setItem('userEthAddress', accounts[0]);\n\n    dispatch({\n      type: 'UPDATE_ADDRESSES',\n      isSignedIntoWallet: accounts.length > 0 || store.getState().threeBox.currentWallet === 'isToshi',\n      isLoggedIn: accounts && Box.isLoggedIn(accounts[0]), // eslint-disable-line no-undef\n      currentAddress: accounts[0],\n    });\n  } else {\n    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n  }\n};\n\n// if has web3 wallet\nexport const checkNetwork = () => async (dispatch) => {\n  const checkNetworkFunc = new Promise((resolve) => {\n    window.web3.version.getNetwork((err, netId) => { // eslint-disable-line no-undef\n      switch (netId) {\n        case '1':\n          resolve('Main');\n          break;\n        case '2':\n          resolve('Morder');\n          break;\n        case '3':\n          resolve('Ropsten');\n          break;\n        case '4':\n          resolve('Rinkeby');\n          break;\n        case '42':\n          resolve('Kovan');\n          break;\n        default:\n          resolve('Unknown');\n      }\n    });\n  });\n\n  // // check network, compatible with old & new v of MetaMask\n  let currentNetwork;\n  if (window.web3.eth.net) { // eslint-disable-line no-undef\n    await window.web3.eth.net.getNetworkType() // eslint-disable-line no-undef\n      .then((network) => {\n        currentNetwork = network;\n      });\n  } else {\n    await checkNetworkFunc.then((network) => {\n      currentNetwork = network;\n    });\n  }\n\n  const prevPrevNetwork = window.localStorage.getItem('prevNetwork'); // eslint-disable-line no-undef\n  const prevNetwork = window.localStorage.getItem('currentNetwork'); // eslint-disable-line no-undef\n\n  const shouldShowSwitchNetwork = window.localStorage.getItem('shouldShowSwitchNetwork'); // eslint-disable-line no-undef\n  window.localStorage.setItem('prevPrevNetwork', prevPrevNetwork); // eslint-disable-line no-undef\n  window.localStorage.setItem('prevNetwork', prevNetwork); // eslint-disable-line no-undef\n  window.localStorage.setItem('currentNetwork', currentNetwork); // eslint-disable-line no-undef\n\n  if (prevNetwork && (prevNetwork !== currentNetwork) && store.getState().threeBox.isLoggedIn && shouldShowSwitchNetwork === 'true') {\n    window.localStorage.setItem('shouldShowSwitchNetwork', false); // eslint-disable-line no-undef\n    dispatch({\n      type: 'DIFFERENT_NETWORK',\n      showDifferentNetworkModal: true,\n      currentNetwork,\n      prevNetwork,\n      prevPrevNetwork,\n    });\n  } else {\n    window.localStorage.setItem('shouldShowSwitchNetwork', true); // eslint-disable-line no-undef\n    dispatch({\n      type: 'UPDATE_NETWORK',\n      currentNetwork,\n      prevNetwork,\n      prevPrevNetwork,\n    });\n  }\n};\n\nexport const getBox = fromSignIn => async (dispatch) => {\n  dispatch({\n    type: 'HANDLE_CONSENT_MODAL',\n    provideConsent: true,\n  });\n\n  const consentGiven = () => {\n    if (fromSignIn) history.push(`/${store.getState().threeBox.currentAddress || store.getState().threeBox.accountAddress}/${routes.ACTIVITY}`);\n    dispatch({\n      type: 'LOADING_3BOX',\n    });\n    dispatch({\n      type: 'LOADING_ACTIVITY',\n    });\n  };\n\n  // onSyncDone only happens on first openBox so only run\n  // this when a user hasn't signed out and signed back in again\n  if (!store.getState().threeBox.hasSignedOut) {\n    // initialize onSyncDone process\n    dispatch({\n      type: 'APP_SYNC',\n      onSyncFinished: false,\n      isSyncing: false,\n    });\n  }\n\n  const opts = {\n    consentCallback: consentGiven,\n  };\n\n  try {\n    const box = await Box // eslint-disable-line no-undef\n      .openBox(\n        store.getState().threeBox.accountAddress || store.getState().threeBox.currentAddress,\n        window.web3.currentProvider, // eslint-disable-line no-undef\n        opts,\n      );\n\n    dispatch({\n      type: 'UPDATE_THREEBOX',\n      ifFetchingThreeBox: false,\n      isLoggedIn: true,\n      box,\n    });\n\n    // onSyncDone only happens on first openBox so only run\n    // this when a user hasn't signed out and signed back in again\n    if (!store.getState().threeBox.hasSignedOut) {\n      // start onSyncDone loading animation\n      dispatch({\n        type: 'APP_SYNC',\n        onSyncFinished: false,\n        isSyncing: true,\n      });\n    }\n\n    const memberSince = await store.getState().threeBox.box.public.get('memberSince');\n\n    box.onSyncDone(() => {\n      const publicActivity = store.getState().threeBox.box.public.log;\n      const privateActivity = store.getState().threeBox.box.private.log;\n\n      if (!privateActivity.length && !publicActivity.length) {\n        dispatch({\n          type: 'HANDLE_ONBOARDING_MODAL',\n          onBoardingModal: true,\n        });\n        const date = Date.now();\n        const dateJoined = new Date(date);\n        const memberSinceDate = `${(dateJoined.getMonth() + 1)}/${dateJoined.getDate()}/${dateJoined.getFullYear()}`;\n        store.getState().threeBox.box.public.set('memberSince', dateJoined);\n        dispatch({\n          type: 'GET_PUBLIC_MEMBERSINCE',\n          memberSince: memberSinceDate,\n        });\n        history.push(`/${store.getState().threeBox.currentAddress}/${routes.EDIT}`);\n      } else if (!memberSince && (privateActivity.length || publicActivity.length)) {\n        store.getState().threeBox.box.public.set('memberSince', 'Alpha');\n      }\n\n      dispatch({\n        type: 'UPDATE_THREEBOX',\n        ifFetchingThreeBox: false,\n        isLoggedIn: true,\n        box,\n      });\n\n      // call data with new box object from onSyncDone\n      dispatch({\n        type: 'APP_SYNC',\n        onSyncFinished: true,\n        isSyncing: true,\n      });\n    });\n  } catch (err) {\n    dispatch({\n      type: 'FAILED_LOADING_3BOX',\n      errorMessage: err,\n      showErrorModal: true,\n      provideConsent: false,\n    });\n  }\n};\n\nexport const getActivity = publicProfileAddress => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'LOADING_ACTIVITY',\n    });\n\n    let activity;\n\n    if (publicProfileAddress) {\n      activity = await ThreeBoxActivity.get(publicProfileAddress); // eslint-disable-line no-undef\n    } else {\n      activity = await ThreeBoxActivity.get(store.getState().threeBox.currentAddress); // eslint-disable-line no-undef\n    }\n\n    // add datatype\n    activity.internal = activity.internal.map(object => Object.assign({\n      dataType: 'Internal',\n    }, object));\n    activity.txs = activity.txs.map(object => Object.assign({\n      dataType: 'Txs',\n    }, object));\n    activity.token = activity.token.map(object => Object.assign({\n      dataType: 'Token',\n    }, object));\n\n    let feed;\n\n    if (publicProfileAddress) {\n      feed = activity.internal\n        .concat(activity.txs)\n        .concat(activity.token);\n    } else {\n      let publicActivity = await store.getState().threeBox.box.public.log;\n      let privateActivity = await store.getState().threeBox.box.private.log;\n\n      publicActivity = publicActivity.map((object) => {\n        object.timeStamp = object.timeStamp && object.timeStamp.toString().substring(0, 10);\n        return Object.assign({\n          dataType: 'Public',\n        }, object);\n      });\n      privateActivity = privateActivity.map((object) => {\n        object.timeStamp = object.timeStamp && object.timeStamp.toString().substring(0, 10);\n        return Object.assign({\n          dataType: 'Private',\n        }, object);\n      });\n\n      feed = activity.internal\n        .concat(activity.txs)\n        .concat(activity.token)\n        .concat(publicActivity)\n        .concat(privateActivity);\n    }\n\n    // if timestamp is undefined, give it the timestamp of the previous entry\n    feed.map((item, i) => {\n      const feedItem = item;\n      if (!feedItem.timeStamp) {\n        const deletedTime = parseInt(feed[i - 1].timeStamp, 10) + 1;\n        feedItem.timeStamp = deletedTime.toString();\n      }\n      return feedItem;\n    });\n\n    feed.sort((a, b) => b.timeStamp - a.timeStamp);\n\n    // order feed chronologically and by currentAddress\n    const feedByAddress = [];\n    feed.forEach((item) => {\n      let othersAddress;\n\n      if (publicProfileAddress) {\n        othersAddress = item.from.toLowerCase() ===\n          store.getState().threeBox.publicProfileAddress.toLowerCase() ?\n          item.to :\n          item.from;\n      } else {\n        othersAddress = (item.from && item.from.toLowerCase()) ===\n          store.getState().threeBox.currentAddress.toLowerCase() ?\n          item.to :\n          item.from;\n      }\n\n      if (feedByAddress.length > 0 &&\n        Object.keys(feedByAddress[feedByAddress.length - 1])[0] === othersAddress) {\n        feedByAddress[feedByAddress.length - 1][othersAddress].push(item);\n      } else if (feedByAddress.length > 0 && Object.keys(feedByAddress[feedByAddress.length - 1])[0] === 'threeBox' && (item.dataType === 'Public' || item.dataType === 'Private')) {\n        feedByAddress[feedByAddress.length - 1].threeBox.push(item);\n      } else if (item.dataType === 'Public' || item.dataType === 'Private') {\n        feedByAddress.push({\n          threeBox: [item],\n        });\n      } else {\n        feedByAddress.push({\n          [othersAddress]: [item],\n        });\n      }\n    });\n\n    const imageElFor = (address) => {\n      const contractMetaData = contractMap[toChecksumAddress(address)];\n      if (!contractMetaData || (!('logo' in contractMetaData))) {\n        return false;\n      }\n      // this isnt necessary\n      const fileName = contractMetaData.logo;\n      const path = `/contractIcons/${fileName}`;\n      const contractImg = document.createElement('img');\n      contractImg.src = path;\n      contractImg.style.width = '100%';\n      return [contractImg, contractMetaData];\n    };\n\n    let checkedAddresses = {};\n\n    feedByAddress.map(async (txGroup, i) => {\n      const otherAddress = Object.keys(txGroup)[0];\n      let metaData = {};\n      let contractData;\n\n      console.log(txGroup);\n      // txGroup.map((lineItem, index) => abiDecoder.decodeMethod(txGroup[otherAddress][index].input));\n\n      const code = web3.eth.getCode(otherAddress, (err, transactionHash) => { // eslint-disable-line no-undef\n        if (!err) {\n          console.log(transactionHash);\n        }\n      });\n      if (code !== '0x') { // then address is contract\n        console.log(code);\n        fetch(`https://api.etherscan.io/api?module=contract&action=getabi&address=${otherAddress}&apikey=3VTI9D585DCX4RD4QSP3MYWKACCIVZID23`)\n          .then(\n            (response) => {\n              if (response.status !== 200) {\n                console.log(`Looks like there was a problem. Status Code: ${response.status}`);\n                return;\n              }\n\n              // Examine the text in the response\n              response.json().then((data) => {\n                contractData = data.result;\n                console.log(typeof contractData);\n                console.log(data);\n                // console.log(typeof stripEndQuotes(data.result));\n                // abiDecoder.addABI(stripEndQuotes(data.result));\n              });\n\n            },\n          )\n          .catch((err) => {\n            console.log('Fetch Error :-S', err);\n          });\n      }\n\n      if (!checkedAddresses[otherAddress]) {\n        try {\n          const graphqlQueryObject = `\n          {\n            profile(id: \"${otherAddress}\") {\n              name\n              image\n            }\n          }\n          `;\n          metaData = await Box.profileGraphQL(graphqlQueryObject); // eslint-disable-line no-undef\n        } catch (error) {\n          console.log(error);\n        }\n\n        const contractArray = imageElFor(otherAddress);\n        const name = metaData.profile && metaData.profile.name;\n        const image = metaData.profile && metaData.profile.image;\n\n        checkedAddresses[otherAddress] = {\n          name,\n          image,\n          contractImg: contractArray[0],\n          contractDetails: contractArray[1],\n          contractData,\n        };\n        feedByAddress[i].metaData = {\n          name,\n          image,\n          contractImg: contractArray[0],\n          contractDetails: contractArray[1],\n          contractData,\n        };\n      } else {\n        metaData = checkedAddresses[otherAddress];\n        feedByAddress[i].metaData = metaData;\n      }\n    });\n\n    // feedByAddress.map(txGroup)\n\n    if (publicProfileAddress) {\n      dispatch({\n        type: 'GET_PUBLIC_PROFILE_ACTIVITY',\n        publicProfileActivity: feedByAddress,\n        ifFetchingActivity: false,\n      });\n    } else {\n      dispatch({\n        type: 'UPDATE_ACTIVITY',\n        feedByAddress,\n        ifFetchingActivity: false,\n        isLoggedIn: true,\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: 'FAILED_LOADING_ACTIVITY',\n      feedByAddress: [],\n      ifFetchingActivity: false,\n      errorMessage: err,\n      showErrorModal: true,\n      provideConsent: false,\n    });\n  }\n};\n\nexport const getProfile = profileAddress => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'LOADING_PUBLIC_PROFILE',\n      isLoadingPublicProfile: true,\n    });\n\n    const publicProfile = await Box.getProfile(profileAddress); // eslint-disable-line no-undef\n    const publicVerifiedAccounts = Object.entries(publicProfile).length > 0 ?\n      await Box.getVerifiedAccounts(publicProfile) : { // eslint-disable-line no-undef\n        github: null,\n        twitter: null,\n      };\n\n    dispatch({\n      type: 'GET_PUBLIC_PROFILE',\n      publicGithub: publicVerifiedAccounts.github && publicVerifiedAccounts.github.username,\n      publicTwitter: publicVerifiedAccounts.twitter && publicVerifiedAccounts.twitter.username,\n      publicDescription: publicProfile.description,\n      publicLocation: publicProfile.location,\n      publicWebsite: publicProfile.website,\n      publicMemberSince: publicProfile.memberSince,\n      publicJob: publicProfile.job,\n      publicSchool: publicProfile.school,\n      publicDegree: publicProfile.degree,\n      publicMajor: publicProfile.major,\n      publicYear: publicProfile.year,\n      publicEmployer: publicProfile.employer,\n      publicCoverPhoto: publicProfile.coverPhoto,\n      publicImage: publicProfile.image,\n      publicName: publicProfile.name,\n      publicEmoji: publicProfile.emoji,\n      publicStatus: publicProfile.status,\n    });\n\n    dispatch({\n      type: 'LOADING_PUBLIC_PROFILE',\n      isLoadingPublicProfile: false,\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getProfileData = (type, key) => async (dispatch) => {\n  try {\n    const keyUppercase = key.toUpperCase();\n    const keyToAdd = await store.getState().threeBox.box[type].get(key);\n    const typeUppercase = type.toUpperCase();\n\n    dispatch({\n      type: `GET_${typeUppercase}_${keyUppercase}`,\n      [key]: keyToAdd,\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getPublicDID = () => async (dispatch) => {\n  try {\n    const did = await store.getState().threeBox.box.verified.DID();\n\n    dispatch({\n      type: 'GET_PUBLIC_DID',\n      did,\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getPublicMemberSince = () => async (dispatch) => {\n  const date = await store.getState().threeBox.box.public.get('memberSince');\n\n  let memberSince;\n  let memberSinceDate;\n\n  if (date === 'Alpha') {\n    memberSinceDate = date;\n  } else if (date) {\n    memberSince = new Date(date);\n    memberSinceDate = `${(memberSince.getMonth() + 1)}/${memberSince.getDate()}/${memberSince.getFullYear()}`;\n  }\n\n  dispatch({\n    type: 'GET_PUBLIC_MEMBERSINCE',\n    memberSince: memberSinceDate,\n  });\n};\n\nexport const getVerifiedPublicGithub = () => async (dispatch) => {\n  try {\n    const verifiedGithub = await store.getState().threeBox.box.verified.github();\n\n    dispatch({\n      type: 'GET_VERIFIED_PUBLIC_GITHUB',\n      verifiedGithub: verifiedGithub.username,\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getVerifiedPublicTwitter = () => async (dispatch) => {\n  try {\n    const verifiedTwitter = await store.getState().threeBox.box.verified.twitter();\n\n    dispatch({\n      type: 'GET_VERIFIED_PUBLIC_TWITTER',\n      verifiedTwitter: verifiedTwitter.username,\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const handleSignOut = () => async (dispatch) => {\n  if (store.getState().threeBox.isLoggedIn) {\n    if (store.getState().threeBox.box) store.getState().threeBox.box.logout();\n    dispatch({\n      type: 'HANDLE_SIGNOUT',\n      isLoggedIn: false,\n    });\n  }\n  history.push(routes.LANDING);\n};\n\nexport const copyToClipBoard = (type, message) => async (dispatch) => {\n  try {\n    const textArea = document.createElement('textarea');\n\n    if (type === 'did') {\n      textArea.value = message;\n    } else if (type === 'profile') {\n      textArea.value = `https://www.3box.io/${store.getState().threeBox.currentAddress}`;\n    }\n\n    document.body.appendChild(textArea);\n    textArea.focus({\n      preventScroll: true,\n    });\n    textArea.select();\n    document.execCommand('copy');\n\n    setTimeout(() => {\n      dispatch({\n        type: 'COPY_SUCCESSFUL',\n        copySuccessful: true,\n      });\n    }, 1);\n    setTimeout(() => {\n      dispatch({\n        type: 'COPY_SUCCESSFUL',\n        copySuccessful: false,\n      });\n    }, 2000);\n\n    document.body.removeChild(textArea);\n  } catch (err) {\n    console.error('Unable to copy', err);\n  }\n};\n\n// feed.forEach((item) => {\n//   const othersAddress = item.from === store.getState().threeBox.currentAddress ? item.to : item.from;\n//   if (feedByAddress.length > 0 &&\n//     Object.keys(feedByAddress[feedByAddress.length - 1])[0] === othersAddress) {\n//     feedByAddress[feedByAddress.length - 1][othersAddress].push(item);\n//   } else if (feedByAddress.length > 0 && Object.keys(feedByAddress[feedByAddress.length - 1])[0] === 'threeBox' && (item.dataType === 'Public' || item.dataType === 'Private')) {\n//     feedByAddress[feedByAddress.length - 1].threeBox.push(item);\n//   } else if (item.dataType === 'Public' || item.dataType === 'Private') {\n//     feedByAddress.push({\n//       threeBox: [item],\n//     });\n//   } else {\n//     feedByAddress.push({\n//       [othersAddress]: [item],\n//     });\n//   }\n// });"]},"metadata":{},"sourceType":"module"}