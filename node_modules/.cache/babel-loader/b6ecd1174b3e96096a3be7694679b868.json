{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/StatusUpdate.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Loading from \"../../assets/Loading.svg\";\nimport '../styles/Feed.css';\nimport '../styles/Nav.css';\nimport { getActivity, getProfileData } from '../../state/actions';\n\nvar StatusUpdate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StatusUpdate, _Component);\n\n  function StatusUpdate(props) {\n    var _this;\n\n    _classCallCheck(this, StatusUpdate);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StatusUpdate).call(this, props));\n\n    _this.handleFormChange = function (e, property) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, property, e.target.value), _defineProperty(_this$setState, \"disableSave\", false), _this$setState));\n    };\n\n    _this.cancelChange = function (e) {\n      e.preventDefault();\n      var status = _this.props.status;\n\n      _this.setState({\n        status: status,\n        disableSave: true\n      });\n    };\n\n    _this.state = {\n      status: '',\n      disableSave: true,\n      saveLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(StatusUpdate, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var status = this.props.status;\n      this.setState({\n        status: status\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var status = nextProps.status;\n      if (status !== this.props.status) this.setState({\n        status: status\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e, remove) {\n        var status, statusChanged, box;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                status = this.state.status;\n                e.preventDefault();\n                this.setState({\n                  saveLoading: true\n                });\n                statusChanged = status !== this.props.status;\n                box = this.props.box; // if value changed and is not empty, save new value, else remove value\n\n                if (!(statusChanged && status !== '')) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 8;\n                return box.public.set('status', status);\n\n              case 8:\n                if (!(statusChanged && status === '' || remove)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 11;\n                return box.public.remove('status');\n\n              case 11:\n                if (!statusChanged) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 14;\n                return this.props.getProfileData('public', 'status');\n\n              case 14:\n                this.props.getActivity();\n                this.setState({\n                  saveLoading: false,\n                  disableSave: true\n                });\n                if (remove) this.setState({\n                  status: ''\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleSubmit(_x, _x2) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          status = _this$state.status,\n          disableSave = _this$state.disableSave,\n          saveLoading = _this$state.saveLoading;\n      var _this$props = this.props,\n          location = _this$props.location,\n          publicProfile = _this$props.publicProfile,\n          showDownloadBanner = _this$props.showDownloadBanner;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, location.pathname.split('/')[1] === 'user' && React.createElement(\"div\", {\n        className: \"\".concat(showDownloadBanner ? 'bannerMargin' : '', \" statusUpdate\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"statusUpdate__displayPublic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, publicProfile.status)), location.pathname.split('/')[1] === 'profile' && React.createElement(\"div\", {\n        className: \"\".concat(showDownloadBanner ? 'bannerMargin' : '', \" statusUpdate\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, saveLoading && React.createElement(\"div\", {\n        className: \"statusUpdate__loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: Loading,\n        alt: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        value: status,\n        className: \"statusUpdate__field\",\n        placeholder: \"Set a status...\",\n        onChange: function onChange(e) {\n          return _this2.handleFormChange(e, 'status');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), !disableSave && React.createElement(\"button\", {\n        type: \"button\",\n        className: \"statusUpdate__button statusUpdate__button--save\",\n        onClick: function onClick(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Save\"), !disableSave && React.createElement(\"button\", {\n        type: \"button\",\n        className: \"statusUpdate__button statusUpdate__button--cancel\",\n        onClick: function onClick(e) {\n          return _this2.cancelChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Cancel\"), disableSave && status !== '' && React.createElement(\"button\", {\n        type: \"button\",\n        className: \"statusUpdate__button statusUpdate__button--remove hideStatusButton\",\n        onClick: function onClick(e) {\n          return _this2.handleSubmit(e, 'remove');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Remove\")));\n    }\n  }]);\n\n  return StatusUpdate;\n}(Component);\n\nStatusUpdate.propTypes = {\n  status: PropTypes.string,\n  showDownloadBanner: PropTypes.bool,\n  getActivity: PropTypes.func.isRequired,\n  getProfileData: PropTypes.func.isRequired,\n  publicProfile: PropTypes.object,\n  box: PropTypes.object,\n  location: PropTypes.object.isRequired\n};\nStatusUpdate.defaultProps = {\n  box: {},\n  status: '',\n  publicProfile: {},\n  showDownloadBanner: false\n};\n\nfunction mapState(state) {\n  return {\n    box: state.threeBox.box,\n    status: state.threeBox.status,\n    publicProfile: state.threeBox.publicProfile,\n    showDownloadBanner: state.threeBox.showDownloadBanner\n  };\n}\n\nexport default withRouter(connect(mapState, {\n  getActivity: getActivity,\n  getProfileData: getProfileData\n})(StatusUpdate));","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/StatusUpdate.jsx"],"names":["React","Component","connect","withRouter","PropTypes","getActivity","getProfileData","StatusUpdate","props","handleFormChange","e","property","setState","target","value","cancelChange","preventDefault","status","disableSave","state","saveLoading","nextProps","remove","statusChanged","box","public","set","location","publicProfile","showDownloadBanner","pathname","split","Loading","handleSubmit","propTypes","string","bool","func","isRequired","object","defaultProps","mapState","threeBox"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Loading from '../../assets/Loading.svg';\nimport '../styles/Feed.css';\nimport '../styles/Nav.css';\n\nimport {\n  getActivity,\n  getProfileData,\n} from '../../state/actions';\n\nclass StatusUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: '',\n      disableSave: true,\n      saveLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    const { status } = this.props;\n    this.setState({ status });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { status } = nextProps;\n\n    if (status !== this.props.status) this.setState({ status });\n  }\n\n  handleFormChange = (e, property) => {\n    this.setState({ [property]: e.target.value, disableSave: false });\n  }\n\n  cancelChange = (e) => {\n    e.preventDefault();\n    const { status } = this.props;\n    this.setState({ status, disableSave: true });\n  }\n\n  async handleSubmit(e, remove) {\n    const {\n      status,\n    } = this.state;\n\n    e.preventDefault();\n    this.setState({ saveLoading: true });\n\n    const statusChanged = status !== this.props.status;\n    const { box } = this.props;\n\n    // if value changed and is not empty, save new value, else remove value\n    if (statusChanged && status !== '') await box.public.set('status', status);\n    if ((statusChanged && status === '') || remove) await box.public.remove('status');\n\n    if (statusChanged) await this.props.getProfileData('public', 'status');\n    this.props.getActivity();\n    this.setState({ saveLoading: false, disableSave: true });\n    if (remove) this.setState({ status: '' });\n  }\n\n  render() {\n    const { status, disableSave, saveLoading } = this.state;\n    const { location, publicProfile, showDownloadBanner } = this.props;\n\n    return (\n      <React.Fragment>\n\n        {(location.pathname.split('/')[1] === 'user') && (\n          <div className={`${showDownloadBanner ? 'bannerMargin' : ''} statusUpdate`}>\n            <div className=\"statusUpdate__displayPublic\">\n              {publicProfile.status}\n            </div>\n          </div>)}\n\n        {location.pathname.split('/')[1] === 'profile' && (\n          <div className={`${showDownloadBanner ? 'bannerMargin' : ''} statusUpdate`}>\n            {saveLoading\n              && (\n                <div className=\"statusUpdate__loading\">\n                  <img src={Loading} alt=\"loading\" />\n                </div>\n              )}\n\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={status}\n              className=\"statusUpdate__field\"\n              placeholder=\"Set a status...\"\n              onChange={e => this.handleFormChange(e, 'status')}\n            />\n\n            {!disableSave\n              && (\n                <button\n                  type=\"button\"\n                  className=\"statusUpdate__button statusUpdate__button--save\"\n                  onClick={e => this.handleSubmit(e)}\n                >\n                  Save\n                </button>)}\n\n            {!disableSave\n              && (\n                <button\n                  type=\"button\"\n                  className=\"statusUpdate__button statusUpdate__button--cancel\"\n                  onClick={e => this.cancelChange(e)}\n                >\n                  Cancel\n                </button>)}\n\n            {(disableSave && status !== '')\n              && (\n                <button\n                  type=\"button\"\n                  className=\"statusUpdate__button statusUpdate__button--remove hideStatusButton\"\n                  onClick={e => this.handleSubmit(e, 'remove')}\n                >\n                  Remove\n                </button>)}\n          </div>)}\n\n      </React.Fragment>\n    );\n  }\n}\n\nStatusUpdate.propTypes = {\n  status: PropTypes.string,\n  showDownloadBanner: PropTypes.bool,\n  getActivity: PropTypes.func.isRequired,\n  getProfileData: PropTypes.func.isRequired,\n  publicProfile: PropTypes.object,\n  box: PropTypes.object,\n  location: PropTypes.object.isRequired,\n};\n\nStatusUpdate.defaultProps = {\n  box: {},\n  status: '',\n  publicProfile: {},\n  showDownloadBanner: false,\n};\n\nfunction mapState(state) {\n  return {\n    box: state.threeBox.box,\n    status: state.threeBox.status,\n    publicProfile: state.threeBox.publicProfile,\n    showDownloadBanner: state.threeBox.showDownloadBanner,\n  };\n}\n\nexport default withRouter(connect(mapState,\n  {\n    getActivity,\n    getProfileData,\n  })(StatusUpdate));\n"]},"metadata":{},"sourceType":"module"}