{"ast":null,"code":"var Multiaddr = require('multiaddr');\n\nvar mafmt = require('mafmt');\n\nmodule.exports = {\n  name: 'multiaddr',\n  language: {\n    invalid: '{{message}}',\n    fmt: 'must be in {{fmt}} format'\n  },\n  pre: function pre(value, state, options) {\n    if (value == null) {\n      return this.createError('multiaddr.invalid', {\n        v: value,\n        message: 'addr must be a string, Buffer, or another Multiaddr'\n      }, state, options);\n    }\n\n    var ma;\n\n    try {\n      ma = Multiaddr(value);\n    } catch (err) {\n      return this.createError('multiaddr.invalid', {\n        v: value,\n        message: err.message\n      }, state, options);\n    }\n\n    return options.convert ? ma : value;\n  },\n  rules: Object.keys(mafmt).map(function (fmt) {\n    return {\n      name: fmt,\n      validate: function validate(params, value, state, options) {\n        return mafmt[fmt].matches(value) ? value : this.createError(\"multiaddr.fmt\", {\n          v: value,\n          fmt: fmt\n        }, state, options);\n      }\n    };\n  })\n};","map":null,"metadata":{},"sourceType":"script"}