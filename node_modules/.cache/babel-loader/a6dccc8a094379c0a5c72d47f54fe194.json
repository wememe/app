{"ast":null,"code":"'use strict';\n\nvar pReduce = require('p-reduce');\n\nvar is = require('@sindresorhus/is');\n\nmodule.exports = function (iterable) {\n  var ret = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var task = _step.value;\n      var type = is(task);\n\n      if (type !== 'Function') {\n        return Promise.reject(new TypeError(\"Expected task to be a `Function`, received `\".concat(type, \"`\")));\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return pReduce(iterable, function (_, fn) {\n    return Promise.resolve().then(fn).then(function (val) {\n      ret.push(val);\n    });\n  }).then(function () {\n    return ret;\n  });\n};","map":null,"metadata":{},"sourceType":"script"}