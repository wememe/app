{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/views/ProfilePublic.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { address } from '../utils/address';\nimport { getProfile, getActivity, accountsPromise } from '../state/actions';\nimport { PublicProfileLoading, SignInThroughPublicProfileBanner } from '../components/Modals.jsx';\nimport { handleSignInBanner } from '../state/actions-modals';\nimport { store } from '../state/store';\nimport { normalizeURL } from '../utils/funcs';\nimport PubContent from '../components/Profile/PubContent';\nimport SideBar from '../components/Profile/SideBar';\nimport Nav from '../components/Nav';\nimport './styles/Profile.css';\n\nvar ProfilePublic =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfilePublic, _Component);\n\n  function ProfilePublic() {\n    _classCallCheck(this, ProfilePublic);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProfilePublic).apply(this, arguments));\n  }\n\n  _createClass(ProfilePublic, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var pathname, publicProfileAddress, normalizedPath, activeAddress, returnedAddress, _returnedAddress;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                window.scrollTo(0, 0);\n                pathname = this.props.location.pathname;\n                publicProfileAddress = pathname.split('/')[1];\n                normalizedPath = normalizeURL(pathname);\n                store.dispatch({\n                  type: 'UPDATE_ROUTE',\n                  currentRoute: normalizedPath,\n                  onPublicProfilePage: true\n                });\n\n                if (address) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 8;\n                return accountsPromise;\n\n              case 8:\n                returnedAddress = _context.sent;\n                _returnedAddress = _slicedToArray(returnedAddress, 1);\n                activeAddress = _returnedAddress[0];\n                _context.next = 14;\n                break;\n\n              case 13:\n                activeAddress = address;\n\n              case 14:\n                if (publicProfileAddress === activeAddress) this.props.handleSignInBanner();\n                this.props.getProfile(publicProfileAddress);\n                this.props.getActivity(publicProfileAddress);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var pathname = this.props.location.pathname;\n      var normalizedPath = normalizeURL(pathname);\n      store.dispatch({\n        type: 'UPDATE_ROUTE',\n        currentRoute: normalizedPath,\n        onPublicProfilePage: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isLoadingPublicProfile = _this$props.isLoadingPublicProfile,\n          showSignInBanner = _this$props.showSignInBanner;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(SignInThroughPublicProfileBanner, {\n        show: showSignInBanner,\n        handleSignInBanner: this.props.handleSignInBanner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"profile__page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"profile__contents\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(SideBar, {\n        isPublicProfilePage: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(PubContent, {\n        showSignInBanner: showSignInBanner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(PublicProfileLoading, {\n        show: isLoadingPublicProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ProfilePublic;\n}(Component);\n\nProfilePublic.propTypes = {\n  getProfile: PropTypes.func.isRequired,\n  getActivity: PropTypes.func.isRequired,\n  handleSignInBanner: PropTypes.func.isRequired,\n  pathname: PropTypes.object,\n  location: PropTypes.object,\n  isLoadingPublicProfile: PropTypes.bool,\n  showSignInBanner: PropTypes.bool\n};\nProfilePublic.defaultProps = {\n  pathname: {},\n  location: {},\n  isLoadingPublicProfile: true,\n  showSignInBanner: false\n};\n\nvar mapState = function mapState(state) {\n  return {\n    isLoadingPublicProfile: state.threeBox.isLoadingPublicProfile,\n    showSignInBanner: state.threeBox.showSignInBanner\n  };\n};\n\nexport default withRouter(connect(mapState, {\n  getProfile: getProfile,\n  getActivity: getActivity,\n  handleSignInBanner: handleSignInBanner\n})(ProfilePublic));","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/views/ProfilePublic.jsx"],"names":["React","Component","withRouter","connect","PropTypes","address","getProfile","getActivity","accountsPromise","PublicProfileLoading","SignInThroughPublicProfileBanner","handleSignInBanner","store","normalizeURL","PubContent","SideBar","Nav","ProfilePublic","window","scrollTo","pathname","props","location","publicProfileAddress","split","normalizedPath","dispatch","type","currentRoute","onPublicProfilePage","returnedAddress","activeAddress","isLoadingPublicProfile","showSignInBanner","propTypes","func","isRequired","object","bool","defaultProps","mapState","state","threeBox"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { address } from '../utils/address';\nimport {\n  getProfile,\n  getActivity,\n  accountsPromise,\n} from '../state/actions';\nimport {\n  PublicProfileLoading,\n  SignInThroughPublicProfileBanner,\n} from '../components/Modals.jsx';\nimport {\n  handleSignInBanner,\n} from '../state/actions-modals';\nimport { store } from '../state/store';\nimport { normalizeURL } from '../utils/funcs';\nimport PubContent from '../components/Profile/PubContent';\nimport SideBar from '../components/Profile/SideBar';\nimport Nav from '../components/Nav';\nimport './styles/Profile.css';\n\nclass ProfilePublic extends Component {\n  async componentDidMount() {\n    window.scrollTo(0, 0);\n    const { location: { pathname } } = this.props;\n    const publicProfileAddress = pathname.split('/')[1];\n    const normalizedPath = normalizeURL(pathname);\n    let activeAddress;\n\n    store.dispatch({\n      type: 'UPDATE_ROUTE',\n      currentRoute: normalizedPath,\n      onPublicProfilePage: true,\n    });\n\n    if (!address) {\n      const returnedAddress = await accountsPromise;\n      [activeAddress] = returnedAddress;\n    } else {\n      activeAddress = address;\n    }\n\n    if (publicProfileAddress === activeAddress) this.props.handleSignInBanner();\n    this.props.getProfile(publicProfileAddress);\n    this.props.getActivity(publicProfileAddress);\n  }\n\n  componentWillUnmount() {\n    const { location: { pathname } } = this.props;\n    const normalizedPath = normalizeURL(pathname);\n\n    store.dispatch({\n      type: 'UPDATE_ROUTE',\n      currentRoute: normalizedPath,\n      onPublicProfilePage: false,\n    });\n  }\n\n  render() {\n    const { isLoadingPublicProfile, showSignInBanner } = this.props;\n    return (\n      <div>\n        <SignInThroughPublicProfileBanner show={showSignInBanner} handleSignInBanner={this.props.handleSignInBanner} />\n        <Nav />\n        <div\n          id=\"profile__page\"\n        >\n          <div id=\"profile__contents\">\n            <SideBar isPublicProfilePage />\n            <PubContent showSignInBanner={showSignInBanner} />\n          </div>\n          <PublicProfileLoading show={isLoadingPublicProfile} />\n        </div>\n      </div>\n    );\n  }\n}\n\nProfilePublic.propTypes = {\n  getProfile: PropTypes.func.isRequired,\n  getActivity: PropTypes.func.isRequired,\n  handleSignInBanner: PropTypes.func.isRequired,\n  pathname: PropTypes.object,\n  location: PropTypes.object,\n  isLoadingPublicProfile: PropTypes.bool,\n  showSignInBanner: PropTypes.bool,\n};\n\nProfilePublic.defaultProps = {\n  pathname: {},\n  location: {},\n  isLoadingPublicProfile: true,\n  showSignInBanner: false,\n};\n\nconst mapState = state => ({\n  isLoadingPublicProfile: state.threeBox.isLoadingPublicProfile,\n  showSignInBanner: state.threeBox.showSignInBanner,\n});\n\nexport default withRouter(connect(mapState,\n  {\n    getProfile,\n    getActivity,\n    handleSignInBanner,\n  })(ProfilePublic));\n"]},"metadata":{},"sourceType":"module"}