{"ast":null,"code":"'use strict';\n\nvar multistream = require('multistream-select');\n\nvar observeConn = require('./observe-connection');\n\nvar debug = require('debug');\n\nvar log = debug('libp2p:switch:protocol-muxer');\n\nmodule.exports = function protocolMuxer(protocols, observer) {\n  return function (transport) {\n    return function (_parentConn) {\n      var parentConn = transport ? observeConn(transport, null, _parentConn, observer) : _parentConn;\n      var ms = new multistream.Listener();\n      Object.keys(protocols).forEach(function (protocol) {\n        if (!protocol) {\n          return;\n        }\n\n        var handler = function handler(protocolName, _conn) {\n          log(\"registering handler with protocol \".concat(protocolName));\n          var protocol = protocols[protocolName];\n\n          if (protocol) {\n            var handlerFunc = protocol && protocol.handlerFunc;\n\n            if (handlerFunc) {\n              var conn = observeConn(null, protocolName, _conn, observer);\n              handlerFunc(protocol, conn);\n            }\n          }\n        };\n\n        ms.addHandler(protocol, handler, protocols[protocol].matchFunc);\n      });\n      ms.handle(parentConn, function (err) {\n        if (err) {// the multistream handshake failed\n        }\n      });\n    };\n  };\n};","map":null,"metadata":{},"sourceType":"script"}