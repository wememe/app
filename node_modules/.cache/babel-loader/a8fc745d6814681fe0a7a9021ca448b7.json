{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // This gets overriddenby gulp during bip39-XX\n\nvar exportWordlist = false;\n\nvar hash_1 = require(\"../utils/hash\");\n\nvar properties_1 = require(\"../utils/properties\");\n\nfunction check(wordlist) {\n  var words = [];\n\n  for (var i = 0; i < 2048; i++) {\n    var word = wordlist.getWord(i);\n\n    if (i !== wordlist.getWordIndex(word)) {\n      return '0x';\n    }\n\n    words.push(word);\n  }\n\n  return hash_1.id(words.join('\\n') + '\\n');\n}\n\nexports.check = check;\n\nvar Wordlist =\n/** @class */\nfunction () {\n  function Wordlist(locale) {\n    properties_1.defineReadOnly(this, 'locale', locale);\n  } // Subclasses may override this\n\n\n  Wordlist.prototype.split = function (mnemonic) {\n    return mnemonic.toLowerCase().split(/ +/g);\n  }; // Subclasses may override this\n\n\n  Wordlist.prototype.join = function (words) {\n    return words.join(' ');\n  };\n\n  return Wordlist;\n}();\n\nexports.Wordlist = Wordlist;\n\nfunction register(lang, name) {\n  if (!name) {\n    name = lang.locale;\n  }\n\n  if (exportWordlist) {\n    var g = global;\n\n    if (!g.wordlists) {\n      properties_1.defineReadOnly(g, 'wordlists', {});\n    }\n\n    if (!g.wordlists[name]) {\n      properties_1.defineReadOnly(g.wordlists, name, lang);\n    }\n\n    if (g.ethers && g.ethers.wordlists) {\n      if (!g.ethers.wordlists[name]) {\n        properties_1.defineReadOnly(g.ethers.wordlists, name, lang);\n      }\n    }\n  }\n}\n\nexports.register = register;","map":null,"metadata":{},"sourceType":"script"}