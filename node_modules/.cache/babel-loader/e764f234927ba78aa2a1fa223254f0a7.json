{"ast":null,"code":"'use strict';\n\nvar convert = require('./convert');\n\nvar utf8 = require('./utf8');\n\nvar keccak256 = require('./keccak256');\n\nvar Zeros = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nvar Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nvar UseSTD3ASCIIRules = new RegExp(\"^[a-z0-9.-]*$\");\n\nfunction namehash(name, depth) {\n  name = name.toLowerCase(); // Supporting the full UTF-8 space requires additional (and large)\n  // libraries, so for now we simply do not support them.\n  // It should be fairly easy in the future to support systems with\n  // String.normalize, but that is future work.\n\n  if (!name.match(UseSTD3ASCIIRules)) {\n    throw new Error('contains invalid UseSTD3ASCIIRules characters');\n  }\n\n  var result = Zeros;\n  var processed = 0;\n\n  while (name.length && (!depth || processed < depth)) {\n    var partition = name.match(Partition);\n    var label = utf8.toUtf8Bytes(partition[3]);\n    result = keccak256(convert.concat([result, keccak256(label)]));\n    name = partition[2] || '';\n    processed++;\n  }\n\n  return convert.hexlify(result);\n}\n\nmodule.exports = namehash;","map":null,"metadata":{},"sourceType":"script"}