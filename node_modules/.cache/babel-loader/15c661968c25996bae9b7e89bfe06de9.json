{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as routes from './routes';\nexport var normalizeURL = function normalizeURL(pathname) {\n  var lowercasePathname = pathname.toLowerCase();\n  var fuzzyLowercasePathname = lowercasePathname.charAt(lowercasePathname.length - 1) === '/' ? lowercasePathname.slice(0, -1) : lowercasePathname;\n  return fuzzyLowercasePathname;\n};\nexport var matchProtectedRoutes = function matchProtectedRoutes(normalizedPath) {\n  if (normalizedPath === routes.ACTIVITY || normalizedPath === routes.DETAILS || normalizedPath === routes.EDIT) {\n    return true;\n  }\n\n  return false;\n};\nexport var addhttp = function addhttp(url) {\n  var correctedURL;\n\n  if (!/^(?:f|ht)tps?\\:\\/\\//.test(url)) {\n    correctedURL = \"http://\".concat(url);\n  } else {\n    correctedURL = url;\n  }\n\n  return correctedURL;\n};\nexport function fetchAsync(_x) {\n  return _fetchAsync.apply(this, arguments);\n}\n\nfunction _fetchAsync() {\n  _fetchAsync = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(otherAddress) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://api.etherscan.io/api?module=contract&action=getabi&address=\".concat(otherAddress, \"&apikey=3VTI9D585DCX4RD4QSP3MYWKACCIVZID23\"));\n\n          case 2:\n            response = _context.sent;\n\n            if (!(response.status !== 200)) {\n              _context.next = 6;\n              break;\n            }\n\n            console.log(\"Looks like there was a problem. Status Code: \".concat(response.status));\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.next = 8;\n            return response.json();\n\n          case 8:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _fetchAsync.apply(this, arguments);\n}\n\n; // fetch(`https://api.etherscan.io/api?module=contract&action=getabi&address=${otherAddress}&apikey=3VTI9D585DCX4RD4QSP3MYWKACCIVZID23`)\n//   .then(\n//     (response) => {\n//       if (response.status !== 200) {\n//         console.log(`Looks like there was a problem. Status Code: ${response.status}`);\n//         return;\n//       }\n//       response.json()\n//         .then((data) => {\n//           if (data.status === '1') {\n//             contractData = JSON.parse(data.result);\n//             abiDecoder.addABI(contractData);\n//             txGroup[otherAddress].map((lineItem, index) => {\n//               const methodCall = abiDecoder.decodeMethod(txGroup[otherAddress][index].input);\n//               lineItem.methodCall = methodCall && methodCall.name && (methodCall.name.charAt(0).toUpperCase() + methodCall.name.slice(1)).replace(/([A-Z])/g, ' $1').trim();\n//             });\n//           }\n//         });\n//     },\n//   )\n//   .catch((err) => {\n//     console.log('Fetch Error :-S', err);\n//   });","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/utils/funcs.js"],"names":["routes","normalizeURL","pathname","lowercasePathname","toLowerCase","fuzzyLowercasePathname","charAt","length","slice","matchProtectedRoutes","normalizedPath","ACTIVITY","DETAILS","EDIT","addhttp","url","correctedURL","test","fetchAsync","otherAddress","fetch","response","status","console","log","json","data"],"mappings":";;AAAA,OAAO,KAAKA,MAAZ,MAAwB,UAAxB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAc;AACxC,MAAMC,iBAAiB,GAAGD,QAAQ,CAACE,WAAT,EAA1B;AACA,MAAMC,sBAAsB,GAAGF,iBAAiB,CAACG,MAAlB,CAAyBH,iBAAiB,CAACI,MAAlB,GAA2B,CAApD,MAA2D,GAA3D,GAC7BJ,iBAAiB,CAACK,KAAlB,CAAwB,CAAxB,EAA2B,CAAC,CAA5B,CAD6B,GAE7BL,iBAFF;AAIA,SAAOE,sBAAP;AACD,CAPM;AASP,OAAO,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,cAAD,EAAoB;AACtD,MAAIA,cAAc,KAAKV,MAAM,CAACW,QAA1B,IACFD,cAAc,KAAKV,MAAM,CAACY,OADxB,IAEFF,cAAc,KAAKV,MAAM,CAACa,IAF5B,EAEkC;AAChC,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CAPM;AASP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAS;AAC9B,MAAIC,YAAJ;;AACA,MAAI,CAAC,sBAAsBC,IAAtB,CAA2BF,GAA3B,CAAL,EAAsC;AACpCC,IAAAA,YAAY,oBAAaD,GAAb,CAAZ;AACD,GAFD,MAEO;AACLC,IAAAA,YAAY,GAAGD,GAAf;AACD;;AACD,SAAOC,YAAP;AACD,CARM;AAUP,gBAAsBE,UAAtB;AAAA;AAAA;;;;;2BAAO,iBAA0BC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkBC,KAAK,8EAAuED,YAAvE,gDADvB;;AAAA;AACCE,YAAAA,QADD;;AAAA,kBAEDA,QAAQ,CAACC,MAAT,KAAoB,GAFnB;AAAA;AAAA;AAAA;;AAGHC,YAAAA,OAAO,CAACC,GAAR,wDAA4DH,QAAQ,CAACC,MAArE;AAHG;;AAAA;AAAA;AAAA,mBAMcD,QAAQ,CAACI,IAAT,EANd;;AAAA;AAMCC,YAAAA,IAND;AAAA,6CAQEA,IARF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASN,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as routes from './routes';\n\nexport const normalizeURL = (pathname) => {\n  const lowercasePathname = pathname.toLowerCase();\n  const fuzzyLowercasePathname = lowercasePathname.charAt(lowercasePathname.length - 1) === '/' ?\n    lowercasePathname.slice(0, -1) :\n    lowercasePathname;\n\n  return fuzzyLowercasePathname;\n};\n\nexport const matchProtectedRoutes = (normalizedPath) => {\n  if (normalizedPath === routes.ACTIVITY ||\n    normalizedPath === routes.DETAILS ||\n    normalizedPath === routes.EDIT) {\n    return true;\n  }\n  return false;\n};\n\nexport const addhttp = (url) => {\n  let correctedURL;\n  if (!/^(?:f|ht)tps?\\:\\/\\//.test(url)) {\n    correctedURL = `http://${url}`;\n  } else {\n    correctedURL = url;\n  }\n  return correctedURL;\n};\n\nexport async function fetchAsync(otherAddress) {\n  const response = await fetch(`https://api.etherscan.io/api?module=contract&action=getabi&address=${otherAddress}&apikey=3VTI9D585DCX4RD4QSP3MYWKACCIVZID23`);\n  if (response.status !== 200) {\n    console.log(`Looks like there was a problem. Status Code: ${response.status}`);\n    return;\n  }\n  const data = await response.json();\n  // only proceed once second promise is resolved\n  return data;\n};\n\n// fetch(`https://api.etherscan.io/api?module=contract&action=getabi&address=${otherAddress}&apikey=3VTI9D585DCX4RD4QSP3MYWKACCIVZID23`)\n//   .then(\n//     (response) => {\n//       if (response.status !== 200) {\n//         console.log(`Looks like there was a problem. Status Code: ${response.status}`);\n//         return;\n//       }\n//       response.json()\n//         .then((data) => {\n//           if (data.status === '1') {\n//             contractData = JSON.parse(data.result);\n//             abiDecoder.addABI(contractData);\n//             txGroup[otherAddress].map((lineItem, index) => {\n//               const methodCall = abiDecoder.decodeMethod(txGroup[otherAddress][index].input);\n//               lineItem.methodCall = methodCall && methodCall.name && (methodCall.name.charAt(0).toUpperCase() + methodCall.name.slice(1)).replace(/([A-Z])/g, ' $1').trim();\n//             });\n//           }\n//         });\n//     },\n//   )\n//   .catch((err) => {\n//     console.log('Fetch Error :-S', err);\n//   });"]},"metadata":{},"sourceType":"module"}