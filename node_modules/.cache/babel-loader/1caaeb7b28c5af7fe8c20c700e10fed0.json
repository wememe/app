{"ast":null,"code":"'use strict';\n\nvar isIPFS = require('is-ipfs');\n\nvar debug = require('debug');\n\nvar log = debug('jsipfs:ipns:path');\nlog.error = debug('jsipfs:ipns:path:error'); // resolves the given path by parsing out protocol-specific entries\n// (e.g. /ipns/<node-key>) and then going through the /ipfs/ entries and returning the final node\n\nvar resolvePath = function resolvePath(ipfsNode, name, callback) {\n  // ipns path\n  if (isIPFS.ipnsPath(name)) {\n    log(\"resolve ipns path \".concat(name));\n    var local = true; // TODO ROUTING - use self._options.local\n\n    var options = {\n      local: local\n    };\n    return ipfsNode._ipns.resolve(name, ipfsNode._peerInfo.id, options, callback);\n  } // ipfs path\n\n\n  ipfsNode.dag.get(name.substring('/ipfs/'.length), function (err, value) {\n    if (err) {\n      return callback(err);\n    }\n\n    return callback(null, value);\n  });\n};\n\nmodule.exports = {\n  resolvePath: resolvePath\n};","map":null,"metadata":{},"sourceType":"script"}