{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/FeedTile.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport contractMap from 'eth-contract-metadata';\nimport { toChecksumAddress } from 'ethereumjs-util';\nimport Save from \"../../assets/Save.svg\";\nimport Delete from \"../../assets/Delete.svg\";\nimport FeedTileContext from './FeedTileContext';\nimport Internal from \"../../assets/Internal.svg\";\nimport EthereumLine from \"../../assets/EthereumLine.svg\";\nimport Tokens from \"../../assets/Tokens.svg\";\nimport '../styles/Feed.css'; // import Send from '../../assets/Send.svg';\n// import Receive from '../../assets/Receive.svg';\n\nexport var FeedTileActivity = function FeedTileActivity(_ref) {\n  var item = _ref.item,\n      verifiedGithub = _ref.verifiedGithub,\n      verifiedTwitter = _ref.verifiedTwitter;\n  return React.createElement(\"div\", {\n    className: \"feed__activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.op === 'PUT' ? Save : Delete,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" You \\n            \".concat(item.op === 'PUT' ? 'updated your' : 'removed your', \"\\n            \").concat(item.dataType === 'Private' ? 'private data' : '', \"\\n            \").concat(item.key === 'proof_github' ? 'Github username' : '', \"\\n            \").concat(item.key === 'proof_twitter' ? 'Twitter username' : '', \"\\n            \").concat(item.key !== 'proof_twitter' && item.key !== 'proof_github' && item.dataType !== 'Private' ? item.key.replace(/([A-Z])/g, ' $1').trim().toLowerCase() : '', \" \\n            \"), item.op === 'PUT' ? 'to' : ''), item.op === 'PUT' ? React.createElement(\"p\", {\n    className: \"feed__activity__info__token\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, item.key === 'image' || item.key === 'coverPhoto' ? '' : '', item.key === 'emoji' ? React.createElement(\"span\", {\n    className: \"feed__activity__address__amount__emoji\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value) : '', item.key === 'proof_github' ? verifiedGithub : '', item.key === 'proof_twitter' ? verifiedTwitter : '', typeof item.value === 'object' && item.key !== 'image' && item.key !== 'coverPhoto' ? item.value ? Object.keys(item.value)[0] : '-----' : '', typeof item.value === 'string' && item.key !== 'proof_github' && item.key !== 'proof_twitter' ? item.value : '') : ''), React.createElement(FeedTileContext, {\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), (item.key === 'image' || item.key === 'coverPhoto') && item.value && item.value.length > 0 && item.value[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(item.value[0].contentUrl['/']),\n    className: \"feed__activity__image clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }) : '');\n};\nFeedTileActivity.propTypes = {\n  item: PropTypes.object,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string\n};\nFeedTileActivity.defaultProps = {\n  item: {},\n  verifiedGithub: '',\n  verifiedTwitter: ''\n};\nexport var FeedTileInternal = function FeedTileInternal(_ref2) {\n  var item = _ref2.item,\n      name = _ref2.name,\n      onPublicProfilePage = _ref2.onPublicProfilePage,\n      metaDataName = _ref2.metaDataName,\n      isFromProfile = _ref2.isFromProfile;\n  return React.createElement(\"a\", {\n    href: \"https://etherscan.io/tx/\".concat(item.hash),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"feed__activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, contractMap[toChecksumAddress(isFromProfile ? item.to : item.from)] ? React.createElement(\"img\", {\n    src: \"/contractIcons/\".concat(contractMap[toChecksumAddress(isFromProfile ? item.to : item.from)].logo),\n    alt: \"token icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: Internal,\n    alt: \"Internal Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, onPublicProfilePage && (isFromProfile ? \"\".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\") : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\")), !onPublicProfilePage && (isFromProfile ? 'You sent' : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\"))), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" \").concat(item.tokenSymbol ? item.tokenSymbol : 'Tokens')), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, onPublicProfilePage && (isFromProfile ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to \".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"))), !onPublicProfilePage && (isFromProfile ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to you\"))), React.createElement(FeedTileContext, {\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })));\n};\nFeedTileInternal.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n  isFromProfile: PropTypes.bool\n};\nFeedTileInternal.defaultProps = {\n  item: {},\n  metaDataName: '',\n  name: '',\n  onPublicProfilePage: false,\n  isFromProfile: false\n};\nexport var FeedTileToken = function FeedTileToken(_ref3) {\n  var item = _ref3.item,\n      name = _ref3.name,\n      onPublicProfilePage = _ref3.onPublicProfilePage,\n      metaDataName = _ref3.metaDataName,\n      isFromProfile = _ref3.isFromProfile;\n  return React.createElement(\"a\", {\n    href: \"https://etherscan.io/tx/\".concat(item.hash),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"feed__activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, contractMap[toChecksumAddress(isFromProfile ? item.to : item.from)] ? React.createElement(\"img\", {\n    src: \"/contractIcons/\".concat(contractMap[toChecksumAddress(isFromProfile ? item.to : item.from)].logo),\n    alt: \"token icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: Tokens,\n    alt: \"Token Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, onPublicProfilePage && (isFromProfile ? \"\".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\") : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\")), !onPublicProfilePage && (isFromProfile ? 'You sent' : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\"))), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" \").concat(item.tokenSymbol ? item.tokenSymbol : 'Tokens')), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, onPublicProfilePage && (isFromProfile ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to \".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"))), !onPublicProfilePage && (isFromProfile ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to you\"))), React.createElement(FeedTileContext, {\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })));\n};\nFeedTileToken.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n  isFromProfile: PropTypes.bool\n};\nFeedTileToken.defaultProps = {\n  item: {},\n  metaDataName: '',\n  name: '',\n  onPublicProfilePage: false,\n  isFromProfile: false\n};\nexport var FeedTileTXS = function FeedTileTXS(_ref4) {\n  var item = _ref4.item,\n      name = _ref4.name,\n      onPublicProfilePage = _ref4.onPublicProfilePage,\n      metaDataName = _ref4.metaDataName,\n      isFromProfile = _ref4.isFromProfile;\n  return React.createElement(\"a\", {\n    href: \"https://etherscan.io/tx/\".concat(item.hash),\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"feed__activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, contractMap[toChecksumAddress(isFromProfile ? item.to : item.from)] ? React.createElement(\"img\", {\n    src: \"/contractIcons/\".concat(contractMap[toChecksumAddress(isFromProfile ? item.to : item.from)].logo),\n    alt: \"token icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: EthereumLine,\n    alt: \"Ethereum Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, onPublicProfilePage && (isFromProfile ? \"\".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\") : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\")), !onPublicProfilePage && (isFromProfile ? 'You sent' : \"\".concat(metaDataName || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"), \" sent\"))), React.createElement(\"p\", {\n    className: \"feed__activity__info__token\",\n    title: \"\".concat((Number(item.value) / 1000000000000000000).toString(), \" ETH\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" ETH\")), React.createElement(\"p\", {\n    className: \"feed__activity__info__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, onPublicProfilePage && (isFromProfile ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to \".concat(name || \"\".concat(item.from.toLowerCase().substring(0, 12), \"...\"))), !onPublicProfilePage && (isFromProfile ? \"to \".concat(metaDataName || \"\".concat(item.to.toLowerCase().substring(0, 12), \"...\")) : \"to you\"))), React.createElement(FeedTileContext, {\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  })));\n};\nFeedTileTXS.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n  isFromProfile: PropTypes.bool\n};\nFeedTileTXS.defaultProps = {\n  item: {},\n  metaDataName: '',\n  name: '',\n  onPublicProfilePage: false,\n  isFromProfile: false\n};","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/FeedTile.jsx"],"names":["React","PropTypes","contractMap","toChecksumAddress","FeedTileContext","FeedTileActivity","item","verifiedGithub","verifiedTwitter","op","Save","Delete","dataType","key","replace","trim","toLowerCase","value","Object","keys","length","contentUrl","propTypes","object","string","defaultProps","FeedTileInternal","name","onPublicProfilePage","metaDataName","isFromProfile","hash","to","from","logo","Internal","substring","Number","toString","tokenSymbol","bool","FeedTileToken","Tokens","FeedTileTXS","EthereumLine"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport contractMap from 'eth-contract-metadata';\nimport {\n  toChecksumAddress,\n} from 'ethereumjs-util';\n\nimport Save from '../../assets/Save.svg';\nimport Delete from '../../assets/Delete.svg';\nimport FeedTileContext from './FeedTileContext';\nimport Internal from '../../assets/Internal.svg';\nimport EthereumLine from '../../assets/EthereumLine.svg';\nimport Tokens from '../../assets/Tokens.svg';\nimport '../styles/Feed.css';\n// import Send from '../../assets/Send.svg';\n// import Receive from '../../assets/Receive.svg';\n\nexport const FeedTileActivity = ({ item, verifiedGithub, verifiedTwitter }) => (\n  <div className=\"feed__activity\">\n    <div className=\"feed__activity__data\">\n      <div className=\"feed__activity__info\">\n        <img src={item.op === 'PUT' ? Save : Delete} alt=\"Transaction Icon\" />\n\n        <p className=\"feed__activity__info__key\">\n          {` You \n            ${item.op === 'PUT' ? 'updated your' : 'removed your'}\n            ${item.dataType === 'Private' ? 'private data' : ''}\n            ${item.key === 'proof_github' ? 'Github username' : ''}\n            ${item.key === 'proof_twitter' ? 'Twitter username' : ''}\n            ${(item.key !== 'proof_twitter' && item.key !== 'proof_github' && item.dataType !== 'Private')\n              ? (item.key).replace(/([A-Z])/g, ' $1').trim().toLowerCase()\n              : ''} \n            `}\n          {item.op === 'PUT' ? 'to' : ''}\n        </p>\n\n        {item.op === 'PUT' ? (\n          <p className=\"feed__activity__info__token\">\n            {(item.key === 'image' || item.key === 'coverPhoto')\n              ? '' : ''}\n            {item.key === 'emoji'\n              ? (\n                <span className=\"feed__activity__address__amount__emoji\">\n                  {typeof item.value === 'object' ? Object.keys(item.value)[0] : item.value}\n                </span>\n              ) : ''}\n            {item.key === 'proof_github'\n              ? verifiedGithub : ''}\n            {item.key === 'proof_twitter'\n              ? verifiedTwitter : ''}\n\n            {(typeof item.value === 'object' && (item.key !== 'image' && item.key !== 'coverPhoto'))\n              ? (item.value ? Object.keys(item.value)[0] : '-----')\n              : ''}\n\n            {typeof item.value === 'string' && (item.key !== 'proof_github' && item.key !== 'proof_twitter')\n              ? item.value : ''}\n          </p>) : ''}\n      </div>\n      <FeedTileContext item={item} />\n    </div>\n\n    {((item.key === 'image' || item.key === 'coverPhoto')\n      && item.value\n      && item.value.length > 0\n      && item.value[0].contentUrl)\n      ? (\n        <img src={`https://ipfs.infura.io/ipfs/${item.value[0].contentUrl['/']}`} className=\"feed__activity__image clearProfPic\" alt=\"profile\" />\n      ) : ''\n    }\n  </div>\n);\n\nFeedTileActivity.propTypes = {\n  item: PropTypes.object,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n};\n\nFeedTileActivity.defaultProps = {\n  item: {},\n  verifiedGithub: '',\n  verifiedTwitter: '',\n};\n\nexport const FeedTileInternal = ({ item, name, onPublicProfilePage, metaDataName, isFromProfile }) => (\n  <a href={`https://etherscan.io/tx/${item.hash}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"feed__activity\">\n    <div className=\"feed__activity__data\">\n      <div className=\"feed__activity__info\">\n        {\n          (contractMap[toChecksumAddress(isFromProfile ? item.to : item.from)])\n            ? <img src={`/contractIcons/${contractMap[toChecksumAddress(isFromProfile ? item.to : item.from)].logo}`} alt=\"token icon\" />\n            : <img src={Internal} alt=\"Internal Transaction Icon\" />\n        }\n        <p className=\"feed__activity__info__key\">\n          {onPublicProfilePage && (isFromProfile\n            ? `${name || `${item.from.toLowerCase().substring(0, 12)}...`} sent`\n            : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n          }\n          {!onPublicProfilePage && (isFromProfile\n            ? 'You sent'\n            : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n          }\n        </p>\n        <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n          {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ${item.tokenSymbol ? item.tokenSymbol : 'Tokens'}`}\n        </p>\n        <p className=\"feed__activity__info__key\">\n          {onPublicProfilePage && (isFromProfile\n            ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n            : `to ${name || `${item.from.toLowerCase().substring(0, 12)}...`}`)\n          }\n          {!onPublicProfilePage && (isFromProfile\n            ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n            : `to you`)\n          }\n        </p>\n      </div>\n      <FeedTileContext item={item} />\n    </div>\n  </a>\n);\n\nFeedTileInternal.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n  isFromProfile: PropTypes.bool,\n};\n\nFeedTileInternal.defaultProps = {\n  item: {},\n  metaDataName: '',\n  name: '',\n  onPublicProfilePage: false,\n  isFromProfile: false,\n};\n\nexport const FeedTileToken = ({ item, name, onPublicProfilePage, metaDataName, isFromProfile }) => (\n  <a href={`https://etherscan.io/tx/${item.hash}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"feed__activity\">\n    <div className=\"feed__activity__data\">\n      <div className=\"feed__activity__info\">\n        {\n          (contractMap[toChecksumAddress(isFromProfile ? item.to : item.from)])\n            ? <img src={`/contractIcons/${contractMap[toChecksumAddress(isFromProfile ? item.to : item.from)].logo}`} alt=\"token icon\" />\n            : <img src={Tokens} alt=\"Token Transaction Icon\" />\n        }\n        <p className=\"feed__activity__info__key\">\n          {onPublicProfilePage && (isFromProfile\n            ? `${name || `${item.from.toLowerCase().substring(0, 12)}...`} sent`\n            : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n          }\n          {!onPublicProfilePage && (isFromProfile\n            ? 'You sent'\n            : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n          }\n        </p>\n        <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n          {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ${item.tokenSymbol ? item.tokenSymbol : 'Tokens'}`}\n        </p>\n        <p className=\"feed__activity__info__key\">\n          {onPublicProfilePage && (isFromProfile\n            ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n            : `to ${name || `${item.from.toLowerCase().substring(0, 12)}...`}`)\n          }\n          {!onPublicProfilePage && (isFromProfile\n            ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n            : `to you`)\n          }\n        </p>\n      </div>\n      <FeedTileContext item={item} />\n    </div>\n  </a>\n);\n\nFeedTileToken.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n  isFromProfile: PropTypes.bool,\n};\n\nFeedTileToken.defaultProps = {\n  item: {},\n  metaDataName: '',\n  name: '',\n  onPublicProfilePage: false,\n  isFromProfile: false,\n};\n\nexport const FeedTileTXS = ({ item, name, onPublicProfilePage, metaDataName, isFromProfile }) => (\n  <a href={`https://etherscan.io/tx/${item.hash}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"feed__activity\">\n    <div className=\"feed__activity__data\">\n      <div className=\"feed__activity__info\">\n        {\n          (contractMap[toChecksumAddress(isFromProfile ? item.to : item.from)])\n            ? <img src={`/contractIcons/${contractMap[toChecksumAddress(isFromProfile ? item.to : item.from)].logo}`} alt=\"token icon\" />\n            : <img src={EthereumLine} alt=\"Ethereum Transaction Icon\" />\n        }\n        <p className=\"feed__activity__info__key\">\n          {onPublicProfilePage && (isFromProfile\n            ? `${name || `${item.from.toLowerCase().substring(0, 12)}...`} sent`\n            : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n          }\n          {!onPublicProfilePage && (isFromProfile\n            ? 'You sent'\n            : `${metaDataName || `${item.from.toLowerCase().substring(0, 12)}...`} sent`)\n          }\n        </p>\n        <p className=\"feed__activity__info__token\" title={`${(Number(item.value) / 1000000000000000000).toString()} ETH`}>\n          {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ETH`}\n        </p>\n        <p className=\"feed__activity__info__key\">\n          {onPublicProfilePage && (isFromProfile\n            ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n            : `to ${name || `${item.from.toLowerCase().substring(0, 12)}...`}`)\n          }\n          {!onPublicProfilePage && (isFromProfile\n            ? `to ${metaDataName || `${item.to.toLowerCase().substring(0, 12)}...`}`\n            : `to you`)\n          }\n        </p>\n      </div>\n      <FeedTileContext item={item} />\n    </div>\n  </a>\n);\n\nFeedTileTXS.propTypes = {\n  item: PropTypes.object,\n  metaDataName: PropTypes.string,\n  name: PropTypes.string,\n  onPublicProfilePage: PropTypes.bool,\n  isFromProfile: PropTypes.bool,\n};\n\nFeedTileTXS.defaultProps = {\n  item: {},\n  metaDataName: '',\n  name: '',\n  onPublicProfilePage: false,\n  isFromProfile: false,\n};"]},"metadata":{},"sourceType":"module"}