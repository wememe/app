{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/Profile/SideBar.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\nimport PublicDetails from './PublicDetails.jsx';\nimport { address } from '../../utils/address';\nimport { copyToClipBoard } from '../../state/actions';\nimport * as routes from '../../utils/routes';\nimport EthereumLogo from \"../../assets/EthereumIcon.svg\";\nimport Copy from \"../../assets/Copy.svg\";\nimport '../../views/styles/Profile.css';\nimport '../styles/Modal.css';\n\nvar SideBar = function SideBar(_ref) {\n  var name = _ref.name,\n      image = _ref.image,\n      coverPhoto = _ref.coverPhoto,\n      description = _ref.description,\n      emoji = _ref.emoji,\n      publicProfile = _ref.publicProfile,\n      location = _ref.location,\n      onPublicProfilePage = _ref.onPublicProfilePage,\n      copyToClipBoard = _ref.copyToClipBoard,\n      copySuccessful = _ref.copySuccessful,\n      showDownloadBanner = _ref.showDownloadBanner,\n      publicVerifiedAccounts = _ref.publicVerifiedAccounts;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, !onPublicProfilePage && (coverPhoto.length > 0 && coverPhoto[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(coverPhoto[0].contentUrl['/']),\n    className: \"\".concat(showDownloadBanner ? 'bannerMargin' : '', \" profile__coverPhoto clearProfPic\"),\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"\".concat(showDownloadBanner ? 'bannerMargin' : '', \" profile__coverPhoto\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), onPublicProfilePage && publicProfile.coverPhoto && (publicProfile.coverPhoto.length > 0 && publicProfile.coverPhoto[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(publicProfile.coverPhoto[0].contentUrl['/']),\n    className: \"\".concat(showDownloadBanner ? 'bannerMargin' : '', \" profile__coverPhoto clearProfPic\"),\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"\".concat(showDownloadBanner ? 'bannerMargin' : '', \" profile__coverPhoto\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"\".concat(showDownloadBanner ? 'bannerMargin' : '', \" profile__user__info\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, !onPublicProfilePage && (image.length > 0 && image[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(image[0].contentUrl['/']),\n    className: \"profile__user__picture clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"profile__user__picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), onPublicProfilePage && publicProfile.image && (publicProfile.image.length > 0 && publicProfile.image[0].contentUrl ? React.createElement(\"img\", {\n    src: \"https://ipfs.infura.io/ipfs/\".concat(publicProfile.image[0].contentUrl['/']),\n    className: \"profile__user__picture clearProfPic\",\n    alt: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"profile__user__picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"profile__basic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile__basic__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, !onPublicProfilePage && (name ? React.createElement(\"h2\", {\n    id: \"profile__user__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, name) : React.createElement(Link, {\n    to: routes.EDITPROFILE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"profile__user__name__add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Add name\"))), onPublicProfilePage && publicProfile.name && (publicProfile.name ? React.createElement(\"h2\", {\n    id: \"profile__user__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, publicProfile.name) : React.createElement(Link, {\n    to: routes.EDITPROFILE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"profile__user__name__add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Add name\"))), React.createElement(\"span\", {\n    className: \"profile__basic__emoji\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, !onPublicProfilePage && (emoji.code ? emoji.code : emoji), onPublicProfilePage && publicProfile.emoji && (publicProfile.emoji.code ? publicProfile.emoji.code : publicProfile.emoji))), React.createElement(\"div\", {\n    id: \"profile__network\",\n    title: \"Network\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    id: \"profile__network__networkLogo\",\n    src: EthereumLogo,\n    alt: \"Ethereum Logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"profile__details__address\",\n    title: address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, !onPublicProfilePage && address && address.substring(0, 8), onPublicProfilePage && location.pathname.split('/')[2].substring(0, 8), \"...\")), React.createElement(\"p\", {\n    className: \"profile__basic__description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, !onPublicProfilePage && description, onPublicProfilePage && publicProfile.description && publicProfile.description)), (!onPublicProfilePage || address === location.pathname.split('/')[2]) && React.createElement(\"div\", {\n    className: \"profile__links\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, !onPublicProfilePage ? React.createElement(Link, {\n    to: \"\".concat(routes.PUBLIC_BASE, \"/\").concat(address).concat(routes.PUBLIC_ACTIVITY_ROUTE),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"View\") : address === location.pathname.split('/')[2] && React.createElement(Link, {\n    to: routes.PROFILE_ACTIVITY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Return\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return copyToClipBoard();\n    },\n    className: \"profile__links__copy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Share\")), React.createElement(\"div\", {\n    className: \"profile__category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile__category__sectionWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, !onPublicProfilePage ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    exact: true,\n    to: onPublicProfilePage ? \"\".concat(routes.PUBLIC_BASE, \"/\").concat(location.pathname.split('/')[2]).concat(routes.PUBLIC_ACTIVITY_ROUTE) : routes.PROFILE_ACTIVITY,\n    className: \"profile__category__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Activity\"), React.createElement(NavLink, {\n    exact: true,\n    to: onPublicProfilePage ? \"\".concat(routes.PUBLIC_BASE, \"/\").concat(location.pathname.split('/')[2]).concat(routes.PUBLIC_DETAILS_ROUTE) : routes.PROFILE_ABOUT,\n    className: \"profile__category__section \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Details\")) : React.createElement(PublicDetails, {\n    email: publicProfile.email,\n    website: publicProfile.website,\n    location: publicProfile.location,\n    birthday: publicProfile.birthday,\n    job: publicProfile.job,\n    school: publicProfile.school,\n    degree: publicProfile.degree,\n    major: publicProfile.major,\n    year: publicProfile.year,\n    employer: publicProfile.employer,\n    memberSince: publicProfile.memberSince,\n    verifiedTwitter: publicVerifiedAccounts.verifiedTwitter,\n    verifiedGithub: publicVerifiedAccounts.verifiedGithub // publicVerifiedAccounts={publicVerifiedAccounts}\n    // publicProfile={publicProfile}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    id: \"profile__footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__footer__contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"3Box 2018\"), React.createElement(Link, {\n    to: routes.TERMS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Terms\"), React.createElement(Link, {\n    to: routes.PRIVACY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Privacy\"))))), React.createElement(\"div\", {\n    className: \"\".concat(copySuccessful ? 'showModal' : '', \" modal__container--copied modal--effect\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal--sync\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal--sync__copy__wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Copy,\n    className: \"modal__copy__ico\",\n    alt: \"Copied\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"COPIED PROFILE URL\")))));\n};\n\nSideBar.propTypes = {\n  copyToClipBoard: PropTypes.func.isRequired,\n  name: PropTypes.string,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n  email: PropTypes.string,\n  website: PropTypes.string,\n  job: PropTypes.string,\n  school: PropTypes.string,\n  degree: PropTypes.string,\n  memberSince: PropTypes.string,\n  major: PropTypes.string,\n  year: PropTypes.string,\n  employer: PropTypes.string,\n  birthday: PropTypes.string,\n  emoji: PropTypes.string,\n  image: PropTypes.array,\n  coverPhoto: PropTypes.array,\n  description: PropTypes.string,\n  publicVerifiedAccounts: PropTypes.object,\n  publicProfile: PropTypes.object,\n  location: PropTypes.object.isRequired,\n  onPublicProfilePage: PropTypes.bool,\n  copySuccessful: PropTypes.bool,\n  showDownloadBanner: PropTypes.bool\n};\nSideBar.defaultProps = {\n  name: '',\n  verifiedGithub: '',\n  verifiedTwitter: '',\n  email: '',\n  description: '',\n  image: [],\n  coverPhoto: [],\n  emoji: '',\n  memberSince: '',\n  website: '',\n  birthday: '',\n  job: '',\n  school: '',\n  degree: '',\n  major: '',\n  year: '',\n  employer: '',\n  publicProfile: {},\n  copySuccessful: false,\n  onPublicProfilePage: false,\n  publicVerifiedAccounts: {},\n  showDownloadBanner: false\n};\n\nfunction mapState(state) {\n  return {\n    name: state.threeBox.name,\n    verifiedGithub: state.threeBox.verifiedGithub,\n    verifiedTwitter: state.threeBox.verifiedTwitter,\n    image: state.threeBox.image,\n    coverPhoto: state.threeBox.coverPhoto,\n    emoji: state.threeBox.emoji,\n    email: state.threeBox.email,\n    description: state.threeBox.description,\n    website: state.threeBox.website,\n    birthday: state.threeBox.birthday,\n    memberSince: state.threeBox.memberSince,\n    job: state.threeBox.job,\n    school: state.threeBox.school,\n    degree: state.threeBox.degree,\n    major: state.threeBox.major,\n    year: state.threeBox.year,\n    employer: state.threeBox.employer,\n    copySuccessful: state.threeBox.copySuccessful,\n    showDownloadBanner: state.threeBox.showDownloadBanner,\n    onPublicProfilePage: state.threeBox.onPublicProfilePage,\n    publicVerifiedAccounts: state.threeBox.publicVerifiedAccounts,\n    publicProfile: state.threeBox.publicProfile\n  };\n}\n\nexport default withRouter(connect(mapState, {\n  copyToClipBoard: copyToClipBoard\n})(SideBar));","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/Profile/SideBar.jsx"],"names":["React","PropTypes","connect","Link","NavLink","withRouter","PublicDetails","address","copyToClipBoard","routes","SideBar","name","image","coverPhoto","description","emoji","publicProfile","location","onPublicProfilePage","copySuccessful","showDownloadBanner","publicVerifiedAccounts","length","contentUrl","EDITPROFILE","code","EthereumLogo","substring","pathname","split","PUBLIC_BASE","PUBLIC_ACTIVITY_ROUTE","PROFILE_ACTIVITY","PUBLIC_DETAILS_ROUTE","PROFILE_ABOUT","email","website","birthday","job","school","degree","major","year","employer","memberSince","verifiedTwitter","verifiedGithub","TERMS","PRIVACY","Copy","propTypes","func","isRequired","string","array","object","bool","defaultProps","mapState","state","threeBox"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\n\nimport PublicDetails from './PublicDetails.jsx';\nimport { address } from '../../utils/address';\nimport { copyToClipBoard } from '../../state/actions';\nimport * as routes from '../../utils/routes';\nimport EthereumLogo from '../../assets/EthereumIcon.svg';\nimport Copy from '../../assets/Copy.svg';\nimport '../../views/styles/Profile.css';\nimport '../styles/Modal.css';\n\nconst SideBar = ({\n  name,\n  image,\n  coverPhoto,\n  description,\n  emoji,\n  publicProfile,\n  location,\n  onPublicProfilePage,\n  copyToClipBoard,\n  copySuccessful,\n  showDownloadBanner,\n  publicVerifiedAccounts,\n}) => (\n    <div>\n      {!onPublicProfilePage && (\n        coverPhoto.length > 0 && coverPhoto[0].contentUrl\n          ? <img src={`https://ipfs.infura.io/ipfs/${coverPhoto[0].contentUrl['/']}`} className={`${showDownloadBanner ? 'bannerMargin' : ''} profile__coverPhoto clearProfPic`} alt=\"profile\" />\n          : <div className={`${showDownloadBanner ? 'bannerMargin' : ''} profile__coverPhoto`} />)\n      }\n\n      {(onPublicProfilePage && publicProfile.coverPhoto) && (\n        publicProfile.coverPhoto.length > 0 && publicProfile.coverPhoto[0].contentUrl\n          ? <img src={`https://ipfs.infura.io/ipfs/${publicProfile.coverPhoto[0].contentUrl['/']}`} className={`${showDownloadBanner ? 'bannerMargin' : ''} profile__coverPhoto clearProfPic`} alt=\"profile\" />\n          : <div className={`${showDownloadBanner ? 'bannerMargin' : ''} profile__coverPhoto`} />)\n      }\n\n      <div id=\"profile\">\n        <div id=\"profile__fixed\">\n\n          <div className={`${showDownloadBanner ? 'bannerMargin' : ''} profile__user__info`} >\n\n            {!onPublicProfilePage && (\n              image.length > 0 && image[0].contentUrl\n                ? <img src={`https://ipfs.infura.io/ipfs/${image[0].contentUrl['/']}`} className=\"profile__user__picture clearProfPic\" alt=\"profile\" />\n                : <div className=\"profile__user__picture\" />)\n            }\n\n            {(onPublicProfilePage && publicProfile.image) && (\n              publicProfile.image.length > 0 && publicProfile.image[0].contentUrl\n                ? <img src={`https://ipfs.infura.io/ipfs/${publicProfile.image[0].contentUrl['/']}`} className=\"profile__user__picture clearProfPic\" alt=\"profile\" />\n                : <div className=\"profile__user__picture\" />)\n            }\n\n            <div className=\"profile__basic\">\n              <div className=\"profile__basic__wrapper\">\n                {!onPublicProfilePage && (name\n                  ? <h2 id=\"profile__user__name\">{name}</h2>\n                  : <Link to={routes.EDITPROFILE}><h2 id=\"profile__user__name__add\">Add name</h2></Link>)\n                }\n\n                {(onPublicProfilePage && publicProfile.name) && (publicProfile.name\n                  ? <h2 id=\"profile__user__name\">{publicProfile.name}</h2>\n                  : <Link to={routes.EDITPROFILE}><h2 id=\"profile__user__name__add\">Add name</h2></Link>)\n                }\n\n\n                <span className=\"profile__basic__emoji\">\n                  {!onPublicProfilePage && (emoji.code ? emoji.code : emoji)}\n                  {(onPublicProfilePage && publicProfile.emoji) && (publicProfile.emoji.code ? publicProfile.emoji.code : publicProfile.emoji)}\n                </span>\n              </div>\n\n              <div id=\"profile__network\" title=\"Network\">\n                <img id=\"profile__network__networkLogo\" src={EthereumLogo} alt=\"Ethereum Logo\" />\n                <p id=\"profile__details__address\" title={address}>\n                  {!onPublicProfilePage && address && address.substring(0, 8)}\n                  {onPublicProfilePage && location.pathname.split('/')[2].substring(0, 8)}\n                  ...\n                </p>\n              </div>\n\n              <p className=\"profile__basic__description\">\n                {!onPublicProfilePage && description}\n                {(onPublicProfilePage && publicProfile.description) && publicProfile.description}\n              </p>\n\n            </div>\n\n            {/* this is showing when its not supposed to, how does it know that its my address??? */}\n            {(!onPublicProfilePage || address === location.pathname.split('/')[2])\n              && (\n                <div className=\"profile__links\">\n                  {/* If /profile show link to my profile */}\n                  {!onPublicProfilePage\n                    ? (\n                      <Link to={`${routes.PUBLIC_BASE}/${address}${routes.PUBLIC_ACTIVITY_ROUTE}`}>\n                        View\n                      </Link>\n                    )\n                    : address === location.pathname.split('/')[2] && (\n                      <Link to={routes.PROFILE_ACTIVITY}>\n                        Return\n                      </Link>\n                    )\n                  }\n                  <button type=\"button\" onClick={() => copyToClipBoard()} className=\"profile__links__copy\">\n                    Share\n                  </button>\n                </div>)}\n\n            <div className=\"profile__category\">\n              <div className=\"profile__category__sectionWrapper\">\n                {!onPublicProfilePage ? (\n                  <React.Fragment>\n                    <NavLink exact to={onPublicProfilePage ? `${routes.PUBLIC_BASE}/${location.pathname.split('/')[2]}${routes.PUBLIC_ACTIVITY_ROUTE}` : routes.PROFILE_ACTIVITY} className=\"profile__category__section\">Activity</NavLink>\n                    <NavLink exact to={onPublicProfilePage ? `${routes.PUBLIC_BASE}/${location.pathname.split('/')[2]}${routes.PUBLIC_DETAILS_ROUTE}` : routes.PROFILE_ABOUT} className=\"profile__category__section \">Details</NavLink>\n                  </React.Fragment>)\n                  : (\n                    <PublicDetails\n                      email={publicProfile.email}\n                      website={publicProfile.website}\n                      location={publicProfile.location}\n                      birthday={publicProfile.birthday}\n                      job={publicProfile.job}\n                      school={publicProfile.school}\n                      degree={publicProfile.degree}\n                      major={publicProfile.major}\n                      year={publicProfile.year}\n                      employer={publicProfile.employer}\n                      memberSince={publicProfile.memberSince}\n                      verifiedTwitter={publicVerifiedAccounts.verifiedTwitter}\n                      verifiedGithub={publicVerifiedAccounts.verifiedGithub}\n                      // publicVerifiedAccounts={publicVerifiedAccounts}\n                      // publicProfile={publicProfile}\n                    />)}\n              </div>\n            </div>\n\n          </div>\n\n          <div id=\"profile__footer\">\n            <div id=\"profile__footer__contents\">\n              <p>3Box 2018</p>\n              <Link to={routes.TERMS}>Terms</Link>\n              <Link to={routes.PRIVACY}>Privacy</Link>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <div className={`${copySuccessful ? 'showModal' : ''} modal__container--copied modal--effect`}>\n        <div className=\"modal--sync\">\n          <div className=\"modal--sync__copy__wrapper\">\n            <img src={Copy} className=\"modal__copy__ico\" alt=\"Copied\" />\n            <p>COPIED PROFILE URL</p>\n          </div>\n        </div>\n      </div>\n    </div >\n  );\n\nSideBar.propTypes = {\n  copyToClipBoard: PropTypes.func.isRequired,\n  name: PropTypes.string,\n  verifiedGithub: PropTypes.string,\n  verifiedTwitter: PropTypes.string,\n  email: PropTypes.string,\n  website: PropTypes.string,\n  job: PropTypes.string,\n  school: PropTypes.string,\n  degree: PropTypes.string,\n  memberSince: PropTypes.string,\n  major: PropTypes.string,\n  year: PropTypes.string,\n  employer: PropTypes.string,\n  birthday: PropTypes.string,\n  emoji: PropTypes.string,\n  image: PropTypes.array,\n  coverPhoto: PropTypes.array,\n  description: PropTypes.string,\n  publicVerifiedAccounts: PropTypes.object,\n  publicProfile: PropTypes.object,\n  location: PropTypes.object.isRequired,\n  onPublicProfilePage: PropTypes.bool,\n  copySuccessful: PropTypes.bool,\n  showDownloadBanner: PropTypes.bool,\n};\n\nSideBar.defaultProps = {\n  name: '',\n  verifiedGithub: '',\n  verifiedTwitter: '',\n  email: '',\n  description: '',\n  image: [],\n  coverPhoto: [],\n  emoji: '',\n  memberSince: '',\n  website: '',\n  birthday: '',\n  job: '',\n  school: '',\n  degree: '',\n  major: '',\n  year: '',\n  employer: '',\n  publicProfile: {},\n  copySuccessful: false,\n  onPublicProfilePage: false,\n  publicVerifiedAccounts: {},\n  showDownloadBanner: false,\n};\n\nfunction mapState(state) {\n  return {\n    name: state.threeBox.name,\n    verifiedGithub: state.threeBox.verifiedGithub,\n    verifiedTwitter: state.threeBox.verifiedTwitter,\n    image: state.threeBox.image,\n    coverPhoto: state.threeBox.coverPhoto,\n    emoji: state.threeBox.emoji,\n    email: state.threeBox.email,\n    description: state.threeBox.description,\n    website: state.threeBox.website,\n    birthday: state.threeBox.birthday,\n    memberSince: state.threeBox.memberSince,\n    job: state.threeBox.job,\n    school: state.threeBox.school,\n    degree: state.threeBox.degree,\n    major: state.threeBox.major,\n    year: state.threeBox.year,\n    employer: state.threeBox.employer,\n    copySuccessful: state.threeBox.copySuccessful,\n    showDownloadBanner: state.threeBox.showDownloadBanner,\n    onPublicProfilePage: state.threeBox.onPublicProfilePage,\n    publicVerifiedAccounts: state.threeBox.publicVerifiedAccounts,\n    publicProfile: state.threeBox.publicProfile,\n  };\n}\n\nexport default withRouter(connect(mapState,\n  {\n    copyToClipBoard,\n  })(SideBar));\n"]},"metadata":{},"sourceType":"module"}