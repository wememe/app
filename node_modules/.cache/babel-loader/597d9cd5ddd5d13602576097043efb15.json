{"ast":null,"code":"var _jsxFileName = \"/Users/kenzo/Desktop/3box-dapp/src/components/FeedTileToken.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { timeSince } from '../utils/time';\nimport address from '../utils/address';\nimport Tokens from \"../assets/Tokens.svg\";\nimport Send from \"../assets/Send.svg\";\nimport Receive from \"../assets/Receive.svg\";\nimport './styles/Feed.css';\n\nvar FeedTileAddressToken = function FeedTileAddressToken(_ref) {\n  var item = _ref.item,\n      isEven = _ref.isEven;\n  return React.createElement(\"div\", {\n    className: \"feed__activity___data \".concat(isEven ? 'darkFeed' : 'lightFeed'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feed__activity__address__dataType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Tokens,\n    alt: \"Token Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })), item.from === address ? React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Send,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Send\")) : React.createElement(\"div\", {\n    className: \"feed__activity__address__toFrom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Receive,\n    alt: \"Transaction Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Receive\")), React.createElement(\"p\", {\n    className: \"feed__activity__address__function\",\n    title: item.tokenName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, item.tokenName ? item.tokenName : 'Token'), React.createElement(\"p\", {\n    className: \"feed__activity__address__amount\",\n    title: (Number(item.value) / 1000000000000000000).toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"\".concat(item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6), \" \").concat(item.tokenSymbol ? item.tokenSymbol : 'Tokens')), React.createElement(\"p\", {\n    className: \"feed__activity__address__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, timeSince(item.timeStamp * 1000)));\n};\n\nFeedTileAddressToken.propTypes = {\n  item: PropTypes.object,\n  isEven: PropTypes.bool\n};\nFeedTileAddressToken.defaultProps = {\n  item: {},\n  isEven: false\n};\nexport default FeedTileAddressToken;","map":{"version":3,"sources":["/Users/kenzo/Desktop/3box-dapp/src/components/FeedTileToken.jsx"],"names":["React","PropTypes","timeSince","address","FeedTileAddressToken","item","isEven","Tokens","from","Send","Receive","tokenName","Number","value","toString","substring","tokenSymbol","timeStamp","propTypes","object","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;;AAIA,OAAO,mBAAP;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,MAAT,QAASA,MAAT;AAAA,SAC3B;AAAK,IAAA,SAAS,kCAA2BA,MAAM,GAAG,UAAH,GAAgB,WAAjD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,MAAV;AAAkB,IAAA,GAAG,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGF,IAAI,CAACG,IAAL,KAAcL,OAAd,GAEG;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEM,IAAV;AAAgB,IAAA,GAAG,EAAC,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAFH,GAUG;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,OAAV;AAAmB,IAAA,GAAG,EAAC,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAdN,EAsBE;AAAG,IAAA,SAAS,EAAC,mCAAb;AAAiD,IAAA,KAAK,EAAEL,IAAI,CAACM,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACM,SAAL,GAAiBN,IAAI,CAACM,SAAtB,GAAkC,OADrC,CAtBF,EAyBE;AAAG,IAAA,SAAS,EAAC,iCAAb;AAA+C,IAAA,KAAK,EAAE,CAACC,MAAM,CAACP,IAAI,CAACQ,KAAN,CAAN,GAAqB,mBAAtB,EAA2CC,QAA3C,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACMT,IAAI,CAACQ,KAAL,IAAc,CAACD,MAAM,CAACP,IAAI,CAACQ,KAAN,CAAN,GAAqB,mBAAtB,EAA2CC,QAA3C,GAAsDC,SAAtD,CAAgE,CAAhE,EAAmE,CAAnE,CADpB,cAC6FV,IAAI,CAACW,WAAL,GAAmBX,IAAI,CAACW,WAAxB,GAAsC,QADnI,EAzBF,EA4BE;AAAG,IAAA,SAAS,EAAC,+BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,SAAS,CAACG,IAAI,CAACY,SAAL,GAAiB,IAAlB,CADZ,CA5BF,CAD2B;AAAA,CAA7B;;AAmCAb,oBAAoB,CAACc,SAArB,GAAiC;AAC/Bb,EAAAA,IAAI,EAAEJ,SAAS,CAACkB,MADe;AAE/Bb,EAAAA,MAAM,EAAEL,SAAS,CAACmB;AAFa,CAAjC;AAKAhB,oBAAoB,CAACiB,YAArB,GAAoC;AAClChB,EAAAA,IAAI,EAAE,EAD4B;AAElCC,EAAAA,MAAM,EAAE;AAF0B,CAApC;AAKA,eAAeF,oBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { timeSince } from '../utils/time';\nimport address from '../utils/address';\nimport Tokens from '../assets/Tokens.svg';\nimport Send from '../assets/Send.svg';\nimport Receive from '../assets/Receive.svg';\nimport './styles/Feed.css';\n\nconst FeedTileAddressToken = ({ item, isEven }) => (\n  <div className={`feed__activity___data ${isEven ? 'darkFeed' : 'lightFeed'}`}>\n    <div className=\"feed__activity__address__dataType\">\n      <img src={Tokens} alt=\"Token Icon\" />\n    </div>\n    {item.from === address\n      ? (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Send} alt=\"Transaction Icon\" />\n          <p>\n            Send\n          </p>\n        </div>\n      )\n      : (\n        <div className=\"feed__activity__address__toFrom\">\n          <img src={Receive} alt=\"Transaction Icon\" />\n          <p>\n            Receive\n          </p>\n        </div>\n      )\n    }\n    <p className=\"feed__activity__address__function\" title={item.tokenName}>\n      {item.tokenName ? item.tokenName : 'Token'}\n    </p>\n    <p className=\"feed__activity__address__amount\" title={(Number(item.value) / 1000000000000000000).toString()}>\n      {`${item.value && (Number(item.value) / 1000000000000000000).toString().substring(0, 6)} ${item.tokenSymbol ? item.tokenSymbol : 'Tokens'}`}\n    </p>\n    <p className=\"feed__activity__address__time\">\n      {timeSince(item.timeStamp * 1000)}\n    </p>\n  </div>\n);\n\nFeedTileAddressToken.propTypes = {\n  item: PropTypes.object,\n  isEven: PropTypes.bool,\n};\n\nFeedTileAddressToken.defaultProps = {\n  item: {},\n  isEven: false,\n};\n\nexport default FeedTileAddressToken;\n"]},"metadata":{},"sourceType":"module"}