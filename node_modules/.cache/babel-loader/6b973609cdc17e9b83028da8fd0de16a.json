{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nexports.registerMethod = registerMethod;\nexports.parse = parse;\nexports.resolve = resolve;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar REGISTRY = {};\n\nfunction registerMethod(method, resolver) {\n  REGISTRY[method] = resolver;\n}\n\nfunction parse(did) {\n  if (!did || did === '') throw new Error('Missing DID');\n  var sections = did.match(/^did:([a-zA-Z0-9]+):([[a-zA-Z0-9.-]+)(\\/[^#]*)?(#.*)?$/);\n\n  if (sections) {\n    var parts = {\n      did: sections[0],\n      method: sections[1],\n      id: sections[2]\n    };\n    if (sections[3]) parts.path = sections[3];\n    if (sections[4]) parts.fragment = sections[4].slice(1);\n    return parts;\n  }\n\n  throw new Error('Invalid DID ' + did);\n}\n\nfunction resolve(did) {\n  return new _promise2.default(function (resolve, reject) {\n    var parsed = parse(did);\n    var resolver = REGISTRY[parsed.method];\n\n    if (resolver) {\n      return resolver(did, parsed).then(resolve, reject);\n    }\n\n    reject(new Error('Unsupported DID method: \\'' + parsed.method + '\\''));\n  });\n}\n\nexports.default = resolve;\nresolve.registerMethod = registerMethod;\nresolve.parse = parse;\nmodule.exports = resolve;","map":null,"metadata":{},"sourceType":"script"}