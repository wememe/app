{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/kenzo/Desktop/3box-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar path = require('path');\n\nvar multihash = require('multihashes');\n\nvar OrbitDBAddress =\n/*#__PURE__*/\nfunction () {\n  function OrbitDBAddress(root, path) {\n    _classCallCheck(this, OrbitDBAddress);\n\n    this.root = root;\n    this.path = path;\n  }\n\n  _createClass(OrbitDBAddress, [{\n    key: \"toString\",\n    value: function toString() {\n      return path.join('/orbitdb', this.root, this.path);\n    }\n  }], [{\n    key: \"isValid\",\n    value: function isValid(address) {\n      var parts = address.toString().split('/').filter(function (e, i) {\n        return !((i === 0 || i === 1) && address.toString().indexOf('/orbit') === 0 && e === 'orbitdb');\n      }).filter(function (e) {\n        return e !== '' && e !== ' ';\n      });\n      var accessControllerHash = parts[0].indexOf('Qm') > -1 ? multihash.fromB58String(parts[0]) : null;\n\n      try {\n        multihash.validate(accessControllerHash);\n      } catch (e) {\n        return false;\n      }\n\n      return accessControllerHash !== null;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(address) {\n      if (!address) throw new Error(\"Not a valid OrbitDB address: \".concat(address));\n      if (!OrbitDBAddress.isValid(address)) throw new Error(\"Not a valid OrbitDB address: \".concat(address));\n      var parts = address.toString().split('/').filter(function (e, i) {\n        return !((i === 0 || i === 1) && address.toString().indexOf('/orbit') === 0 && e === 'orbitdb');\n      }).filter(function (e) {\n        return e !== '' && e !== ' ';\n      });\n      return new OrbitDBAddress(parts[0], parts.slice(1, parts.length).join('/'));\n    }\n  }]);\n\n  return OrbitDBAddress;\n}();\n\nmodule.exports = OrbitDBAddress;","map":null,"metadata":{},"sourceType":"script"}